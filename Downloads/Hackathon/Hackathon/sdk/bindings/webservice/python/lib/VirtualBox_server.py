##################################################
# file: VirtualBox_server.py
#
# skeleton generated by "ZSI.generate.wsdl2dispatch.ServiceModuleWriter"
#      /usr/bin/wsdl2py -b /home/vbox/tinderbox/5.0-sdk/out/linux.amd64/release/obj/webservice/vboxwebService.wsdl
#
##################################################

from ZSI.schema import GED, GTD
from ZSI.TCcompound import ComplexType, Struct
from VirtualBox_types import *
from ZSI.ServiceContainer import ServiceSOAPBinding

# Messages  
IVirtualBoxErrorInfo_getResultCodeRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBoxErrorInfo_getResultCode").pyclass

IVirtualBoxErrorInfo_getResultCodeResultMsg = GED("http://www.virtualbox.org/", "IVirtualBoxErrorInfo_getResultCodeResponse").pyclass

IVirtualBoxErrorInfo_getResultDetailRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBoxErrorInfo_getResultDetail").pyclass

IVirtualBoxErrorInfo_getResultDetailResultMsg = GED("http://www.virtualbox.org/", "IVirtualBoxErrorInfo_getResultDetailResponse").pyclass

IVirtualBoxErrorInfo_getInterfaceIDRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBoxErrorInfo_getInterfaceID").pyclass

IVirtualBoxErrorInfo_getInterfaceIDResultMsg = GED("http://www.virtualbox.org/", "IVirtualBoxErrorInfo_getInterfaceIDResponse").pyclass

IVirtualBoxErrorInfo_getComponentRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBoxErrorInfo_getComponent").pyclass

IVirtualBoxErrorInfo_getComponentResultMsg = GED("http://www.virtualbox.org/", "IVirtualBoxErrorInfo_getComponentResponse").pyclass

IVirtualBoxErrorInfo_getTextRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBoxErrorInfo_getText").pyclass

IVirtualBoxErrorInfo_getTextResultMsg = GED("http://www.virtualbox.org/", "IVirtualBoxErrorInfo_getTextResponse").pyclass

IVirtualBoxErrorInfo_getNextRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBoxErrorInfo_getNext").pyclass

IVirtualBoxErrorInfo_getNextResultMsg = GED("http://www.virtualbox.org/", "IVirtualBoxErrorInfo_getNextResponse").pyclass

INATNetwork_getNetworkNameRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_getNetworkName").pyclass

INATNetwork_getNetworkNameResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_getNetworkNameResponse").pyclass

INATNetwork_setNetworkNameRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_setNetworkName").pyclass

INATNetwork_setNetworkNameResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_setNetworkNameResponse").pyclass

INATNetwork_getEnabledRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_getEnabled").pyclass

INATNetwork_getEnabledResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_getEnabledResponse").pyclass

INATNetwork_setEnabledRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_setEnabled").pyclass

INATNetwork_setEnabledResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_setEnabledResponse").pyclass

INATNetwork_getNetworkRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_getNetwork").pyclass

INATNetwork_getNetworkResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_getNetworkResponse").pyclass

INATNetwork_setNetworkRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_setNetwork").pyclass

INATNetwork_setNetworkResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_setNetworkResponse").pyclass

INATNetwork_getGatewayRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_getGateway").pyclass

INATNetwork_getGatewayResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_getGatewayResponse").pyclass

INATNetwork_getIPv6EnabledRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_getIPv6Enabled").pyclass

INATNetwork_getIPv6EnabledResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_getIPv6EnabledResponse").pyclass

INATNetwork_setIPv6EnabledRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_setIPv6Enabled").pyclass

INATNetwork_setIPv6EnabledResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_setIPv6EnabledResponse").pyclass

INATNetwork_getIPv6PrefixRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_getIPv6Prefix").pyclass

INATNetwork_getIPv6PrefixResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_getIPv6PrefixResponse").pyclass

INATNetwork_setIPv6PrefixRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_setIPv6Prefix").pyclass

INATNetwork_setIPv6PrefixResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_setIPv6PrefixResponse").pyclass

INATNetwork_getAdvertiseDefaultIPv6RouteEnabledRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_getAdvertiseDefaultIPv6RouteEnabled").pyclass

INATNetwork_getAdvertiseDefaultIPv6RouteEnabledResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_getAdvertiseDefaultIPv6RouteEnabledResponse").pyclass

INATNetwork_setAdvertiseDefaultIPv6RouteEnabledRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_setAdvertiseDefaultIPv6RouteEnabled").pyclass

INATNetwork_setAdvertiseDefaultIPv6RouteEnabledResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_setAdvertiseDefaultIPv6RouteEnabledResponse").pyclass

INATNetwork_getNeedDhcpServerRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_getNeedDhcpServer").pyclass

INATNetwork_getNeedDhcpServerResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_getNeedDhcpServerResponse").pyclass

INATNetwork_setNeedDhcpServerRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_setNeedDhcpServer").pyclass

INATNetwork_setNeedDhcpServerResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_setNeedDhcpServerResponse").pyclass

INATNetwork_getEventSourceRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_getEventSource").pyclass

INATNetwork_getEventSourceResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_getEventSourceResponse").pyclass

INATNetwork_getPortForwardRules4RequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_getPortForwardRules4").pyclass

INATNetwork_getPortForwardRules4ResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_getPortForwardRules4Response").pyclass

INATNetwork_getLocalMappingsRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_getLocalMappings").pyclass

INATNetwork_getLocalMappingsResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_getLocalMappingsResponse").pyclass

INATNetwork_getLoopbackIp6RequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_getLoopbackIp6").pyclass

INATNetwork_getLoopbackIp6ResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_getLoopbackIp6Response").pyclass

INATNetwork_setLoopbackIp6RequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_setLoopbackIp6").pyclass

INATNetwork_setLoopbackIp6ResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_setLoopbackIp6Response").pyclass

INATNetwork_getPortForwardRules6RequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_getPortForwardRules6").pyclass

INATNetwork_getPortForwardRules6ResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_getPortForwardRules6Response").pyclass

INATNetwork_addLocalMappingRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_addLocalMapping").pyclass

INATNetwork_addLocalMappingResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_addLocalMappingResponse").pyclass

INATNetwork_addPortForwardRuleRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_addPortForwardRule").pyclass

INATNetwork_addPortForwardRuleResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_addPortForwardRuleResponse").pyclass

INATNetwork_removePortForwardRuleRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_removePortForwardRule").pyclass

INATNetwork_removePortForwardRuleResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_removePortForwardRuleResponse").pyclass

INATNetwork_startRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_start").pyclass

INATNetwork_startResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_startResponse").pyclass

INATNetwork_stopRequestMsg = GED("http://www.virtualbox.org/", "INATNetwork_stop").pyclass

INATNetwork_stopResultMsg = GED("http://www.virtualbox.org/", "INATNetwork_stopResponse").pyclass

IDHCPServer_getEventSourceRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getEventSource").pyclass

IDHCPServer_getEventSourceResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getEventSourceResponse").pyclass

IDHCPServer_getEnabledRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getEnabled").pyclass

IDHCPServer_getEnabledResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getEnabledResponse").pyclass

IDHCPServer_setEnabledRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_setEnabled").pyclass

IDHCPServer_setEnabledResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_setEnabledResponse").pyclass

IDHCPServer_getIPAddressRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getIPAddress").pyclass

IDHCPServer_getIPAddressResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getIPAddressResponse").pyclass

IDHCPServer_getNetworkMaskRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getNetworkMask").pyclass

IDHCPServer_getNetworkMaskResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getNetworkMaskResponse").pyclass

IDHCPServer_getNetworkNameRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getNetworkName").pyclass

IDHCPServer_getNetworkNameResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getNetworkNameResponse").pyclass

IDHCPServer_getLowerIPRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getLowerIP").pyclass

IDHCPServer_getLowerIPResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getLowerIPResponse").pyclass

IDHCPServer_getUpperIPRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getUpperIP").pyclass

IDHCPServer_getUpperIPResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getUpperIPResponse").pyclass

IDHCPServer_getGlobalOptionsRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getGlobalOptions").pyclass

IDHCPServer_getGlobalOptionsResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getGlobalOptionsResponse").pyclass

IDHCPServer_getVmConfigsRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getVmConfigs").pyclass

IDHCPServer_getVmConfigsResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getVmConfigsResponse").pyclass

IDHCPServer_addGlobalOptionRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_addGlobalOption").pyclass

IDHCPServer_addGlobalOptionResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_addGlobalOptionResponse").pyclass

IDHCPServer_addVmSlotOptionRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_addVmSlotOption").pyclass

IDHCPServer_addVmSlotOptionResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_addVmSlotOptionResponse").pyclass

IDHCPServer_removeVmSlotOptionsRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_removeVmSlotOptions").pyclass

IDHCPServer_removeVmSlotOptionsResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_removeVmSlotOptionsResponse").pyclass

IDHCPServer_getVmSlotOptionsRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getVmSlotOptions").pyclass

IDHCPServer_getVmSlotOptionsResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getVmSlotOptionsResponse").pyclass

IDHCPServer_getMacOptionsRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getMacOptions").pyclass

IDHCPServer_getMacOptionsResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_getMacOptionsResponse").pyclass

IDHCPServer_setConfigurationRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_setConfiguration").pyclass

IDHCPServer_setConfigurationResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_setConfigurationResponse").pyclass

IDHCPServer_startRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_start").pyclass

IDHCPServer_startResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_startResponse").pyclass

IDHCPServer_stopRequestMsg = GED("http://www.virtualbox.org/", "IDHCPServer_stop").pyclass

IDHCPServer_stopResultMsg = GED("http://www.virtualbox.org/", "IDHCPServer_stopResponse").pyclass

IVirtualBox_getVersionRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getVersion").pyclass

IVirtualBox_getVersionResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getVersionResponse").pyclass

IVirtualBox_getVersionNormalizedRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getVersionNormalized").pyclass

IVirtualBox_getVersionNormalizedResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getVersionNormalizedResponse").pyclass

IVirtualBox_getRevisionRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getRevision").pyclass

IVirtualBox_getRevisionResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getRevisionResponse").pyclass

IVirtualBox_getPackageTypeRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getPackageType").pyclass

IVirtualBox_getPackageTypeResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getPackageTypeResponse").pyclass

IVirtualBox_getAPIVersionRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getAPIVersion").pyclass

IVirtualBox_getAPIVersionResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getAPIVersionResponse").pyclass

IVirtualBox_getAPIRevisionRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getAPIRevision").pyclass

IVirtualBox_getAPIRevisionResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getAPIRevisionResponse").pyclass

IVirtualBox_getHomeFolderRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getHomeFolder").pyclass

IVirtualBox_getHomeFolderResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getHomeFolderResponse").pyclass

IVirtualBox_getSettingsFilePathRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getSettingsFilePath").pyclass

IVirtualBox_getSettingsFilePathResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getSettingsFilePathResponse").pyclass

IVirtualBox_getHostRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getHost").pyclass

IVirtualBox_getHostResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getHostResponse").pyclass

IVirtualBox_getSystemPropertiesRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getSystemProperties").pyclass

IVirtualBox_getSystemPropertiesResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getSystemPropertiesResponse").pyclass

IVirtualBox_getMachinesRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getMachines").pyclass

IVirtualBox_getMachinesResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getMachinesResponse").pyclass

IVirtualBox_getMachineGroupsRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getMachineGroups").pyclass

IVirtualBox_getMachineGroupsResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getMachineGroupsResponse").pyclass

IVirtualBox_getHardDisksRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getHardDisks").pyclass

IVirtualBox_getHardDisksResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getHardDisksResponse").pyclass

IVirtualBox_getDVDImagesRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getDVDImages").pyclass

IVirtualBox_getDVDImagesResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getDVDImagesResponse").pyclass

IVirtualBox_getFloppyImagesRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getFloppyImages").pyclass

IVirtualBox_getFloppyImagesResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getFloppyImagesResponse").pyclass

IVirtualBox_getProgressOperationsRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getProgressOperations").pyclass

IVirtualBox_getProgressOperationsResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getProgressOperationsResponse").pyclass

IVirtualBox_getGuestOSTypesRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getGuestOSTypes").pyclass

IVirtualBox_getGuestOSTypesResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getGuestOSTypesResponse").pyclass

IVirtualBox_getSharedFoldersRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getSharedFolders").pyclass

IVirtualBox_getSharedFoldersResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getSharedFoldersResponse").pyclass

IVirtualBox_getPerformanceCollectorRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getPerformanceCollector").pyclass

IVirtualBox_getPerformanceCollectorResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getPerformanceCollectorResponse").pyclass

IVirtualBox_getDHCPServersRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getDHCPServers").pyclass

IVirtualBox_getDHCPServersResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getDHCPServersResponse").pyclass

IVirtualBox_getNATNetworksRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getNATNetworks").pyclass

IVirtualBox_getNATNetworksResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getNATNetworksResponse").pyclass

IVirtualBox_getEventSourceRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getEventSource").pyclass

IVirtualBox_getEventSourceResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getEventSourceResponse").pyclass

IVirtualBox_getInternalNetworksRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getInternalNetworks").pyclass

IVirtualBox_getInternalNetworksResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getInternalNetworksResponse").pyclass

IVirtualBox_getGenericNetworkDriversRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getGenericNetworkDrivers").pyclass

IVirtualBox_getGenericNetworkDriversResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getGenericNetworkDriversResponse").pyclass

IVirtualBox_composeMachineFilenameRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_composeMachineFilename").pyclass

IVirtualBox_composeMachineFilenameResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_composeMachineFilenameResponse").pyclass

IVirtualBox_createMachineRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_createMachine").pyclass

IVirtualBox_createMachineResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_createMachineResponse").pyclass

IVirtualBox_openMachineRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_openMachine").pyclass

IVirtualBox_openMachineResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_openMachineResponse").pyclass

IVirtualBox_registerMachineRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_registerMachine").pyclass

IVirtualBox_registerMachineResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_registerMachineResponse").pyclass

IVirtualBox_findMachineRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_findMachine").pyclass

IVirtualBox_findMachineResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_findMachineResponse").pyclass

IVirtualBox_getMachinesByGroupsRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getMachinesByGroups").pyclass

IVirtualBox_getMachinesByGroupsResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getMachinesByGroupsResponse").pyclass

IVirtualBox_getMachineStatesRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getMachineStates").pyclass

IVirtualBox_getMachineStatesResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getMachineStatesResponse").pyclass

IVirtualBox_createApplianceRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_createAppliance").pyclass

IVirtualBox_createApplianceResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_createApplianceResponse").pyclass

IVirtualBox_createMediumRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_createMedium").pyclass

IVirtualBox_createMediumResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_createMediumResponse").pyclass

IVirtualBox_openMediumRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_openMedium").pyclass

IVirtualBox_openMediumResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_openMediumResponse").pyclass

IVirtualBox_getGuestOSTypeRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getGuestOSType").pyclass

IVirtualBox_getGuestOSTypeResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getGuestOSTypeResponse").pyclass

IVirtualBox_createSharedFolderRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_createSharedFolder").pyclass

IVirtualBox_createSharedFolderResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_createSharedFolderResponse").pyclass

IVirtualBox_removeSharedFolderRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_removeSharedFolder").pyclass

IVirtualBox_removeSharedFolderResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_removeSharedFolderResponse").pyclass

IVirtualBox_getExtraDataKeysRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getExtraDataKeys").pyclass

IVirtualBox_getExtraDataKeysResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getExtraDataKeysResponse").pyclass

IVirtualBox_getExtraDataRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getExtraData").pyclass

IVirtualBox_getExtraDataResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_getExtraDataResponse").pyclass

IVirtualBox_setExtraDataRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_setExtraData").pyclass

IVirtualBox_setExtraDataResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_setExtraDataResponse").pyclass

IVirtualBox_setSettingsSecretRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_setSettingsSecret").pyclass

IVirtualBox_setSettingsSecretResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_setSettingsSecretResponse").pyclass

IVirtualBox_createDHCPServerRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_createDHCPServer").pyclass

IVirtualBox_createDHCPServerResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_createDHCPServerResponse").pyclass

IVirtualBox_findDHCPServerByNetworkNameRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_findDHCPServerByNetworkName").pyclass

IVirtualBox_findDHCPServerByNetworkNameResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_findDHCPServerByNetworkNameResponse").pyclass

IVirtualBox_removeDHCPServerRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_removeDHCPServer").pyclass

IVirtualBox_removeDHCPServerResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_removeDHCPServerResponse").pyclass

IVirtualBox_createNATNetworkRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_createNATNetwork").pyclass

IVirtualBox_createNATNetworkResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_createNATNetworkResponse").pyclass

IVirtualBox_findNATNetworkByNameRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_findNATNetworkByName").pyclass

IVirtualBox_findNATNetworkByNameResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_findNATNetworkByNameResponse").pyclass

IVirtualBox_removeNATNetworkRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_removeNATNetwork").pyclass

IVirtualBox_removeNATNetworkResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_removeNATNetworkResponse").pyclass

IVirtualBox_checkFirmwarePresentRequestMsg = GED("http://www.virtualbox.org/", "IVirtualBox_checkFirmwarePresent").pyclass

IVirtualBox_checkFirmwarePresentResultMsg = GED("http://www.virtualbox.org/", "IVirtualBox_checkFirmwarePresentResponse").pyclass

IVFSExplorer_getPathRequestMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_getPath").pyclass

IVFSExplorer_getPathResultMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_getPathResponse").pyclass

IVFSExplorer_getTypeRequestMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_getType").pyclass

IVFSExplorer_getTypeResultMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_getTypeResponse").pyclass

IVFSExplorer_updateRequestMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_update").pyclass

IVFSExplorer_updateResultMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_updateResponse").pyclass

IVFSExplorer_cdRequestMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_cd").pyclass

IVFSExplorer_cdResultMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_cdResponse").pyclass

IVFSExplorer_cdUpRequestMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_cdUp").pyclass

IVFSExplorer_cdUpResultMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_cdUpResponse").pyclass

IVFSExplorer_entryListRequestMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_entryList").pyclass

IVFSExplorer_entryListResultMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_entryListResponse").pyclass

IVFSExplorer_existsRequestMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_exists").pyclass

IVFSExplorer_existsResultMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_existsResponse").pyclass

IVFSExplorer_removeRequestMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_remove").pyclass

IVFSExplorer_removeResultMsg = GED("http://www.virtualbox.org/", "IVFSExplorer_removeResponse").pyclass

IAppliance_getPathRequestMsg = GED("http://www.virtualbox.org/", "IAppliance_getPath").pyclass

IAppliance_getPathResultMsg = GED("http://www.virtualbox.org/", "IAppliance_getPathResponse").pyclass

IAppliance_getDisksRequestMsg = GED("http://www.virtualbox.org/", "IAppliance_getDisks").pyclass

IAppliance_getDisksResultMsg = GED("http://www.virtualbox.org/", "IAppliance_getDisksResponse").pyclass

IAppliance_getVirtualSystemDescriptionsRequestMsg = GED("http://www.virtualbox.org/", "IAppliance_getVirtualSystemDescriptions").pyclass

IAppliance_getVirtualSystemDescriptionsResultMsg = GED("http://www.virtualbox.org/", "IAppliance_getVirtualSystemDescriptionsResponse").pyclass

IAppliance_getMachinesRequestMsg = GED("http://www.virtualbox.org/", "IAppliance_getMachines").pyclass

IAppliance_getMachinesResultMsg = GED("http://www.virtualbox.org/", "IAppliance_getMachinesResponse").pyclass

IAppliance_readRequestMsg = GED("http://www.virtualbox.org/", "IAppliance_read").pyclass

IAppliance_readResultMsg = GED("http://www.virtualbox.org/", "IAppliance_readResponse").pyclass

IAppliance_interpretRequestMsg = GED("http://www.virtualbox.org/", "IAppliance_interpret").pyclass

IAppliance_interpretResultMsg = GED("http://www.virtualbox.org/", "IAppliance_interpretResponse").pyclass

IAppliance_importMachinesRequestMsg = GED("http://www.virtualbox.org/", "IAppliance_importMachines").pyclass

IAppliance_importMachinesResultMsg = GED("http://www.virtualbox.org/", "IAppliance_importMachinesResponse").pyclass

IAppliance_createVFSExplorerRequestMsg = GED("http://www.virtualbox.org/", "IAppliance_createVFSExplorer").pyclass

IAppliance_createVFSExplorerResultMsg = GED("http://www.virtualbox.org/", "IAppliance_createVFSExplorerResponse").pyclass

IAppliance_writeRequestMsg = GED("http://www.virtualbox.org/", "IAppliance_write").pyclass

IAppliance_writeResultMsg = GED("http://www.virtualbox.org/", "IAppliance_writeResponse").pyclass

IAppliance_getWarningsRequestMsg = GED("http://www.virtualbox.org/", "IAppliance_getWarnings").pyclass

IAppliance_getWarningsResultMsg = GED("http://www.virtualbox.org/", "IAppliance_getWarningsResponse").pyclass

IAppliance_getPasswordIdsRequestMsg = GED("http://www.virtualbox.org/", "IAppliance_getPasswordIds").pyclass

IAppliance_getPasswordIdsResultMsg = GED("http://www.virtualbox.org/", "IAppliance_getPasswordIdsResponse").pyclass

IAppliance_getMediumIdsForPasswordIdRequestMsg = GED("http://www.virtualbox.org/", "IAppliance_getMediumIdsForPasswordId").pyclass

IAppliance_getMediumIdsForPasswordIdResultMsg = GED("http://www.virtualbox.org/", "IAppliance_getMediumIdsForPasswordIdResponse").pyclass

IAppliance_addPasswordsRequestMsg = GED("http://www.virtualbox.org/", "IAppliance_addPasswords").pyclass

IAppliance_addPasswordsResultMsg = GED("http://www.virtualbox.org/", "IAppliance_addPasswordsResponse").pyclass

IVirtualSystemDescription_getCountRequestMsg = GED("http://www.virtualbox.org/", "IVirtualSystemDescription_getCount").pyclass

IVirtualSystemDescription_getCountResultMsg = GED("http://www.virtualbox.org/", "IVirtualSystemDescription_getCountResponse").pyclass

IVirtualSystemDescription_getDescriptionRequestMsg = GED("http://www.virtualbox.org/", "IVirtualSystemDescription_getDescription").pyclass

IVirtualSystemDescription_getDescriptionResultMsg = GED("http://www.virtualbox.org/", "IVirtualSystemDescription_getDescriptionResponse").pyclass

IVirtualSystemDescription_getDescriptionByTypeRequestMsg = GED("http://www.virtualbox.org/", "IVirtualSystemDescription_getDescriptionByType").pyclass

IVirtualSystemDescription_getDescriptionByTypeResultMsg = GED("http://www.virtualbox.org/", "IVirtualSystemDescription_getDescriptionByTypeResponse").pyclass

IVirtualSystemDescription_getValuesByTypeRequestMsg = GED("http://www.virtualbox.org/", "IVirtualSystemDescription_getValuesByType").pyclass

IVirtualSystemDescription_getValuesByTypeResultMsg = GED("http://www.virtualbox.org/", "IVirtualSystemDescription_getValuesByTypeResponse").pyclass

IVirtualSystemDescription_setFinalValuesRequestMsg = GED("http://www.virtualbox.org/", "IVirtualSystemDescription_setFinalValues").pyclass

IVirtualSystemDescription_setFinalValuesResultMsg = GED("http://www.virtualbox.org/", "IVirtualSystemDescription_setFinalValuesResponse").pyclass

IVirtualSystemDescription_addDescriptionRequestMsg = GED("http://www.virtualbox.org/", "IVirtualSystemDescription_addDescription").pyclass

IVirtualSystemDescription_addDescriptionResultMsg = GED("http://www.virtualbox.org/", "IVirtualSystemDescription_addDescriptionResponse").pyclass

IBIOSSettings_getLogoFadeInRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getLogoFadeIn").pyclass

IBIOSSettings_getLogoFadeInResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getLogoFadeInResponse").pyclass

IBIOSSettings_setLogoFadeInRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setLogoFadeIn").pyclass

IBIOSSettings_setLogoFadeInResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setLogoFadeInResponse").pyclass

IBIOSSettings_getLogoFadeOutRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getLogoFadeOut").pyclass

IBIOSSettings_getLogoFadeOutResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getLogoFadeOutResponse").pyclass

IBIOSSettings_setLogoFadeOutRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setLogoFadeOut").pyclass

IBIOSSettings_setLogoFadeOutResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setLogoFadeOutResponse").pyclass

IBIOSSettings_getLogoDisplayTimeRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getLogoDisplayTime").pyclass

IBIOSSettings_getLogoDisplayTimeResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getLogoDisplayTimeResponse").pyclass

IBIOSSettings_setLogoDisplayTimeRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setLogoDisplayTime").pyclass

IBIOSSettings_setLogoDisplayTimeResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setLogoDisplayTimeResponse").pyclass

IBIOSSettings_getLogoImagePathRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getLogoImagePath").pyclass

IBIOSSettings_getLogoImagePathResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getLogoImagePathResponse").pyclass

IBIOSSettings_setLogoImagePathRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setLogoImagePath").pyclass

IBIOSSettings_setLogoImagePathResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setLogoImagePathResponse").pyclass

IBIOSSettings_getBootMenuModeRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getBootMenuMode").pyclass

IBIOSSettings_getBootMenuModeResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getBootMenuModeResponse").pyclass

IBIOSSettings_setBootMenuModeRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setBootMenuMode").pyclass

IBIOSSettings_setBootMenuModeResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setBootMenuModeResponse").pyclass

IBIOSSettings_getACPIEnabledRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getACPIEnabled").pyclass

IBIOSSettings_getACPIEnabledResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getACPIEnabledResponse").pyclass

IBIOSSettings_setACPIEnabledRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setACPIEnabled").pyclass

IBIOSSettings_setACPIEnabledResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setACPIEnabledResponse").pyclass

IBIOSSettings_getIOAPICEnabledRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getIOAPICEnabled").pyclass

IBIOSSettings_getIOAPICEnabledResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getIOAPICEnabledResponse").pyclass

IBIOSSettings_setIOAPICEnabledRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setIOAPICEnabled").pyclass

IBIOSSettings_setIOAPICEnabledResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setIOAPICEnabledResponse").pyclass

IBIOSSettings_getTimeOffsetRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getTimeOffset").pyclass

IBIOSSettings_getTimeOffsetResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getTimeOffsetResponse").pyclass

IBIOSSettings_setTimeOffsetRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setTimeOffset").pyclass

IBIOSSettings_setTimeOffsetResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setTimeOffsetResponse").pyclass

IBIOSSettings_getPXEDebugEnabledRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getPXEDebugEnabled").pyclass

IBIOSSettings_getPXEDebugEnabledResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getPXEDebugEnabledResponse").pyclass

IBIOSSettings_setPXEDebugEnabledRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setPXEDebugEnabled").pyclass

IBIOSSettings_setPXEDebugEnabledResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_setPXEDebugEnabledResponse").pyclass

IBIOSSettings_getNonVolatileStorageFileRequestMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getNonVolatileStorageFile").pyclass

IBIOSSettings_getNonVolatileStorageFileResultMsg = GED("http://www.virtualbox.org/", "IBIOSSettings_getNonVolatileStorageFileResponse").pyclass

IPCIAddress_getBusRequestMsg = GED("http://www.virtualbox.org/", "IPCIAddress_getBus").pyclass

IPCIAddress_getBusResultMsg = GED("http://www.virtualbox.org/", "IPCIAddress_getBusResponse").pyclass

IPCIAddress_setBusRequestMsg = GED("http://www.virtualbox.org/", "IPCIAddress_setBus").pyclass

IPCIAddress_setBusResultMsg = GED("http://www.virtualbox.org/", "IPCIAddress_setBusResponse").pyclass

IPCIAddress_getDeviceRequestMsg = GED("http://www.virtualbox.org/", "IPCIAddress_getDevice").pyclass

IPCIAddress_getDeviceResultMsg = GED("http://www.virtualbox.org/", "IPCIAddress_getDeviceResponse").pyclass

IPCIAddress_setDeviceRequestMsg = GED("http://www.virtualbox.org/", "IPCIAddress_setDevice").pyclass

IPCIAddress_setDeviceResultMsg = GED("http://www.virtualbox.org/", "IPCIAddress_setDeviceResponse").pyclass

IPCIAddress_getDevFunctionRequestMsg = GED("http://www.virtualbox.org/", "IPCIAddress_getDevFunction").pyclass

IPCIAddress_getDevFunctionResultMsg = GED("http://www.virtualbox.org/", "IPCIAddress_getDevFunctionResponse").pyclass

IPCIAddress_setDevFunctionRequestMsg = GED("http://www.virtualbox.org/", "IPCIAddress_setDevFunction").pyclass

IPCIAddress_setDevFunctionResultMsg = GED("http://www.virtualbox.org/", "IPCIAddress_setDevFunctionResponse").pyclass

IPCIAddress_asLongRequestMsg = GED("http://www.virtualbox.org/", "IPCIAddress_asLong").pyclass

IPCIAddress_asLongResultMsg = GED("http://www.virtualbox.org/", "IPCIAddress_asLongResponse").pyclass

IPCIAddress_fromLongRequestMsg = GED("http://www.virtualbox.org/", "IPCIAddress_fromLong").pyclass

IPCIAddress_fromLongResultMsg = GED("http://www.virtualbox.org/", "IPCIAddress_fromLongResponse").pyclass

IMachine_getParentRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getParent").pyclass

IMachine_getParentResultMsg = GED("http://www.virtualbox.org/", "IMachine_getParentResponse").pyclass

IMachine_getIconRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getIcon").pyclass

IMachine_getIconResultMsg = GED("http://www.virtualbox.org/", "IMachine_getIconResponse").pyclass

IMachine_setIconRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setIcon").pyclass

IMachine_setIconResultMsg = GED("http://www.virtualbox.org/", "IMachine_setIconResponse").pyclass

IMachine_getAccessibleRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getAccessible").pyclass

IMachine_getAccessibleResultMsg = GED("http://www.virtualbox.org/", "IMachine_getAccessibleResponse").pyclass

IMachine_getAccessErrorRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getAccessError").pyclass

IMachine_getAccessErrorResultMsg = GED("http://www.virtualbox.org/", "IMachine_getAccessErrorResponse").pyclass

IMachine_getNameRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getName").pyclass

IMachine_getNameResultMsg = GED("http://www.virtualbox.org/", "IMachine_getNameResponse").pyclass

IMachine_setNameRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setName").pyclass

IMachine_setNameResultMsg = GED("http://www.virtualbox.org/", "IMachine_setNameResponse").pyclass

IMachine_getDescriptionRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getDescription").pyclass

IMachine_getDescriptionResultMsg = GED("http://www.virtualbox.org/", "IMachine_getDescriptionResponse").pyclass

IMachine_setDescriptionRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setDescription").pyclass

IMachine_setDescriptionResultMsg = GED("http://www.virtualbox.org/", "IMachine_setDescriptionResponse").pyclass

IMachine_getIdRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getId").pyclass

IMachine_getIdResultMsg = GED("http://www.virtualbox.org/", "IMachine_getIdResponse").pyclass

IMachine_getGroupsRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getGroups").pyclass

IMachine_getGroupsResultMsg = GED("http://www.virtualbox.org/", "IMachine_getGroupsResponse").pyclass

IMachine_setGroupsRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setGroups").pyclass

IMachine_setGroupsResultMsg = GED("http://www.virtualbox.org/", "IMachine_setGroupsResponse").pyclass

IMachine_getOSTypeIdRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getOSTypeId").pyclass

IMachine_getOSTypeIdResultMsg = GED("http://www.virtualbox.org/", "IMachine_getOSTypeIdResponse").pyclass

IMachine_setOSTypeIdRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setOSTypeId").pyclass

IMachine_setOSTypeIdResultMsg = GED("http://www.virtualbox.org/", "IMachine_setOSTypeIdResponse").pyclass

IMachine_getHardwareVersionRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getHardwareVersion").pyclass

IMachine_getHardwareVersionResultMsg = GED("http://www.virtualbox.org/", "IMachine_getHardwareVersionResponse").pyclass

IMachine_setHardwareVersionRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setHardwareVersion").pyclass

IMachine_setHardwareVersionResultMsg = GED("http://www.virtualbox.org/", "IMachine_setHardwareVersionResponse").pyclass

IMachine_getHardwareUUIDRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getHardwareUUID").pyclass

IMachine_getHardwareUUIDResultMsg = GED("http://www.virtualbox.org/", "IMachine_getHardwareUUIDResponse").pyclass

IMachine_setHardwareUUIDRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setHardwareUUID").pyclass

IMachine_setHardwareUUIDResultMsg = GED("http://www.virtualbox.org/", "IMachine_setHardwareUUIDResponse").pyclass

IMachine_getCPUCountRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getCPUCount").pyclass

IMachine_getCPUCountResultMsg = GED("http://www.virtualbox.org/", "IMachine_getCPUCountResponse").pyclass

IMachine_setCPUCountRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setCPUCount").pyclass

IMachine_setCPUCountResultMsg = GED("http://www.virtualbox.org/", "IMachine_setCPUCountResponse").pyclass

IMachine_getCPUHotPlugEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getCPUHotPlugEnabled").pyclass

IMachine_getCPUHotPlugEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_getCPUHotPlugEnabledResponse").pyclass

IMachine_setCPUHotPlugEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setCPUHotPlugEnabled").pyclass

IMachine_setCPUHotPlugEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_setCPUHotPlugEnabledResponse").pyclass

IMachine_getCPUExecutionCapRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getCPUExecutionCap").pyclass

IMachine_getCPUExecutionCapResultMsg = GED("http://www.virtualbox.org/", "IMachine_getCPUExecutionCapResponse").pyclass

IMachine_setCPUExecutionCapRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setCPUExecutionCap").pyclass

IMachine_setCPUExecutionCapResultMsg = GED("http://www.virtualbox.org/", "IMachine_setCPUExecutionCapResponse").pyclass

IMachine_getCPUIDPortabilityLevelRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getCPUIDPortabilityLevel").pyclass

IMachine_getCPUIDPortabilityLevelResultMsg = GED("http://www.virtualbox.org/", "IMachine_getCPUIDPortabilityLevelResponse").pyclass

IMachine_setCPUIDPortabilityLevelRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setCPUIDPortabilityLevel").pyclass

IMachine_setCPUIDPortabilityLevelResultMsg = GED("http://www.virtualbox.org/", "IMachine_setCPUIDPortabilityLevelResponse").pyclass

IMachine_getMemorySizeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getMemorySize").pyclass

IMachine_getMemorySizeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getMemorySizeResponse").pyclass

IMachine_setMemorySizeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setMemorySize").pyclass

IMachine_setMemorySizeResultMsg = GED("http://www.virtualbox.org/", "IMachine_setMemorySizeResponse").pyclass

IMachine_getMemoryBalloonSizeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getMemoryBalloonSize").pyclass

IMachine_getMemoryBalloonSizeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getMemoryBalloonSizeResponse").pyclass

IMachine_setMemoryBalloonSizeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setMemoryBalloonSize").pyclass

IMachine_setMemoryBalloonSizeResultMsg = GED("http://www.virtualbox.org/", "IMachine_setMemoryBalloonSizeResponse").pyclass

IMachine_getPageFusionEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getPageFusionEnabled").pyclass

IMachine_getPageFusionEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_getPageFusionEnabledResponse").pyclass

IMachine_setPageFusionEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setPageFusionEnabled").pyclass

IMachine_setPageFusionEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_setPageFusionEnabledResponse").pyclass

IMachine_getGraphicsControllerTypeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getGraphicsControllerType").pyclass

IMachine_getGraphicsControllerTypeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getGraphicsControllerTypeResponse").pyclass

IMachine_setGraphicsControllerTypeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setGraphicsControllerType").pyclass

IMachine_setGraphicsControllerTypeResultMsg = GED("http://www.virtualbox.org/", "IMachine_setGraphicsControllerTypeResponse").pyclass

IMachine_getVRAMSizeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getVRAMSize").pyclass

IMachine_getVRAMSizeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getVRAMSizeResponse").pyclass

IMachine_setVRAMSizeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setVRAMSize").pyclass

IMachine_setVRAMSizeResultMsg = GED("http://www.virtualbox.org/", "IMachine_setVRAMSizeResponse").pyclass

IMachine_getAccelerate3DEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getAccelerate3DEnabled").pyclass

IMachine_getAccelerate3DEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_getAccelerate3DEnabledResponse").pyclass

IMachine_setAccelerate3DEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setAccelerate3DEnabled").pyclass

IMachine_setAccelerate3DEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_setAccelerate3DEnabledResponse").pyclass

IMachine_getAccelerate2DVideoEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getAccelerate2DVideoEnabled").pyclass

IMachine_getAccelerate2DVideoEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_getAccelerate2DVideoEnabledResponse").pyclass

IMachine_setAccelerate2DVideoEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setAccelerate2DVideoEnabled").pyclass

IMachine_setAccelerate2DVideoEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_setAccelerate2DVideoEnabledResponse").pyclass

IMachine_getMonitorCountRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getMonitorCount").pyclass

IMachine_getMonitorCountResultMsg = GED("http://www.virtualbox.org/", "IMachine_getMonitorCountResponse").pyclass

IMachine_setMonitorCountRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setMonitorCount").pyclass

IMachine_setMonitorCountResultMsg = GED("http://www.virtualbox.org/", "IMachine_setMonitorCountResponse").pyclass

IMachine_getVideoCaptureEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureEnabled").pyclass

IMachine_getVideoCaptureEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureEnabledResponse").pyclass

IMachine_setVideoCaptureEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureEnabled").pyclass

IMachine_setVideoCaptureEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureEnabledResponse").pyclass

IMachine_getVideoCaptureScreensRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureScreens").pyclass

IMachine_getVideoCaptureScreensResultMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureScreensResponse").pyclass

IMachine_setVideoCaptureScreensRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureScreens").pyclass

IMachine_setVideoCaptureScreensResultMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureScreensResponse").pyclass

IMachine_getVideoCaptureFileRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureFile").pyclass

IMachine_getVideoCaptureFileResultMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureFileResponse").pyclass

IMachine_setVideoCaptureFileRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureFile").pyclass

IMachine_setVideoCaptureFileResultMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureFileResponse").pyclass

IMachine_getVideoCaptureWidthRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureWidth").pyclass

IMachine_getVideoCaptureWidthResultMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureWidthResponse").pyclass

IMachine_setVideoCaptureWidthRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureWidth").pyclass

IMachine_setVideoCaptureWidthResultMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureWidthResponse").pyclass

IMachine_getVideoCaptureHeightRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureHeight").pyclass

IMachine_getVideoCaptureHeightResultMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureHeightResponse").pyclass

IMachine_setVideoCaptureHeightRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureHeight").pyclass

IMachine_setVideoCaptureHeightResultMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureHeightResponse").pyclass

IMachine_getVideoCaptureRateRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureRate").pyclass

IMachine_getVideoCaptureRateResultMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureRateResponse").pyclass

IMachine_setVideoCaptureRateRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureRate").pyclass

IMachine_setVideoCaptureRateResultMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureRateResponse").pyclass

IMachine_getVideoCaptureFPSRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureFPS").pyclass

IMachine_getVideoCaptureFPSResultMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureFPSResponse").pyclass

IMachine_setVideoCaptureFPSRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureFPS").pyclass

IMachine_setVideoCaptureFPSResultMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureFPSResponse").pyclass

IMachine_getVideoCaptureMaxTimeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureMaxTime").pyclass

IMachine_getVideoCaptureMaxTimeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureMaxTimeResponse").pyclass

IMachine_setVideoCaptureMaxTimeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureMaxTime").pyclass

IMachine_setVideoCaptureMaxTimeResultMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureMaxTimeResponse").pyclass

IMachine_getVideoCaptureMaxFileSizeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureMaxFileSize").pyclass

IMachine_getVideoCaptureMaxFileSizeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureMaxFileSizeResponse").pyclass

IMachine_setVideoCaptureMaxFileSizeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureMaxFileSize").pyclass

IMachine_setVideoCaptureMaxFileSizeResultMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureMaxFileSizeResponse").pyclass

IMachine_getVideoCaptureOptionsRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureOptions").pyclass

IMachine_getVideoCaptureOptionsResultMsg = GED("http://www.virtualbox.org/", "IMachine_getVideoCaptureOptionsResponse").pyclass

IMachine_setVideoCaptureOptionsRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureOptions").pyclass

IMachine_setVideoCaptureOptionsResultMsg = GED("http://www.virtualbox.org/", "IMachine_setVideoCaptureOptionsResponse").pyclass

IMachine_getBIOSSettingsRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getBIOSSettings").pyclass

IMachine_getBIOSSettingsResultMsg = GED("http://www.virtualbox.org/", "IMachine_getBIOSSettingsResponse").pyclass

IMachine_getFirmwareTypeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getFirmwareType").pyclass

IMachine_getFirmwareTypeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getFirmwareTypeResponse").pyclass

IMachine_setFirmwareTypeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setFirmwareType").pyclass

IMachine_setFirmwareTypeResultMsg = GED("http://www.virtualbox.org/", "IMachine_setFirmwareTypeResponse").pyclass

IMachine_getPointingHIDTypeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getPointingHIDType").pyclass

IMachine_getPointingHIDTypeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getPointingHIDTypeResponse").pyclass

IMachine_setPointingHIDTypeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setPointingHIDType").pyclass

IMachine_setPointingHIDTypeResultMsg = GED("http://www.virtualbox.org/", "IMachine_setPointingHIDTypeResponse").pyclass

IMachine_getKeyboardHIDTypeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getKeyboardHIDType").pyclass

IMachine_getKeyboardHIDTypeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getKeyboardHIDTypeResponse").pyclass

IMachine_setKeyboardHIDTypeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setKeyboardHIDType").pyclass

IMachine_setKeyboardHIDTypeResultMsg = GED("http://www.virtualbox.org/", "IMachine_setKeyboardHIDTypeResponse").pyclass

IMachine_getHPETEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getHPETEnabled").pyclass

IMachine_getHPETEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_getHPETEnabledResponse").pyclass

IMachine_setHPETEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setHPETEnabled").pyclass

IMachine_setHPETEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_setHPETEnabledResponse").pyclass

IMachine_getChipsetTypeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getChipsetType").pyclass

IMachine_getChipsetTypeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getChipsetTypeResponse").pyclass

IMachine_setChipsetTypeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setChipsetType").pyclass

IMachine_setChipsetTypeResultMsg = GED("http://www.virtualbox.org/", "IMachine_setChipsetTypeResponse").pyclass

IMachine_getSnapshotFolderRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getSnapshotFolder").pyclass

IMachine_getSnapshotFolderResultMsg = GED("http://www.virtualbox.org/", "IMachine_getSnapshotFolderResponse").pyclass

IMachine_setSnapshotFolderRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setSnapshotFolder").pyclass

IMachine_setSnapshotFolderResultMsg = GED("http://www.virtualbox.org/", "IMachine_setSnapshotFolderResponse").pyclass

IMachine_getVRDEServerRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getVRDEServer").pyclass

IMachine_getVRDEServerResultMsg = GED("http://www.virtualbox.org/", "IMachine_getVRDEServerResponse").pyclass

IMachine_getEmulatedUSBCardReaderEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getEmulatedUSBCardReaderEnabled").pyclass

IMachine_getEmulatedUSBCardReaderEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_getEmulatedUSBCardReaderEnabledResponse").pyclass

IMachine_setEmulatedUSBCardReaderEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setEmulatedUSBCardReaderEnabled").pyclass

IMachine_setEmulatedUSBCardReaderEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_setEmulatedUSBCardReaderEnabledResponse").pyclass

IMachine_getMediumAttachmentsRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getMediumAttachments").pyclass

IMachine_getMediumAttachmentsResultMsg = GED("http://www.virtualbox.org/", "IMachine_getMediumAttachmentsResponse").pyclass

IMachine_getUSBControllersRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getUSBControllers").pyclass

IMachine_getUSBControllersResultMsg = GED("http://www.virtualbox.org/", "IMachine_getUSBControllersResponse").pyclass

IMachine_getUSBDeviceFiltersRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getUSBDeviceFilters").pyclass

IMachine_getUSBDeviceFiltersResultMsg = GED("http://www.virtualbox.org/", "IMachine_getUSBDeviceFiltersResponse").pyclass

IMachine_getAudioAdapterRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getAudioAdapter").pyclass

IMachine_getAudioAdapterResultMsg = GED("http://www.virtualbox.org/", "IMachine_getAudioAdapterResponse").pyclass

IMachine_getStorageControllersRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getStorageControllers").pyclass

IMachine_getStorageControllersResultMsg = GED("http://www.virtualbox.org/", "IMachine_getStorageControllersResponse").pyclass

IMachine_getSettingsFilePathRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getSettingsFilePath").pyclass

IMachine_getSettingsFilePathResultMsg = GED("http://www.virtualbox.org/", "IMachine_getSettingsFilePathResponse").pyclass

IMachine_getSettingsModifiedRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getSettingsModified").pyclass

IMachine_getSettingsModifiedResultMsg = GED("http://www.virtualbox.org/", "IMachine_getSettingsModifiedResponse").pyclass

IMachine_getSessionStateRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getSessionState").pyclass

IMachine_getSessionStateResultMsg = GED("http://www.virtualbox.org/", "IMachine_getSessionStateResponse").pyclass

IMachine_getSessionNameRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getSessionName").pyclass

IMachine_getSessionNameResultMsg = GED("http://www.virtualbox.org/", "IMachine_getSessionNameResponse").pyclass

IMachine_getSessionPIDRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getSessionPID").pyclass

IMachine_getSessionPIDResultMsg = GED("http://www.virtualbox.org/", "IMachine_getSessionPIDResponse").pyclass

IMachine_getStateRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getState").pyclass

IMachine_getStateResultMsg = GED("http://www.virtualbox.org/", "IMachine_getStateResponse").pyclass

IMachine_getLastStateChangeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getLastStateChange").pyclass

IMachine_getLastStateChangeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getLastStateChangeResponse").pyclass

IMachine_getStateFilePathRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getStateFilePath").pyclass

IMachine_getStateFilePathResultMsg = GED("http://www.virtualbox.org/", "IMachine_getStateFilePathResponse").pyclass

IMachine_getLogFolderRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getLogFolder").pyclass

IMachine_getLogFolderResultMsg = GED("http://www.virtualbox.org/", "IMachine_getLogFolderResponse").pyclass

IMachine_getCurrentSnapshotRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getCurrentSnapshot").pyclass

IMachine_getCurrentSnapshotResultMsg = GED("http://www.virtualbox.org/", "IMachine_getCurrentSnapshotResponse").pyclass

IMachine_getSnapshotCountRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getSnapshotCount").pyclass

IMachine_getSnapshotCountResultMsg = GED("http://www.virtualbox.org/", "IMachine_getSnapshotCountResponse").pyclass

IMachine_getCurrentStateModifiedRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getCurrentStateModified").pyclass

IMachine_getCurrentStateModifiedResultMsg = GED("http://www.virtualbox.org/", "IMachine_getCurrentStateModifiedResponse").pyclass

IMachine_getSharedFoldersRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getSharedFolders").pyclass

IMachine_getSharedFoldersResultMsg = GED("http://www.virtualbox.org/", "IMachine_getSharedFoldersResponse").pyclass

IMachine_getClipboardModeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getClipboardMode").pyclass

IMachine_getClipboardModeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getClipboardModeResponse").pyclass

IMachine_setClipboardModeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setClipboardMode").pyclass

IMachine_setClipboardModeResultMsg = GED("http://www.virtualbox.org/", "IMachine_setClipboardModeResponse").pyclass

IMachine_getDnDModeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getDnDMode").pyclass

IMachine_getDnDModeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getDnDModeResponse").pyclass

IMachine_setDnDModeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setDnDMode").pyclass

IMachine_setDnDModeResultMsg = GED("http://www.virtualbox.org/", "IMachine_setDnDModeResponse").pyclass

IMachine_getTeleporterEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getTeleporterEnabled").pyclass

IMachine_getTeleporterEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_getTeleporterEnabledResponse").pyclass

IMachine_setTeleporterEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setTeleporterEnabled").pyclass

IMachine_setTeleporterEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_setTeleporterEnabledResponse").pyclass

IMachine_getTeleporterPortRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getTeleporterPort").pyclass

IMachine_getTeleporterPortResultMsg = GED("http://www.virtualbox.org/", "IMachine_getTeleporterPortResponse").pyclass

IMachine_setTeleporterPortRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setTeleporterPort").pyclass

IMachine_setTeleporterPortResultMsg = GED("http://www.virtualbox.org/", "IMachine_setTeleporterPortResponse").pyclass

IMachine_getTeleporterAddressRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getTeleporterAddress").pyclass

IMachine_getTeleporterAddressResultMsg = GED("http://www.virtualbox.org/", "IMachine_getTeleporterAddressResponse").pyclass

IMachine_setTeleporterAddressRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setTeleporterAddress").pyclass

IMachine_setTeleporterAddressResultMsg = GED("http://www.virtualbox.org/", "IMachine_setTeleporterAddressResponse").pyclass

IMachine_getTeleporterPasswordRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getTeleporterPassword").pyclass

IMachine_getTeleporterPasswordResultMsg = GED("http://www.virtualbox.org/", "IMachine_getTeleporterPasswordResponse").pyclass

IMachine_setTeleporterPasswordRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setTeleporterPassword").pyclass

IMachine_setTeleporterPasswordResultMsg = GED("http://www.virtualbox.org/", "IMachine_setTeleporterPasswordResponse").pyclass

IMachine_getParavirtProviderRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getParavirtProvider").pyclass

IMachine_getParavirtProviderResultMsg = GED("http://www.virtualbox.org/", "IMachine_getParavirtProviderResponse").pyclass

IMachine_setParavirtProviderRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setParavirtProvider").pyclass

IMachine_setParavirtProviderResultMsg = GED("http://www.virtualbox.org/", "IMachine_setParavirtProviderResponse").pyclass

IMachine_getFaultToleranceStateRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getFaultToleranceState").pyclass

IMachine_getFaultToleranceStateResultMsg = GED("http://www.virtualbox.org/", "IMachine_getFaultToleranceStateResponse").pyclass

IMachine_setFaultToleranceStateRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setFaultToleranceState").pyclass

IMachine_setFaultToleranceStateResultMsg = GED("http://www.virtualbox.org/", "IMachine_setFaultToleranceStateResponse").pyclass

IMachine_getFaultTolerancePortRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getFaultTolerancePort").pyclass

IMachine_getFaultTolerancePortResultMsg = GED("http://www.virtualbox.org/", "IMachine_getFaultTolerancePortResponse").pyclass

IMachine_setFaultTolerancePortRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setFaultTolerancePort").pyclass

IMachine_setFaultTolerancePortResultMsg = GED("http://www.virtualbox.org/", "IMachine_setFaultTolerancePortResponse").pyclass

IMachine_getFaultToleranceAddressRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getFaultToleranceAddress").pyclass

IMachine_getFaultToleranceAddressResultMsg = GED("http://www.virtualbox.org/", "IMachine_getFaultToleranceAddressResponse").pyclass

IMachine_setFaultToleranceAddressRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setFaultToleranceAddress").pyclass

IMachine_setFaultToleranceAddressResultMsg = GED("http://www.virtualbox.org/", "IMachine_setFaultToleranceAddressResponse").pyclass

IMachine_getFaultTolerancePasswordRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getFaultTolerancePassword").pyclass

IMachine_getFaultTolerancePasswordResultMsg = GED("http://www.virtualbox.org/", "IMachine_getFaultTolerancePasswordResponse").pyclass

IMachine_setFaultTolerancePasswordRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setFaultTolerancePassword").pyclass

IMachine_setFaultTolerancePasswordResultMsg = GED("http://www.virtualbox.org/", "IMachine_setFaultTolerancePasswordResponse").pyclass

IMachine_getFaultToleranceSyncIntervalRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getFaultToleranceSyncInterval").pyclass

IMachine_getFaultToleranceSyncIntervalResultMsg = GED("http://www.virtualbox.org/", "IMachine_getFaultToleranceSyncIntervalResponse").pyclass

IMachine_setFaultToleranceSyncIntervalRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setFaultToleranceSyncInterval").pyclass

IMachine_setFaultToleranceSyncIntervalResultMsg = GED("http://www.virtualbox.org/", "IMachine_setFaultToleranceSyncIntervalResponse").pyclass

IMachine_getRTCUseUTCRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getRTCUseUTC").pyclass

IMachine_getRTCUseUTCResultMsg = GED("http://www.virtualbox.org/", "IMachine_getRTCUseUTCResponse").pyclass

IMachine_setRTCUseUTCRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setRTCUseUTC").pyclass

IMachine_setRTCUseUTCResultMsg = GED("http://www.virtualbox.org/", "IMachine_setRTCUseUTCResponse").pyclass

IMachine_getIOCacheEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getIOCacheEnabled").pyclass

IMachine_getIOCacheEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_getIOCacheEnabledResponse").pyclass

IMachine_setIOCacheEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setIOCacheEnabled").pyclass

IMachine_setIOCacheEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_setIOCacheEnabledResponse").pyclass

IMachine_getIOCacheSizeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getIOCacheSize").pyclass

IMachine_getIOCacheSizeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getIOCacheSizeResponse").pyclass

IMachine_setIOCacheSizeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setIOCacheSize").pyclass

IMachine_setIOCacheSizeResultMsg = GED("http://www.virtualbox.org/", "IMachine_setIOCacheSizeResponse").pyclass

IMachine_getPCIDeviceAssignmentsRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getPCIDeviceAssignments").pyclass

IMachine_getPCIDeviceAssignmentsResultMsg = GED("http://www.virtualbox.org/", "IMachine_getPCIDeviceAssignmentsResponse").pyclass

IMachine_getBandwidthControlRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getBandwidthControl").pyclass

IMachine_getBandwidthControlResultMsg = GED("http://www.virtualbox.org/", "IMachine_getBandwidthControlResponse").pyclass

IMachine_getTracingEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getTracingEnabled").pyclass

IMachine_getTracingEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_getTracingEnabledResponse").pyclass

IMachine_setTracingEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setTracingEnabled").pyclass

IMachine_setTracingEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_setTracingEnabledResponse").pyclass

IMachine_getTracingConfigRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getTracingConfig").pyclass

IMachine_getTracingConfigResultMsg = GED("http://www.virtualbox.org/", "IMachine_getTracingConfigResponse").pyclass

IMachine_setTracingConfigRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setTracingConfig").pyclass

IMachine_setTracingConfigResultMsg = GED("http://www.virtualbox.org/", "IMachine_setTracingConfigResponse").pyclass

IMachine_getAllowTracingToAccessVMRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getAllowTracingToAccessVM").pyclass

IMachine_getAllowTracingToAccessVMResultMsg = GED("http://www.virtualbox.org/", "IMachine_getAllowTracingToAccessVMResponse").pyclass

IMachine_setAllowTracingToAccessVMRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setAllowTracingToAccessVM").pyclass

IMachine_setAllowTracingToAccessVMResultMsg = GED("http://www.virtualbox.org/", "IMachine_setAllowTracingToAccessVMResponse").pyclass

IMachine_getAutostartEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getAutostartEnabled").pyclass

IMachine_getAutostartEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_getAutostartEnabledResponse").pyclass

IMachine_setAutostartEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setAutostartEnabled").pyclass

IMachine_setAutostartEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachine_setAutostartEnabledResponse").pyclass

IMachine_getAutostartDelayRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getAutostartDelay").pyclass

IMachine_getAutostartDelayResultMsg = GED("http://www.virtualbox.org/", "IMachine_getAutostartDelayResponse").pyclass

IMachine_setAutostartDelayRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setAutostartDelay").pyclass

IMachine_setAutostartDelayResultMsg = GED("http://www.virtualbox.org/", "IMachine_setAutostartDelayResponse").pyclass

IMachine_getAutostopTypeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getAutostopType").pyclass

IMachine_getAutostopTypeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getAutostopTypeResponse").pyclass

IMachine_setAutostopTypeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setAutostopType").pyclass

IMachine_setAutostopTypeResultMsg = GED("http://www.virtualbox.org/", "IMachine_setAutostopTypeResponse").pyclass

IMachine_getDefaultFrontendRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getDefaultFrontend").pyclass

IMachine_getDefaultFrontendResultMsg = GED("http://www.virtualbox.org/", "IMachine_getDefaultFrontendResponse").pyclass

IMachine_setDefaultFrontendRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setDefaultFrontend").pyclass

IMachine_setDefaultFrontendResultMsg = GED("http://www.virtualbox.org/", "IMachine_setDefaultFrontendResponse").pyclass

IMachine_getUSBProxyAvailableRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getUSBProxyAvailable").pyclass

IMachine_getUSBProxyAvailableResultMsg = GED("http://www.virtualbox.org/", "IMachine_getUSBProxyAvailableResponse").pyclass

IMachine_getVMProcessPriorityRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getVMProcessPriority").pyclass

IMachine_getVMProcessPriorityResultMsg = GED("http://www.virtualbox.org/", "IMachine_getVMProcessPriorityResponse").pyclass

IMachine_setVMProcessPriorityRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setVMProcessPriority").pyclass

IMachine_setVMProcessPriorityResultMsg = GED("http://www.virtualbox.org/", "IMachine_setVMProcessPriorityResponse").pyclass

IMachine_lockMachineRequestMsg = GED("http://www.virtualbox.org/", "IMachine_lockMachine").pyclass

IMachine_lockMachineResultMsg = GED("http://www.virtualbox.org/", "IMachine_lockMachineResponse").pyclass

IMachine_launchVMProcessRequestMsg = GED("http://www.virtualbox.org/", "IMachine_launchVMProcess").pyclass

IMachine_launchVMProcessResultMsg = GED("http://www.virtualbox.org/", "IMachine_launchVMProcessResponse").pyclass

IMachine_setBootOrderRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setBootOrder").pyclass

IMachine_setBootOrderResultMsg = GED("http://www.virtualbox.org/", "IMachine_setBootOrderResponse").pyclass

IMachine_getBootOrderRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getBootOrder").pyclass

IMachine_getBootOrderResultMsg = GED("http://www.virtualbox.org/", "IMachine_getBootOrderResponse").pyclass

IMachine_attachDeviceRequestMsg = GED("http://www.virtualbox.org/", "IMachine_attachDevice").pyclass

IMachine_attachDeviceResultMsg = GED("http://www.virtualbox.org/", "IMachine_attachDeviceResponse").pyclass

IMachine_attachDeviceWithoutMediumRequestMsg = GED("http://www.virtualbox.org/", "IMachine_attachDeviceWithoutMedium").pyclass

IMachine_attachDeviceWithoutMediumResultMsg = GED("http://www.virtualbox.org/", "IMachine_attachDeviceWithoutMediumResponse").pyclass

IMachine_detachDeviceRequestMsg = GED("http://www.virtualbox.org/", "IMachine_detachDevice").pyclass

IMachine_detachDeviceResultMsg = GED("http://www.virtualbox.org/", "IMachine_detachDeviceResponse").pyclass

IMachine_passthroughDeviceRequestMsg = GED("http://www.virtualbox.org/", "IMachine_passthroughDevice").pyclass

IMachine_passthroughDeviceResultMsg = GED("http://www.virtualbox.org/", "IMachine_passthroughDeviceResponse").pyclass

IMachine_temporaryEjectDeviceRequestMsg = GED("http://www.virtualbox.org/", "IMachine_temporaryEjectDevice").pyclass

IMachine_temporaryEjectDeviceResultMsg = GED("http://www.virtualbox.org/", "IMachine_temporaryEjectDeviceResponse").pyclass

IMachine_nonRotationalDeviceRequestMsg = GED("http://www.virtualbox.org/", "IMachine_nonRotationalDevice").pyclass

IMachine_nonRotationalDeviceResultMsg = GED("http://www.virtualbox.org/", "IMachine_nonRotationalDeviceResponse").pyclass

IMachine_setAutoDiscardForDeviceRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setAutoDiscardForDevice").pyclass

IMachine_setAutoDiscardForDeviceResultMsg = GED("http://www.virtualbox.org/", "IMachine_setAutoDiscardForDeviceResponse").pyclass

IMachine_setHotPluggableForDeviceRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setHotPluggableForDevice").pyclass

IMachine_setHotPluggableForDeviceResultMsg = GED("http://www.virtualbox.org/", "IMachine_setHotPluggableForDeviceResponse").pyclass

IMachine_setBandwidthGroupForDeviceRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setBandwidthGroupForDevice").pyclass

IMachine_setBandwidthGroupForDeviceResultMsg = GED("http://www.virtualbox.org/", "IMachine_setBandwidthGroupForDeviceResponse").pyclass

IMachine_setNoBandwidthGroupForDeviceRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setNoBandwidthGroupForDevice").pyclass

IMachine_setNoBandwidthGroupForDeviceResultMsg = GED("http://www.virtualbox.org/", "IMachine_setNoBandwidthGroupForDeviceResponse").pyclass

IMachine_unmountMediumRequestMsg = GED("http://www.virtualbox.org/", "IMachine_unmountMedium").pyclass

IMachine_unmountMediumResultMsg = GED("http://www.virtualbox.org/", "IMachine_unmountMediumResponse").pyclass

IMachine_mountMediumRequestMsg = GED("http://www.virtualbox.org/", "IMachine_mountMedium").pyclass

IMachine_mountMediumResultMsg = GED("http://www.virtualbox.org/", "IMachine_mountMediumResponse").pyclass

IMachine_getMediumRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getMedium").pyclass

IMachine_getMediumResultMsg = GED("http://www.virtualbox.org/", "IMachine_getMediumResponse").pyclass

IMachine_getMediumAttachmentsOfControllerRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getMediumAttachmentsOfController").pyclass

IMachine_getMediumAttachmentsOfControllerResultMsg = GED("http://www.virtualbox.org/", "IMachine_getMediumAttachmentsOfControllerResponse").pyclass

IMachine_getMediumAttachmentRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getMediumAttachment").pyclass

IMachine_getMediumAttachmentResultMsg = GED("http://www.virtualbox.org/", "IMachine_getMediumAttachmentResponse").pyclass

IMachine_attachHostPCIDeviceRequestMsg = GED("http://www.virtualbox.org/", "IMachine_attachHostPCIDevice").pyclass

IMachine_attachHostPCIDeviceResultMsg = GED("http://www.virtualbox.org/", "IMachine_attachHostPCIDeviceResponse").pyclass

IMachine_detachHostPCIDeviceRequestMsg = GED("http://www.virtualbox.org/", "IMachine_detachHostPCIDevice").pyclass

IMachine_detachHostPCIDeviceResultMsg = GED("http://www.virtualbox.org/", "IMachine_detachHostPCIDeviceResponse").pyclass

IMachine_getNetworkAdapterRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getNetworkAdapter").pyclass

IMachine_getNetworkAdapterResultMsg = GED("http://www.virtualbox.org/", "IMachine_getNetworkAdapterResponse").pyclass

IMachine_addStorageControllerRequestMsg = GED("http://www.virtualbox.org/", "IMachine_addStorageController").pyclass

IMachine_addStorageControllerResultMsg = GED("http://www.virtualbox.org/", "IMachine_addStorageControllerResponse").pyclass

IMachine_getStorageControllerByNameRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getStorageControllerByName").pyclass

IMachine_getStorageControllerByNameResultMsg = GED("http://www.virtualbox.org/", "IMachine_getStorageControllerByNameResponse").pyclass

IMachine_getStorageControllerByInstanceRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getStorageControllerByInstance").pyclass

IMachine_getStorageControllerByInstanceResultMsg = GED("http://www.virtualbox.org/", "IMachine_getStorageControllerByInstanceResponse").pyclass

IMachine_removeStorageControllerRequestMsg = GED("http://www.virtualbox.org/", "IMachine_removeStorageController").pyclass

IMachine_removeStorageControllerResultMsg = GED("http://www.virtualbox.org/", "IMachine_removeStorageControllerResponse").pyclass

IMachine_setStorageControllerBootableRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setStorageControllerBootable").pyclass

IMachine_setStorageControllerBootableResultMsg = GED("http://www.virtualbox.org/", "IMachine_setStorageControllerBootableResponse").pyclass

IMachine_addUSBControllerRequestMsg = GED("http://www.virtualbox.org/", "IMachine_addUSBController").pyclass

IMachine_addUSBControllerResultMsg = GED("http://www.virtualbox.org/", "IMachine_addUSBControllerResponse").pyclass

IMachine_removeUSBControllerRequestMsg = GED("http://www.virtualbox.org/", "IMachine_removeUSBController").pyclass

IMachine_removeUSBControllerResultMsg = GED("http://www.virtualbox.org/", "IMachine_removeUSBControllerResponse").pyclass

IMachine_getUSBControllerByNameRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getUSBControllerByName").pyclass

IMachine_getUSBControllerByNameResultMsg = GED("http://www.virtualbox.org/", "IMachine_getUSBControllerByNameResponse").pyclass

IMachine_getUSBControllerCountByTypeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getUSBControllerCountByType").pyclass

IMachine_getUSBControllerCountByTypeResultMsg = GED("http://www.virtualbox.org/", "IMachine_getUSBControllerCountByTypeResponse").pyclass

IMachine_getSerialPortRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getSerialPort").pyclass

IMachine_getSerialPortResultMsg = GED("http://www.virtualbox.org/", "IMachine_getSerialPortResponse").pyclass

IMachine_getParallelPortRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getParallelPort").pyclass

IMachine_getParallelPortResultMsg = GED("http://www.virtualbox.org/", "IMachine_getParallelPortResponse").pyclass

IMachine_getExtraDataKeysRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getExtraDataKeys").pyclass

IMachine_getExtraDataKeysResultMsg = GED("http://www.virtualbox.org/", "IMachine_getExtraDataKeysResponse").pyclass

IMachine_getExtraDataRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getExtraData").pyclass

IMachine_getExtraDataResultMsg = GED("http://www.virtualbox.org/", "IMachine_getExtraDataResponse").pyclass

IMachine_setExtraDataRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setExtraData").pyclass

IMachine_setExtraDataResultMsg = GED("http://www.virtualbox.org/", "IMachine_setExtraDataResponse").pyclass

IMachine_getCPUPropertyRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getCPUProperty").pyclass

IMachine_getCPUPropertyResultMsg = GED("http://www.virtualbox.org/", "IMachine_getCPUPropertyResponse").pyclass

IMachine_setCPUPropertyRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setCPUProperty").pyclass

IMachine_setCPUPropertyResultMsg = GED("http://www.virtualbox.org/", "IMachine_setCPUPropertyResponse").pyclass

IMachine_getCPUIDLeafRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getCPUIDLeaf").pyclass

IMachine_getCPUIDLeafResultMsg = GED("http://www.virtualbox.org/", "IMachine_getCPUIDLeafResponse").pyclass

IMachine_setCPUIDLeafRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setCPUIDLeaf").pyclass

IMachine_setCPUIDLeafResultMsg = GED("http://www.virtualbox.org/", "IMachine_setCPUIDLeafResponse").pyclass

IMachine_removeCPUIDLeafRequestMsg = GED("http://www.virtualbox.org/", "IMachine_removeCPUIDLeaf").pyclass

IMachine_removeCPUIDLeafResultMsg = GED("http://www.virtualbox.org/", "IMachine_removeCPUIDLeafResponse").pyclass

IMachine_removeAllCPUIDLeavesRequestMsg = GED("http://www.virtualbox.org/", "IMachine_removeAllCPUIDLeaves").pyclass

IMachine_removeAllCPUIDLeavesResultMsg = GED("http://www.virtualbox.org/", "IMachine_removeAllCPUIDLeavesResponse").pyclass

IMachine_getHWVirtExPropertyRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getHWVirtExProperty").pyclass

IMachine_getHWVirtExPropertyResultMsg = GED("http://www.virtualbox.org/", "IMachine_getHWVirtExPropertyResponse").pyclass

IMachine_setHWVirtExPropertyRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setHWVirtExProperty").pyclass

IMachine_setHWVirtExPropertyResultMsg = GED("http://www.virtualbox.org/", "IMachine_setHWVirtExPropertyResponse").pyclass

IMachine_setSettingsFilePathRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setSettingsFilePath").pyclass

IMachine_setSettingsFilePathResultMsg = GED("http://www.virtualbox.org/", "IMachine_setSettingsFilePathResponse").pyclass

IMachine_saveSettingsRequestMsg = GED("http://www.virtualbox.org/", "IMachine_saveSettings").pyclass

IMachine_saveSettingsResultMsg = GED("http://www.virtualbox.org/", "IMachine_saveSettingsResponse").pyclass

IMachine_discardSettingsRequestMsg = GED("http://www.virtualbox.org/", "IMachine_discardSettings").pyclass

IMachine_discardSettingsResultMsg = GED("http://www.virtualbox.org/", "IMachine_discardSettingsResponse").pyclass

IMachine_unregisterRequestMsg = GED("http://www.virtualbox.org/", "IMachine_unregister").pyclass

IMachine_unregisterResultMsg = GED("http://www.virtualbox.org/", "IMachine_unregisterResponse").pyclass

IMachine_deleteConfigRequestMsg = GED("http://www.virtualbox.org/", "IMachine_deleteConfig").pyclass

IMachine_deleteConfigResultMsg = GED("http://www.virtualbox.org/", "IMachine_deleteConfigResponse").pyclass

IMachine_exportToRequestMsg = GED("http://www.virtualbox.org/", "IMachine_exportTo").pyclass

IMachine_exportToResultMsg = GED("http://www.virtualbox.org/", "IMachine_exportToResponse").pyclass

IMachine_findSnapshotRequestMsg = GED("http://www.virtualbox.org/", "IMachine_findSnapshot").pyclass

IMachine_findSnapshotResultMsg = GED("http://www.virtualbox.org/", "IMachine_findSnapshotResponse").pyclass

IMachine_createSharedFolderRequestMsg = GED("http://www.virtualbox.org/", "IMachine_createSharedFolder").pyclass

IMachine_createSharedFolderResultMsg = GED("http://www.virtualbox.org/", "IMachine_createSharedFolderResponse").pyclass

IMachine_removeSharedFolderRequestMsg = GED("http://www.virtualbox.org/", "IMachine_removeSharedFolder").pyclass

IMachine_removeSharedFolderResultMsg = GED("http://www.virtualbox.org/", "IMachine_removeSharedFolderResponse").pyclass

IMachine_canShowConsoleWindowRequestMsg = GED("http://www.virtualbox.org/", "IMachine_canShowConsoleWindow").pyclass

IMachine_canShowConsoleWindowResultMsg = GED("http://www.virtualbox.org/", "IMachine_canShowConsoleWindowResponse").pyclass

IMachine_showConsoleWindowRequestMsg = GED("http://www.virtualbox.org/", "IMachine_showConsoleWindow").pyclass

IMachine_showConsoleWindowResultMsg = GED("http://www.virtualbox.org/", "IMachine_showConsoleWindowResponse").pyclass

IMachine_getGuestPropertyRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getGuestProperty").pyclass

IMachine_getGuestPropertyResultMsg = GED("http://www.virtualbox.org/", "IMachine_getGuestPropertyResponse").pyclass

IMachine_getGuestPropertyValueRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getGuestPropertyValue").pyclass

IMachine_getGuestPropertyValueResultMsg = GED("http://www.virtualbox.org/", "IMachine_getGuestPropertyValueResponse").pyclass

IMachine_getGuestPropertyTimestampRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getGuestPropertyTimestamp").pyclass

IMachine_getGuestPropertyTimestampResultMsg = GED("http://www.virtualbox.org/", "IMachine_getGuestPropertyTimestampResponse").pyclass

IMachine_setGuestPropertyRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setGuestProperty").pyclass

IMachine_setGuestPropertyResultMsg = GED("http://www.virtualbox.org/", "IMachine_setGuestPropertyResponse").pyclass

IMachine_setGuestPropertyValueRequestMsg = GED("http://www.virtualbox.org/", "IMachine_setGuestPropertyValue").pyclass

IMachine_setGuestPropertyValueResultMsg = GED("http://www.virtualbox.org/", "IMachine_setGuestPropertyValueResponse").pyclass

IMachine_deleteGuestPropertyRequestMsg = GED("http://www.virtualbox.org/", "IMachine_deleteGuestProperty").pyclass

IMachine_deleteGuestPropertyResultMsg = GED("http://www.virtualbox.org/", "IMachine_deleteGuestPropertyResponse").pyclass

IMachine_enumerateGuestPropertiesRequestMsg = GED("http://www.virtualbox.org/", "IMachine_enumerateGuestProperties").pyclass

IMachine_enumerateGuestPropertiesResultMsg = GED("http://www.virtualbox.org/", "IMachine_enumerateGuestPropertiesResponse").pyclass

IMachine_querySavedGuestScreenInfoRequestMsg = GED("http://www.virtualbox.org/", "IMachine_querySavedGuestScreenInfo").pyclass

IMachine_querySavedGuestScreenInfoResultMsg = GED("http://www.virtualbox.org/", "IMachine_querySavedGuestScreenInfoResponse").pyclass

IMachine_readSavedThumbnailToArrayRequestMsg = GED("http://www.virtualbox.org/", "IMachine_readSavedThumbnailToArray").pyclass

IMachine_readSavedThumbnailToArrayResultMsg = GED("http://www.virtualbox.org/", "IMachine_readSavedThumbnailToArrayResponse").pyclass

IMachine_querySavedScreenshotInfoRequestMsg = GED("http://www.virtualbox.org/", "IMachine_querySavedScreenshotInfo").pyclass

IMachine_querySavedScreenshotInfoResultMsg = GED("http://www.virtualbox.org/", "IMachine_querySavedScreenshotInfoResponse").pyclass

IMachine_readSavedScreenshotToArrayRequestMsg = GED("http://www.virtualbox.org/", "IMachine_readSavedScreenshotToArray").pyclass

IMachine_readSavedScreenshotToArrayResultMsg = GED("http://www.virtualbox.org/", "IMachine_readSavedScreenshotToArrayResponse").pyclass

IMachine_hotPlugCPURequestMsg = GED("http://www.virtualbox.org/", "IMachine_hotPlugCPU").pyclass

IMachine_hotPlugCPUResultMsg = GED("http://www.virtualbox.org/", "IMachine_hotPlugCPUResponse").pyclass

IMachine_hotUnplugCPURequestMsg = GED("http://www.virtualbox.org/", "IMachine_hotUnplugCPU").pyclass

IMachine_hotUnplugCPUResultMsg = GED("http://www.virtualbox.org/", "IMachine_hotUnplugCPUResponse").pyclass

IMachine_getCPUStatusRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getCPUStatus").pyclass

IMachine_getCPUStatusResultMsg = GED("http://www.virtualbox.org/", "IMachine_getCPUStatusResponse").pyclass

IMachine_getEffectiveParavirtProviderRequestMsg = GED("http://www.virtualbox.org/", "IMachine_getEffectiveParavirtProvider").pyclass

IMachine_getEffectiveParavirtProviderResultMsg = GED("http://www.virtualbox.org/", "IMachine_getEffectiveParavirtProviderResponse").pyclass

IMachine_queryLogFilenameRequestMsg = GED("http://www.virtualbox.org/", "IMachine_queryLogFilename").pyclass

IMachine_queryLogFilenameResultMsg = GED("http://www.virtualbox.org/", "IMachine_queryLogFilenameResponse").pyclass

IMachine_readLogRequestMsg = GED("http://www.virtualbox.org/", "IMachine_readLog").pyclass

IMachine_readLogResultMsg = GED("http://www.virtualbox.org/", "IMachine_readLogResponse").pyclass

IMachine_cloneToRequestMsg = GED("http://www.virtualbox.org/", "IMachine_cloneTo").pyclass

IMachine_cloneToResultMsg = GED("http://www.virtualbox.org/", "IMachine_cloneToResponse").pyclass

IMachine_saveStateRequestMsg = GED("http://www.virtualbox.org/", "IMachine_saveState").pyclass

IMachine_saveStateResultMsg = GED("http://www.virtualbox.org/", "IMachine_saveStateResponse").pyclass

IMachine_adoptSavedStateRequestMsg = GED("http://www.virtualbox.org/", "IMachine_adoptSavedState").pyclass

IMachine_adoptSavedStateResultMsg = GED("http://www.virtualbox.org/", "IMachine_adoptSavedStateResponse").pyclass

IMachine_discardSavedStateRequestMsg = GED("http://www.virtualbox.org/", "IMachine_discardSavedState").pyclass

IMachine_discardSavedStateResultMsg = GED("http://www.virtualbox.org/", "IMachine_discardSavedStateResponse").pyclass

IMachine_takeSnapshotRequestMsg = GED("http://www.virtualbox.org/", "IMachine_takeSnapshot").pyclass

IMachine_takeSnapshotResultMsg = GED("http://www.virtualbox.org/", "IMachine_takeSnapshotResponse").pyclass

IMachine_deleteSnapshotRequestMsg = GED("http://www.virtualbox.org/", "IMachine_deleteSnapshot").pyclass

IMachine_deleteSnapshotResultMsg = GED("http://www.virtualbox.org/", "IMachine_deleteSnapshotResponse").pyclass

IMachine_deleteSnapshotAndAllChildrenRequestMsg = GED("http://www.virtualbox.org/", "IMachine_deleteSnapshotAndAllChildren").pyclass

IMachine_deleteSnapshotAndAllChildrenResultMsg = GED("http://www.virtualbox.org/", "IMachine_deleteSnapshotAndAllChildrenResponse").pyclass

IMachine_deleteSnapshotRangeRequestMsg = GED("http://www.virtualbox.org/", "IMachine_deleteSnapshotRange").pyclass

IMachine_deleteSnapshotRangeResultMsg = GED("http://www.virtualbox.org/", "IMachine_deleteSnapshotRangeResponse").pyclass

IMachine_restoreSnapshotRequestMsg = GED("http://www.virtualbox.org/", "IMachine_restoreSnapshot").pyclass

IMachine_restoreSnapshotResultMsg = GED("http://www.virtualbox.org/", "IMachine_restoreSnapshotResponse").pyclass

IMachine_applyDefaultsRequestMsg = GED("http://www.virtualbox.org/", "IMachine_applyDefaults").pyclass

IMachine_applyDefaultsResultMsg = GED("http://www.virtualbox.org/", "IMachine_applyDefaultsResponse").pyclass

IEmulatedUSB_getWebcamsRequestMsg = GED("http://www.virtualbox.org/", "IEmulatedUSB_getWebcams").pyclass

IEmulatedUSB_getWebcamsResultMsg = GED("http://www.virtualbox.org/", "IEmulatedUSB_getWebcamsResponse").pyclass

IEmulatedUSB_webcamAttachRequestMsg = GED("http://www.virtualbox.org/", "IEmulatedUSB_webcamAttach").pyclass

IEmulatedUSB_webcamAttachResultMsg = GED("http://www.virtualbox.org/", "IEmulatedUSB_webcamAttachResponse").pyclass

IEmulatedUSB_webcamDetachRequestMsg = GED("http://www.virtualbox.org/", "IEmulatedUSB_webcamDetach").pyclass

IEmulatedUSB_webcamDetachResultMsg = GED("http://www.virtualbox.org/", "IEmulatedUSB_webcamDetachResponse").pyclass

IConsole_getMachineRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getMachine").pyclass

IConsole_getMachineResultMsg = GED("http://www.virtualbox.org/", "IConsole_getMachineResponse").pyclass

IConsole_getStateRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getState").pyclass

IConsole_getStateResultMsg = GED("http://www.virtualbox.org/", "IConsole_getStateResponse").pyclass

IConsole_getGuestRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getGuest").pyclass

IConsole_getGuestResultMsg = GED("http://www.virtualbox.org/", "IConsole_getGuestResponse").pyclass

IConsole_getKeyboardRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getKeyboard").pyclass

IConsole_getKeyboardResultMsg = GED("http://www.virtualbox.org/", "IConsole_getKeyboardResponse").pyclass

IConsole_getMouseRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getMouse").pyclass

IConsole_getMouseResultMsg = GED("http://www.virtualbox.org/", "IConsole_getMouseResponse").pyclass

IConsole_getDisplayRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getDisplay").pyclass

IConsole_getDisplayResultMsg = GED("http://www.virtualbox.org/", "IConsole_getDisplayResponse").pyclass

IConsole_getDebuggerRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getDebugger").pyclass

IConsole_getDebuggerResultMsg = GED("http://www.virtualbox.org/", "IConsole_getDebuggerResponse").pyclass

IConsole_getUSBDevicesRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getUSBDevices").pyclass

IConsole_getUSBDevicesResultMsg = GED("http://www.virtualbox.org/", "IConsole_getUSBDevicesResponse").pyclass

IConsole_getRemoteUSBDevicesRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getRemoteUSBDevices").pyclass

IConsole_getRemoteUSBDevicesResultMsg = GED("http://www.virtualbox.org/", "IConsole_getRemoteUSBDevicesResponse").pyclass

IConsole_getSharedFoldersRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getSharedFolders").pyclass

IConsole_getSharedFoldersResultMsg = GED("http://www.virtualbox.org/", "IConsole_getSharedFoldersResponse").pyclass

IConsole_getVRDEServerInfoRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getVRDEServerInfo").pyclass

IConsole_getVRDEServerInfoResultMsg = GED("http://www.virtualbox.org/", "IConsole_getVRDEServerInfoResponse").pyclass

IConsole_getEventSourceRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getEventSource").pyclass

IConsole_getEventSourceResultMsg = GED("http://www.virtualbox.org/", "IConsole_getEventSourceResponse").pyclass

IConsole_getAttachedPCIDevicesRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getAttachedPCIDevices").pyclass

IConsole_getAttachedPCIDevicesResultMsg = GED("http://www.virtualbox.org/", "IConsole_getAttachedPCIDevicesResponse").pyclass

IConsole_getUseHostClipboardRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getUseHostClipboard").pyclass

IConsole_getUseHostClipboardResultMsg = GED("http://www.virtualbox.org/", "IConsole_getUseHostClipboardResponse").pyclass

IConsole_setUseHostClipboardRequestMsg = GED("http://www.virtualbox.org/", "IConsole_setUseHostClipboard").pyclass

IConsole_setUseHostClipboardResultMsg = GED("http://www.virtualbox.org/", "IConsole_setUseHostClipboardResponse").pyclass

IConsole_getEmulatedUSBRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getEmulatedUSB").pyclass

IConsole_getEmulatedUSBResultMsg = GED("http://www.virtualbox.org/", "IConsole_getEmulatedUSBResponse").pyclass

IConsole_powerUpRequestMsg = GED("http://www.virtualbox.org/", "IConsole_powerUp").pyclass

IConsole_powerUpResultMsg = GED("http://www.virtualbox.org/", "IConsole_powerUpResponse").pyclass

IConsole_powerUpPausedRequestMsg = GED("http://www.virtualbox.org/", "IConsole_powerUpPaused").pyclass

IConsole_powerUpPausedResultMsg = GED("http://www.virtualbox.org/", "IConsole_powerUpPausedResponse").pyclass

IConsole_powerDownRequestMsg = GED("http://www.virtualbox.org/", "IConsole_powerDown").pyclass

IConsole_powerDownResultMsg = GED("http://www.virtualbox.org/", "IConsole_powerDownResponse").pyclass

IConsole_resetRequestMsg = GED("http://www.virtualbox.org/", "IConsole_reset").pyclass

IConsole_resetResultMsg = GED("http://www.virtualbox.org/", "IConsole_resetResponse").pyclass

IConsole_pauseRequestMsg = GED("http://www.virtualbox.org/", "IConsole_pause").pyclass

IConsole_pauseResultMsg = GED("http://www.virtualbox.org/", "IConsole_pauseResponse").pyclass

IConsole_resumeRequestMsg = GED("http://www.virtualbox.org/", "IConsole_resume").pyclass

IConsole_resumeResultMsg = GED("http://www.virtualbox.org/", "IConsole_resumeResponse").pyclass

IConsole_powerButtonRequestMsg = GED("http://www.virtualbox.org/", "IConsole_powerButton").pyclass

IConsole_powerButtonResultMsg = GED("http://www.virtualbox.org/", "IConsole_powerButtonResponse").pyclass

IConsole_sleepButtonRequestMsg = GED("http://www.virtualbox.org/", "IConsole_sleepButton").pyclass

IConsole_sleepButtonResultMsg = GED("http://www.virtualbox.org/", "IConsole_sleepButtonResponse").pyclass

IConsole_getPowerButtonHandledRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getPowerButtonHandled").pyclass

IConsole_getPowerButtonHandledResultMsg = GED("http://www.virtualbox.org/", "IConsole_getPowerButtonHandledResponse").pyclass

IConsole_getGuestEnteredACPIModeRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getGuestEnteredACPIMode").pyclass

IConsole_getGuestEnteredACPIModeResultMsg = GED("http://www.virtualbox.org/", "IConsole_getGuestEnteredACPIModeResponse").pyclass

IConsole_getDeviceActivityRequestMsg = GED("http://www.virtualbox.org/", "IConsole_getDeviceActivity").pyclass

IConsole_getDeviceActivityResultMsg = GED("http://www.virtualbox.org/", "IConsole_getDeviceActivityResponse").pyclass

IConsole_attachUSBDeviceRequestMsg = GED("http://www.virtualbox.org/", "IConsole_attachUSBDevice").pyclass

IConsole_attachUSBDeviceResultMsg = GED("http://www.virtualbox.org/", "IConsole_attachUSBDeviceResponse").pyclass

IConsole_detachUSBDeviceRequestMsg = GED("http://www.virtualbox.org/", "IConsole_detachUSBDevice").pyclass

IConsole_detachUSBDeviceResultMsg = GED("http://www.virtualbox.org/", "IConsole_detachUSBDeviceResponse").pyclass

IConsole_findUSBDeviceByAddressRequestMsg = GED("http://www.virtualbox.org/", "IConsole_findUSBDeviceByAddress").pyclass

IConsole_findUSBDeviceByAddressResultMsg = GED("http://www.virtualbox.org/", "IConsole_findUSBDeviceByAddressResponse").pyclass

IConsole_findUSBDeviceByIdRequestMsg = GED("http://www.virtualbox.org/", "IConsole_findUSBDeviceById").pyclass

IConsole_findUSBDeviceByIdResultMsg = GED("http://www.virtualbox.org/", "IConsole_findUSBDeviceByIdResponse").pyclass

IConsole_createSharedFolderRequestMsg = GED("http://www.virtualbox.org/", "IConsole_createSharedFolder").pyclass

IConsole_createSharedFolderResultMsg = GED("http://www.virtualbox.org/", "IConsole_createSharedFolderResponse").pyclass

IConsole_removeSharedFolderRequestMsg = GED("http://www.virtualbox.org/", "IConsole_removeSharedFolder").pyclass

IConsole_removeSharedFolderResultMsg = GED("http://www.virtualbox.org/", "IConsole_removeSharedFolderResponse").pyclass

IConsole_teleportRequestMsg = GED("http://www.virtualbox.org/", "IConsole_teleport").pyclass

IConsole_teleportResultMsg = GED("http://www.virtualbox.org/", "IConsole_teleportResponse").pyclass

IConsole_addDiskEncryptionPasswordRequestMsg = GED("http://www.virtualbox.org/", "IConsole_addDiskEncryptionPassword").pyclass

IConsole_addDiskEncryptionPasswordResultMsg = GED("http://www.virtualbox.org/", "IConsole_addDiskEncryptionPasswordResponse").pyclass

IConsole_addDiskEncryptionPasswordsRequestMsg = GED("http://www.virtualbox.org/", "IConsole_addDiskEncryptionPasswords").pyclass

IConsole_addDiskEncryptionPasswordsResultMsg = GED("http://www.virtualbox.org/", "IConsole_addDiskEncryptionPasswordsResponse").pyclass

IConsole_removeDiskEncryptionPasswordRequestMsg = GED("http://www.virtualbox.org/", "IConsole_removeDiskEncryptionPassword").pyclass

IConsole_removeDiskEncryptionPasswordResultMsg = GED("http://www.virtualbox.org/", "IConsole_removeDiskEncryptionPasswordResponse").pyclass

IConsole_clearAllDiskEncryptionPasswordsRequestMsg = GED("http://www.virtualbox.org/", "IConsole_clearAllDiskEncryptionPasswords").pyclass

IConsole_clearAllDiskEncryptionPasswordsResultMsg = GED("http://www.virtualbox.org/", "IConsole_clearAllDiskEncryptionPasswordsResponse").pyclass

IHostNetworkInterface_getNameRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getName").pyclass

IHostNetworkInterface_getNameResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getNameResponse").pyclass

IHostNetworkInterface_getShortNameRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getShortName").pyclass

IHostNetworkInterface_getShortNameResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getShortNameResponse").pyclass

IHostNetworkInterface_getIdRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getId").pyclass

IHostNetworkInterface_getIdResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getIdResponse").pyclass

IHostNetworkInterface_getNetworkNameRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getNetworkName").pyclass

IHostNetworkInterface_getNetworkNameResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getNetworkNameResponse").pyclass

IHostNetworkInterface_getDHCPEnabledRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getDHCPEnabled").pyclass

IHostNetworkInterface_getDHCPEnabledResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getDHCPEnabledResponse").pyclass

IHostNetworkInterface_getIPAddressRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getIPAddress").pyclass

IHostNetworkInterface_getIPAddressResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getIPAddressResponse").pyclass

IHostNetworkInterface_getNetworkMaskRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getNetworkMask").pyclass

IHostNetworkInterface_getNetworkMaskResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getNetworkMaskResponse").pyclass

IHostNetworkInterface_getIPV6SupportedRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getIPV6Supported").pyclass

IHostNetworkInterface_getIPV6SupportedResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getIPV6SupportedResponse").pyclass

IHostNetworkInterface_getIPV6AddressRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getIPV6Address").pyclass

IHostNetworkInterface_getIPV6AddressResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getIPV6AddressResponse").pyclass

IHostNetworkInterface_getIPV6NetworkMaskPrefixLengthRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getIPV6NetworkMaskPrefixLength").pyclass

IHostNetworkInterface_getIPV6NetworkMaskPrefixLengthResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getIPV6NetworkMaskPrefixLengthResponse").pyclass

IHostNetworkInterface_getHardwareAddressRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getHardwareAddress").pyclass

IHostNetworkInterface_getHardwareAddressResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getHardwareAddressResponse").pyclass

IHostNetworkInterface_getMediumTypeRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getMediumType").pyclass

IHostNetworkInterface_getMediumTypeResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getMediumTypeResponse").pyclass

IHostNetworkInterface_getStatusRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getStatus").pyclass

IHostNetworkInterface_getStatusResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getStatusResponse").pyclass

IHostNetworkInterface_getInterfaceTypeRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getInterfaceType").pyclass

IHostNetworkInterface_getInterfaceTypeResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_getInterfaceTypeResponse").pyclass

IHostNetworkInterface_enableStaticIPConfigRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_enableStaticIPConfig").pyclass

IHostNetworkInterface_enableStaticIPConfigResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_enableStaticIPConfigResponse").pyclass

IHostNetworkInterface_enableStaticIPConfigV6RequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_enableStaticIPConfigV6").pyclass

IHostNetworkInterface_enableStaticIPConfigV6ResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_enableStaticIPConfigV6Response").pyclass

IHostNetworkInterface_enableDynamicIPConfigRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_enableDynamicIPConfig").pyclass

IHostNetworkInterface_enableDynamicIPConfigResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_enableDynamicIPConfigResponse").pyclass

IHostNetworkInterface_DHCPRediscoverRequestMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_DHCPRediscover").pyclass

IHostNetworkInterface_DHCPRediscoverResultMsg = GED("http://www.virtualbox.org/", "IHostNetworkInterface_DHCPRediscoverResponse").pyclass

IHostVideoInputDevice_getNameRequestMsg = GED("http://www.virtualbox.org/", "IHostVideoInputDevice_getName").pyclass

IHostVideoInputDevice_getNameResultMsg = GED("http://www.virtualbox.org/", "IHostVideoInputDevice_getNameResponse").pyclass

IHostVideoInputDevice_getPathRequestMsg = GED("http://www.virtualbox.org/", "IHostVideoInputDevice_getPath").pyclass

IHostVideoInputDevice_getPathResultMsg = GED("http://www.virtualbox.org/", "IHostVideoInputDevice_getPathResponse").pyclass

IHostVideoInputDevice_getAliasRequestMsg = GED("http://www.virtualbox.org/", "IHostVideoInputDevice_getAlias").pyclass

IHostVideoInputDevice_getAliasResultMsg = GED("http://www.virtualbox.org/", "IHostVideoInputDevice_getAliasResponse").pyclass

IHost_getDVDDrivesRequestMsg = GED("http://www.virtualbox.org/", "IHost_getDVDDrives").pyclass

IHost_getDVDDrivesResultMsg = GED("http://www.virtualbox.org/", "IHost_getDVDDrivesResponse").pyclass

IHost_getFloppyDrivesRequestMsg = GED("http://www.virtualbox.org/", "IHost_getFloppyDrives").pyclass

IHost_getFloppyDrivesResultMsg = GED("http://www.virtualbox.org/", "IHost_getFloppyDrivesResponse").pyclass

IHost_getUSBDevicesRequestMsg = GED("http://www.virtualbox.org/", "IHost_getUSBDevices").pyclass

IHost_getUSBDevicesResultMsg = GED("http://www.virtualbox.org/", "IHost_getUSBDevicesResponse").pyclass

IHost_getUSBDeviceFiltersRequestMsg = GED("http://www.virtualbox.org/", "IHost_getUSBDeviceFilters").pyclass

IHost_getUSBDeviceFiltersResultMsg = GED("http://www.virtualbox.org/", "IHost_getUSBDeviceFiltersResponse").pyclass

IHost_getNetworkInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IHost_getNetworkInterfaces").pyclass

IHost_getNetworkInterfacesResultMsg = GED("http://www.virtualbox.org/", "IHost_getNetworkInterfacesResponse").pyclass

IHost_getNameServersRequestMsg = GED("http://www.virtualbox.org/", "IHost_getNameServers").pyclass

IHost_getNameServersResultMsg = GED("http://www.virtualbox.org/", "IHost_getNameServersResponse").pyclass

IHost_getDomainNameRequestMsg = GED("http://www.virtualbox.org/", "IHost_getDomainName").pyclass

IHost_getDomainNameResultMsg = GED("http://www.virtualbox.org/", "IHost_getDomainNameResponse").pyclass

IHost_getSearchStringsRequestMsg = GED("http://www.virtualbox.org/", "IHost_getSearchStrings").pyclass

IHost_getSearchStringsResultMsg = GED("http://www.virtualbox.org/", "IHost_getSearchStringsResponse").pyclass

IHost_getProcessorCountRequestMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorCount").pyclass

IHost_getProcessorCountResultMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorCountResponse").pyclass

IHost_getProcessorOnlineCountRequestMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorOnlineCount").pyclass

IHost_getProcessorOnlineCountResultMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorOnlineCountResponse").pyclass

IHost_getProcessorCoreCountRequestMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorCoreCount").pyclass

IHost_getProcessorCoreCountResultMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorCoreCountResponse").pyclass

IHost_getProcessorOnlineCoreCountRequestMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorOnlineCoreCount").pyclass

IHost_getProcessorOnlineCoreCountResultMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorOnlineCoreCountResponse").pyclass

IHost_getMemorySizeRequestMsg = GED("http://www.virtualbox.org/", "IHost_getMemorySize").pyclass

IHost_getMemorySizeResultMsg = GED("http://www.virtualbox.org/", "IHost_getMemorySizeResponse").pyclass

IHost_getMemoryAvailableRequestMsg = GED("http://www.virtualbox.org/", "IHost_getMemoryAvailable").pyclass

IHost_getMemoryAvailableResultMsg = GED("http://www.virtualbox.org/", "IHost_getMemoryAvailableResponse").pyclass

IHost_getOperatingSystemRequestMsg = GED("http://www.virtualbox.org/", "IHost_getOperatingSystem").pyclass

IHost_getOperatingSystemResultMsg = GED("http://www.virtualbox.org/", "IHost_getOperatingSystemResponse").pyclass

IHost_getOSVersionRequestMsg = GED("http://www.virtualbox.org/", "IHost_getOSVersion").pyclass

IHost_getOSVersionResultMsg = GED("http://www.virtualbox.org/", "IHost_getOSVersionResponse").pyclass

IHost_getUTCTimeRequestMsg = GED("http://www.virtualbox.org/", "IHost_getUTCTime").pyclass

IHost_getUTCTimeResultMsg = GED("http://www.virtualbox.org/", "IHost_getUTCTimeResponse").pyclass

IHost_getAcceleration3DAvailableRequestMsg = GED("http://www.virtualbox.org/", "IHost_getAcceleration3DAvailable").pyclass

IHost_getAcceleration3DAvailableResultMsg = GED("http://www.virtualbox.org/", "IHost_getAcceleration3DAvailableResponse").pyclass

IHost_getVideoInputDevicesRequestMsg = GED("http://www.virtualbox.org/", "IHost_getVideoInputDevices").pyclass

IHost_getVideoInputDevicesResultMsg = GED("http://www.virtualbox.org/", "IHost_getVideoInputDevicesResponse").pyclass

IHost_getProcessorSpeedRequestMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorSpeed").pyclass

IHost_getProcessorSpeedResultMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorSpeedResponse").pyclass

IHost_getProcessorFeatureRequestMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorFeature").pyclass

IHost_getProcessorFeatureResultMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorFeatureResponse").pyclass

IHost_getProcessorDescriptionRequestMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorDescription").pyclass

IHost_getProcessorDescriptionResultMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorDescriptionResponse").pyclass

IHost_getProcessorCPUIDLeafRequestMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorCPUIDLeaf").pyclass

IHost_getProcessorCPUIDLeafResultMsg = GED("http://www.virtualbox.org/", "IHost_getProcessorCPUIDLeafResponse").pyclass

IHost_createHostOnlyNetworkInterfaceRequestMsg = GED("http://www.virtualbox.org/", "IHost_createHostOnlyNetworkInterface").pyclass

IHost_createHostOnlyNetworkInterfaceResultMsg = GED("http://www.virtualbox.org/", "IHost_createHostOnlyNetworkInterfaceResponse").pyclass

IHost_removeHostOnlyNetworkInterfaceRequestMsg = GED("http://www.virtualbox.org/", "IHost_removeHostOnlyNetworkInterface").pyclass

IHost_removeHostOnlyNetworkInterfaceResultMsg = GED("http://www.virtualbox.org/", "IHost_removeHostOnlyNetworkInterfaceResponse").pyclass

IHost_createUSBDeviceFilterRequestMsg = GED("http://www.virtualbox.org/", "IHost_createUSBDeviceFilter").pyclass

IHost_createUSBDeviceFilterResultMsg = GED("http://www.virtualbox.org/", "IHost_createUSBDeviceFilterResponse").pyclass

IHost_insertUSBDeviceFilterRequestMsg = GED("http://www.virtualbox.org/", "IHost_insertUSBDeviceFilter").pyclass

IHost_insertUSBDeviceFilterResultMsg = GED("http://www.virtualbox.org/", "IHost_insertUSBDeviceFilterResponse").pyclass

IHost_removeUSBDeviceFilterRequestMsg = GED("http://www.virtualbox.org/", "IHost_removeUSBDeviceFilter").pyclass

IHost_removeUSBDeviceFilterResultMsg = GED("http://www.virtualbox.org/", "IHost_removeUSBDeviceFilterResponse").pyclass

IHost_findHostDVDDriveRequestMsg = GED("http://www.virtualbox.org/", "IHost_findHostDVDDrive").pyclass

IHost_findHostDVDDriveResultMsg = GED("http://www.virtualbox.org/", "IHost_findHostDVDDriveResponse").pyclass

IHost_findHostFloppyDriveRequestMsg = GED("http://www.virtualbox.org/", "IHost_findHostFloppyDrive").pyclass

IHost_findHostFloppyDriveResultMsg = GED("http://www.virtualbox.org/", "IHost_findHostFloppyDriveResponse").pyclass

IHost_findHostNetworkInterfaceByNameRequestMsg = GED("http://www.virtualbox.org/", "IHost_findHostNetworkInterfaceByName").pyclass

IHost_findHostNetworkInterfaceByNameResultMsg = GED("http://www.virtualbox.org/", "IHost_findHostNetworkInterfaceByNameResponse").pyclass

IHost_findHostNetworkInterfaceByIdRequestMsg = GED("http://www.virtualbox.org/", "IHost_findHostNetworkInterfaceById").pyclass

IHost_findHostNetworkInterfaceByIdResultMsg = GED("http://www.virtualbox.org/", "IHost_findHostNetworkInterfaceByIdResponse").pyclass

IHost_findHostNetworkInterfacesOfTypeRequestMsg = GED("http://www.virtualbox.org/", "IHost_findHostNetworkInterfacesOfType").pyclass

IHost_findHostNetworkInterfacesOfTypeResultMsg = GED("http://www.virtualbox.org/", "IHost_findHostNetworkInterfacesOfTypeResponse").pyclass

IHost_findUSBDeviceByIdRequestMsg = GED("http://www.virtualbox.org/", "IHost_findUSBDeviceById").pyclass

IHost_findUSBDeviceByIdResultMsg = GED("http://www.virtualbox.org/", "IHost_findUSBDeviceByIdResponse").pyclass

IHost_findUSBDeviceByAddressRequestMsg = GED("http://www.virtualbox.org/", "IHost_findUSBDeviceByAddress").pyclass

IHost_findUSBDeviceByAddressResultMsg = GED("http://www.virtualbox.org/", "IHost_findUSBDeviceByAddressResponse").pyclass

IHost_generateMACAddressRequestMsg = GED("http://www.virtualbox.org/", "IHost_generateMACAddress").pyclass

IHost_generateMACAddressResultMsg = GED("http://www.virtualbox.org/", "IHost_generateMACAddressResponse").pyclass

ISystemProperties_getMinGuestRAMRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMinGuestRAM").pyclass

ISystemProperties_getMinGuestRAMResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMinGuestRAMResponse").pyclass

ISystemProperties_getMaxGuestRAMRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxGuestRAM").pyclass

ISystemProperties_getMaxGuestRAMResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxGuestRAMResponse").pyclass

ISystemProperties_getMinGuestVRAMRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMinGuestVRAM").pyclass

ISystemProperties_getMinGuestVRAMResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMinGuestVRAMResponse").pyclass

ISystemProperties_getMaxGuestVRAMRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxGuestVRAM").pyclass

ISystemProperties_getMaxGuestVRAMResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxGuestVRAMResponse").pyclass

ISystemProperties_getMinGuestCPUCountRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMinGuestCPUCount").pyclass

ISystemProperties_getMinGuestCPUCountResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMinGuestCPUCountResponse").pyclass

ISystemProperties_getMaxGuestCPUCountRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxGuestCPUCount").pyclass

ISystemProperties_getMaxGuestCPUCountResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxGuestCPUCountResponse").pyclass

ISystemProperties_getMaxGuestMonitorsRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxGuestMonitors").pyclass

ISystemProperties_getMaxGuestMonitorsResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxGuestMonitorsResponse").pyclass

ISystemProperties_getInfoVDSizeRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getInfoVDSize").pyclass

ISystemProperties_getInfoVDSizeResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getInfoVDSizeResponse").pyclass

ISystemProperties_getSerialPortCountRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getSerialPortCount").pyclass

ISystemProperties_getSerialPortCountResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getSerialPortCountResponse").pyclass

ISystemProperties_getParallelPortCountRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getParallelPortCount").pyclass

ISystemProperties_getParallelPortCountResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getParallelPortCountResponse").pyclass

ISystemProperties_getMaxBootPositionRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxBootPosition").pyclass

ISystemProperties_getMaxBootPositionResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxBootPositionResponse").pyclass

ISystemProperties_getRawModeSupportedRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getRawModeSupported").pyclass

ISystemProperties_getRawModeSupportedResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getRawModeSupportedResponse").pyclass

ISystemProperties_getExclusiveHwVirtRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getExclusiveHwVirt").pyclass

ISystemProperties_getExclusiveHwVirtResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getExclusiveHwVirtResponse").pyclass

ISystemProperties_setExclusiveHwVirtRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setExclusiveHwVirt").pyclass

ISystemProperties_setExclusiveHwVirtResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setExclusiveHwVirtResponse").pyclass

ISystemProperties_getDefaultMachineFolderRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDefaultMachineFolder").pyclass

ISystemProperties_getDefaultMachineFolderResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDefaultMachineFolderResponse").pyclass

ISystemProperties_setDefaultMachineFolderRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setDefaultMachineFolder").pyclass

ISystemProperties_setDefaultMachineFolderResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setDefaultMachineFolderResponse").pyclass

ISystemProperties_getLoggingLevelRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getLoggingLevel").pyclass

ISystemProperties_getLoggingLevelResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getLoggingLevelResponse").pyclass

ISystemProperties_setLoggingLevelRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setLoggingLevel").pyclass

ISystemProperties_setLoggingLevelResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setLoggingLevelResponse").pyclass

ISystemProperties_getMediumFormatsRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMediumFormats").pyclass

ISystemProperties_getMediumFormatsResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMediumFormatsResponse").pyclass

ISystemProperties_getDefaultHardDiskFormatRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDefaultHardDiskFormat").pyclass

ISystemProperties_getDefaultHardDiskFormatResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDefaultHardDiskFormatResponse").pyclass

ISystemProperties_setDefaultHardDiskFormatRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setDefaultHardDiskFormat").pyclass

ISystemProperties_setDefaultHardDiskFormatResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setDefaultHardDiskFormatResponse").pyclass

ISystemProperties_getFreeDiskSpaceWarningRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getFreeDiskSpaceWarning").pyclass

ISystemProperties_getFreeDiskSpaceWarningResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getFreeDiskSpaceWarningResponse").pyclass

ISystemProperties_setFreeDiskSpaceWarningRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setFreeDiskSpaceWarning").pyclass

ISystemProperties_setFreeDiskSpaceWarningResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setFreeDiskSpaceWarningResponse").pyclass

ISystemProperties_getFreeDiskSpacePercentWarningRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getFreeDiskSpacePercentWarning").pyclass

ISystemProperties_getFreeDiskSpacePercentWarningResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getFreeDiskSpacePercentWarningResponse").pyclass

ISystemProperties_setFreeDiskSpacePercentWarningRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setFreeDiskSpacePercentWarning").pyclass

ISystemProperties_setFreeDiskSpacePercentWarningResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setFreeDiskSpacePercentWarningResponse").pyclass

ISystemProperties_getFreeDiskSpaceErrorRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getFreeDiskSpaceError").pyclass

ISystemProperties_getFreeDiskSpaceErrorResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getFreeDiskSpaceErrorResponse").pyclass

ISystemProperties_setFreeDiskSpaceErrorRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setFreeDiskSpaceError").pyclass

ISystemProperties_setFreeDiskSpaceErrorResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setFreeDiskSpaceErrorResponse").pyclass

ISystemProperties_getFreeDiskSpacePercentErrorRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getFreeDiskSpacePercentError").pyclass

ISystemProperties_getFreeDiskSpacePercentErrorResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getFreeDiskSpacePercentErrorResponse").pyclass

ISystemProperties_setFreeDiskSpacePercentErrorRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setFreeDiskSpacePercentError").pyclass

ISystemProperties_setFreeDiskSpacePercentErrorResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setFreeDiskSpacePercentErrorResponse").pyclass

ISystemProperties_getVRDEAuthLibraryRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getVRDEAuthLibrary").pyclass

ISystemProperties_getVRDEAuthLibraryResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getVRDEAuthLibraryResponse").pyclass

ISystemProperties_setVRDEAuthLibraryRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setVRDEAuthLibrary").pyclass

ISystemProperties_setVRDEAuthLibraryResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setVRDEAuthLibraryResponse").pyclass

ISystemProperties_getWebServiceAuthLibraryRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getWebServiceAuthLibrary").pyclass

ISystemProperties_getWebServiceAuthLibraryResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getWebServiceAuthLibraryResponse").pyclass

ISystemProperties_setWebServiceAuthLibraryRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setWebServiceAuthLibrary").pyclass

ISystemProperties_setWebServiceAuthLibraryResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setWebServiceAuthLibraryResponse").pyclass

ISystemProperties_getDefaultVRDEExtPackRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDefaultVRDEExtPack").pyclass

ISystemProperties_getDefaultVRDEExtPackResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDefaultVRDEExtPackResponse").pyclass

ISystemProperties_setDefaultVRDEExtPackRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setDefaultVRDEExtPack").pyclass

ISystemProperties_setDefaultVRDEExtPackResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setDefaultVRDEExtPackResponse").pyclass

ISystemProperties_getLogHistoryCountRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getLogHistoryCount").pyclass

ISystemProperties_getLogHistoryCountResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getLogHistoryCountResponse").pyclass

ISystemProperties_setLogHistoryCountRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setLogHistoryCount").pyclass

ISystemProperties_setLogHistoryCountResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setLogHistoryCountResponse").pyclass

ISystemProperties_getDefaultAudioDriverRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDefaultAudioDriver").pyclass

ISystemProperties_getDefaultAudioDriverResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDefaultAudioDriverResponse").pyclass

ISystemProperties_getAutostartDatabasePathRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getAutostartDatabasePath").pyclass

ISystemProperties_getAutostartDatabasePathResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getAutostartDatabasePathResponse").pyclass

ISystemProperties_setAutostartDatabasePathRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setAutostartDatabasePath").pyclass

ISystemProperties_setAutostartDatabasePathResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setAutostartDatabasePathResponse").pyclass

ISystemProperties_getDefaultAdditionsISORequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDefaultAdditionsISO").pyclass

ISystemProperties_getDefaultAdditionsISOResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDefaultAdditionsISOResponse").pyclass

ISystemProperties_setDefaultAdditionsISORequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setDefaultAdditionsISO").pyclass

ISystemProperties_setDefaultAdditionsISOResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setDefaultAdditionsISOResponse").pyclass

ISystemProperties_getDefaultFrontendRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDefaultFrontend").pyclass

ISystemProperties_getDefaultFrontendResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDefaultFrontendResponse").pyclass

ISystemProperties_setDefaultFrontendRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setDefaultFrontend").pyclass

ISystemProperties_setDefaultFrontendResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_setDefaultFrontendResponse").pyclass

ISystemProperties_getScreenShotFormatsRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getScreenShotFormats").pyclass

ISystemProperties_getScreenShotFormatsResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getScreenShotFormatsResponse").pyclass

ISystemProperties_getMaxNetworkAdaptersRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxNetworkAdapters").pyclass

ISystemProperties_getMaxNetworkAdaptersResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxNetworkAdaptersResponse").pyclass

ISystemProperties_getMaxNetworkAdaptersOfTypeRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxNetworkAdaptersOfType").pyclass

ISystemProperties_getMaxNetworkAdaptersOfTypeResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxNetworkAdaptersOfTypeResponse").pyclass

ISystemProperties_getMaxDevicesPerPortForStorageBusRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxDevicesPerPortForStorageBus").pyclass

ISystemProperties_getMaxDevicesPerPortForStorageBusResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxDevicesPerPortForStorageBusResponse").pyclass

ISystemProperties_getMinPortCountForStorageBusRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMinPortCountForStorageBus").pyclass

ISystemProperties_getMinPortCountForStorageBusResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMinPortCountForStorageBusResponse").pyclass

ISystemProperties_getMaxPortCountForStorageBusRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxPortCountForStorageBus").pyclass

ISystemProperties_getMaxPortCountForStorageBusResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxPortCountForStorageBusResponse").pyclass

ISystemProperties_getMaxInstancesOfStorageBusRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxInstancesOfStorageBus").pyclass

ISystemProperties_getMaxInstancesOfStorageBusResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxInstancesOfStorageBusResponse").pyclass

ISystemProperties_getDeviceTypesForStorageBusRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDeviceTypesForStorageBus").pyclass

ISystemProperties_getDeviceTypesForStorageBusResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDeviceTypesForStorageBusResponse").pyclass

ISystemProperties_getDefaultIoCacheSettingForStorageControllerRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDefaultIoCacheSettingForStorageController").pyclass

ISystemProperties_getDefaultIoCacheSettingForStorageControllerResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getDefaultIoCacheSettingForStorageControllerResponse").pyclass

ISystemProperties_getStorageControllerHotplugCapableRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getStorageControllerHotplugCapable").pyclass

ISystemProperties_getStorageControllerHotplugCapableResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getStorageControllerHotplugCapableResponse").pyclass

ISystemProperties_getMaxInstancesOfUSBControllerTypeRequestMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxInstancesOfUSBControllerType").pyclass

ISystemProperties_getMaxInstancesOfUSBControllerTypeResultMsg = GED("http://www.virtualbox.org/", "ISystemProperties_getMaxInstancesOfUSBControllerTypeResponse").pyclass

IDnDBase_getFormatsRequestMsg = GED("http://www.virtualbox.org/", "IDnDBase_getFormats").pyclass

IDnDBase_getFormatsResultMsg = GED("http://www.virtualbox.org/", "IDnDBase_getFormatsResponse").pyclass

IDnDBase_getProtocolVersionRequestMsg = GED("http://www.virtualbox.org/", "IDnDBase_getProtocolVersion").pyclass

IDnDBase_getProtocolVersionResultMsg = GED("http://www.virtualbox.org/", "IDnDBase_getProtocolVersionResponse").pyclass

IDnDBase_isFormatSupportedRequestMsg = GED("http://www.virtualbox.org/", "IDnDBase_isFormatSupported").pyclass

IDnDBase_isFormatSupportedResultMsg = GED("http://www.virtualbox.org/", "IDnDBase_isFormatSupportedResponse").pyclass

IDnDBase_addFormatsRequestMsg = GED("http://www.virtualbox.org/", "IDnDBase_addFormats").pyclass

IDnDBase_addFormatsResultMsg = GED("http://www.virtualbox.org/", "IDnDBase_addFormatsResponse").pyclass

IDnDBase_removeFormatsRequestMsg = GED("http://www.virtualbox.org/", "IDnDBase_removeFormats").pyclass

IDnDBase_removeFormatsResultMsg = GED("http://www.virtualbox.org/", "IDnDBase_removeFormatsResponse").pyclass

IDnDSource_dragIsPendingRequestMsg = GED("http://www.virtualbox.org/", "IDnDSource_dragIsPending").pyclass

IDnDSource_dragIsPendingResultMsg = GED("http://www.virtualbox.org/", "IDnDSource_dragIsPendingResponse").pyclass

IDnDSource_dropRequestMsg = GED("http://www.virtualbox.org/", "IDnDSource_drop").pyclass

IDnDSource_dropResultMsg = GED("http://www.virtualbox.org/", "IDnDSource_dropResponse").pyclass

IDnDSource_receiveDataRequestMsg = GED("http://www.virtualbox.org/", "IDnDSource_receiveData").pyclass

IDnDSource_receiveDataResultMsg = GED("http://www.virtualbox.org/", "IDnDSource_receiveDataResponse").pyclass

IGuestDnDSource_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IGuestDnDSource_getMidlDoesNotLikeEmptyInterfaces").pyclass

IGuestDnDSource_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IGuestDnDSource_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IDnDTarget_enterRequestMsg = GED("http://www.virtualbox.org/", "IDnDTarget_enter").pyclass

IDnDTarget_enterResultMsg = GED("http://www.virtualbox.org/", "IDnDTarget_enterResponse").pyclass

IDnDTarget_moveRequestMsg = GED("http://www.virtualbox.org/", "IDnDTarget_move").pyclass

IDnDTarget_moveResultMsg = GED("http://www.virtualbox.org/", "IDnDTarget_moveResponse").pyclass

IDnDTarget_leaveRequestMsg = GED("http://www.virtualbox.org/", "IDnDTarget_leave").pyclass

IDnDTarget_leaveResultMsg = GED("http://www.virtualbox.org/", "IDnDTarget_leaveResponse").pyclass

IDnDTarget_dropRequestMsg = GED("http://www.virtualbox.org/", "IDnDTarget_drop").pyclass

IDnDTarget_dropResultMsg = GED("http://www.virtualbox.org/", "IDnDTarget_dropResponse").pyclass

IDnDTarget_sendDataRequestMsg = GED("http://www.virtualbox.org/", "IDnDTarget_sendData").pyclass

IDnDTarget_sendDataResultMsg = GED("http://www.virtualbox.org/", "IDnDTarget_sendDataResponse").pyclass

IDnDTarget_cancelRequestMsg = GED("http://www.virtualbox.org/", "IDnDTarget_cancel").pyclass

IDnDTarget_cancelResultMsg = GED("http://www.virtualbox.org/", "IDnDTarget_cancelResponse").pyclass

IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfaces").pyclass

IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IGuestSession_getUserRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getUser").pyclass

IGuestSession_getUserResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getUserResponse").pyclass

IGuestSession_getDomainRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getDomain").pyclass

IGuestSession_getDomainResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getDomainResponse").pyclass

IGuestSession_getNameRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getName").pyclass

IGuestSession_getNameResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getNameResponse").pyclass

IGuestSession_getIdRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getId").pyclass

IGuestSession_getIdResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getIdResponse").pyclass

IGuestSession_getTimeoutRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getTimeout").pyclass

IGuestSession_getTimeoutResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getTimeoutResponse").pyclass

IGuestSession_setTimeoutRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_setTimeout").pyclass

IGuestSession_setTimeoutResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_setTimeoutResponse").pyclass

IGuestSession_getProtocolVersionRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getProtocolVersion").pyclass

IGuestSession_getProtocolVersionResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getProtocolVersionResponse").pyclass

IGuestSession_getStatusRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getStatus").pyclass

IGuestSession_getStatusResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getStatusResponse").pyclass

IGuestSession_getEnvironmentChangesRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getEnvironmentChanges").pyclass

IGuestSession_getEnvironmentChangesResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getEnvironmentChangesResponse").pyclass

IGuestSession_setEnvironmentChangesRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_setEnvironmentChanges").pyclass

IGuestSession_setEnvironmentChangesResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_setEnvironmentChangesResponse").pyclass

IGuestSession_getEnvironmentBaseRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getEnvironmentBase").pyclass

IGuestSession_getEnvironmentBaseResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getEnvironmentBaseResponse").pyclass

IGuestSession_getProcessesRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getProcesses").pyclass

IGuestSession_getProcessesResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getProcessesResponse").pyclass

IGuestSession_getPathStyleRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getPathStyle").pyclass

IGuestSession_getPathStyleResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getPathStyleResponse").pyclass

IGuestSession_getCurrentDirectoryRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getCurrentDirectory").pyclass

IGuestSession_getCurrentDirectoryResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getCurrentDirectoryResponse").pyclass

IGuestSession_setCurrentDirectoryRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_setCurrentDirectory").pyclass

IGuestSession_setCurrentDirectoryResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_setCurrentDirectoryResponse").pyclass

IGuestSession_getDirectoriesRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getDirectories").pyclass

IGuestSession_getDirectoriesResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getDirectoriesResponse").pyclass

IGuestSession_getFilesRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getFiles").pyclass

IGuestSession_getFilesResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getFilesResponse").pyclass

IGuestSession_getEventSourceRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_getEventSource").pyclass

IGuestSession_getEventSourceResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_getEventSourceResponse").pyclass

IGuestSession_closeRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_close").pyclass

IGuestSession_closeResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_closeResponse").pyclass

IGuestSession_directoryCopyRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryCopy").pyclass

IGuestSession_directoryCopyResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryCopyResponse").pyclass

IGuestSession_directoryCopyFromGuestRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryCopyFromGuest").pyclass

IGuestSession_directoryCopyFromGuestResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryCopyFromGuestResponse").pyclass

IGuestSession_directoryCopyToGuestRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryCopyToGuest").pyclass

IGuestSession_directoryCopyToGuestResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryCopyToGuestResponse").pyclass

IGuestSession_directoryCreateRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryCreate").pyclass

IGuestSession_directoryCreateResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryCreateResponse").pyclass

IGuestSession_directoryCreateTempRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryCreateTemp").pyclass

IGuestSession_directoryCreateTempResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryCreateTempResponse").pyclass

IGuestSession_directoryExistsRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryExists").pyclass

IGuestSession_directoryExistsResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryExistsResponse").pyclass

IGuestSession_directoryOpenRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryOpen").pyclass

IGuestSession_directoryOpenResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryOpenResponse").pyclass

IGuestSession_directoryRemoveRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryRemove").pyclass

IGuestSession_directoryRemoveResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryRemoveResponse").pyclass

IGuestSession_directoryRemoveRecursiveRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryRemoveRecursive").pyclass

IGuestSession_directoryRemoveRecursiveResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_directoryRemoveRecursiveResponse").pyclass

IGuestSession_environmentScheduleSetRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_environmentScheduleSet").pyclass

IGuestSession_environmentScheduleSetResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_environmentScheduleSetResponse").pyclass

IGuestSession_environmentScheduleUnsetRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_environmentScheduleUnset").pyclass

IGuestSession_environmentScheduleUnsetResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_environmentScheduleUnsetResponse").pyclass

IGuestSession_environmentGetBaseVariableRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_environmentGetBaseVariable").pyclass

IGuestSession_environmentGetBaseVariableResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_environmentGetBaseVariableResponse").pyclass

IGuestSession_environmentDoesBaseVariableExistRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_environmentDoesBaseVariableExist").pyclass

IGuestSession_environmentDoesBaseVariableExistResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_environmentDoesBaseVariableExistResponse").pyclass

IGuestSession_fileCopyRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileCopy").pyclass

IGuestSession_fileCopyResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileCopyResponse").pyclass

IGuestSession_fileCopyFromGuestRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileCopyFromGuest").pyclass

IGuestSession_fileCopyFromGuestResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileCopyFromGuestResponse").pyclass

IGuestSession_fileCopyToGuestRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileCopyToGuest").pyclass

IGuestSession_fileCopyToGuestResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileCopyToGuestResponse").pyclass

IGuestSession_fileCreateTempRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileCreateTemp").pyclass

IGuestSession_fileCreateTempResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileCreateTempResponse").pyclass

IGuestSession_fileExistsRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileExists").pyclass

IGuestSession_fileExistsResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileExistsResponse").pyclass

IGuestSession_fileOpenRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileOpen").pyclass

IGuestSession_fileOpenResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileOpenResponse").pyclass

IGuestSession_fileOpenExRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileOpenEx").pyclass

IGuestSession_fileOpenExResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileOpenExResponse").pyclass

IGuestSession_fileQuerySizeRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileQuerySize").pyclass

IGuestSession_fileQuerySizeResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_fileQuerySizeResponse").pyclass

IGuestSession_fsObjExistsRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_fsObjExists").pyclass

IGuestSession_fsObjExistsResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_fsObjExistsResponse").pyclass

IGuestSession_fsObjQueryInfoRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_fsObjQueryInfo").pyclass

IGuestSession_fsObjQueryInfoResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_fsObjQueryInfoResponse").pyclass

IGuestSession_fsObjRemoveRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_fsObjRemove").pyclass

IGuestSession_fsObjRemoveResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_fsObjRemoveResponse").pyclass

IGuestSession_fsObjRenameRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_fsObjRename").pyclass

IGuestSession_fsObjRenameResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_fsObjRenameResponse").pyclass

IGuestSession_fsObjMoveRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_fsObjMove").pyclass

IGuestSession_fsObjMoveResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_fsObjMoveResponse").pyclass

IGuestSession_fsObjSetACLRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_fsObjSetACL").pyclass

IGuestSession_fsObjSetACLResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_fsObjSetACLResponse").pyclass

IGuestSession_processCreateRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_processCreate").pyclass

IGuestSession_processCreateResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_processCreateResponse").pyclass

IGuestSession_processCreateExRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_processCreateEx").pyclass

IGuestSession_processCreateExResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_processCreateExResponse").pyclass

IGuestSession_processGetRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_processGet").pyclass

IGuestSession_processGetResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_processGetResponse").pyclass

IGuestSession_symlinkCreateRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_symlinkCreate").pyclass

IGuestSession_symlinkCreateResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_symlinkCreateResponse").pyclass

IGuestSession_symlinkExistsRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_symlinkExists").pyclass

IGuestSession_symlinkExistsResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_symlinkExistsResponse").pyclass

IGuestSession_symlinkReadRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_symlinkRead").pyclass

IGuestSession_symlinkReadResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_symlinkReadResponse").pyclass

IGuestSession_waitForRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_waitFor").pyclass

IGuestSession_waitForResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_waitForResponse").pyclass

IGuestSession_waitForArrayRequestMsg = GED("http://www.virtualbox.org/", "IGuestSession_waitForArray").pyclass

IGuestSession_waitForArrayResultMsg = GED("http://www.virtualbox.org/", "IGuestSession_waitForArrayResponse").pyclass

IProcess_getArgumentsRequestMsg = GED("http://www.virtualbox.org/", "IProcess_getArguments").pyclass

IProcess_getArgumentsResultMsg = GED("http://www.virtualbox.org/", "IProcess_getArgumentsResponse").pyclass

IProcess_getEnvironmentRequestMsg = GED("http://www.virtualbox.org/", "IProcess_getEnvironment").pyclass

IProcess_getEnvironmentResultMsg = GED("http://www.virtualbox.org/", "IProcess_getEnvironmentResponse").pyclass

IProcess_getEventSourceRequestMsg = GED("http://www.virtualbox.org/", "IProcess_getEventSource").pyclass

IProcess_getEventSourceResultMsg = GED("http://www.virtualbox.org/", "IProcess_getEventSourceResponse").pyclass

IProcess_getExecutablePathRequestMsg = GED("http://www.virtualbox.org/", "IProcess_getExecutablePath").pyclass

IProcess_getExecutablePathResultMsg = GED("http://www.virtualbox.org/", "IProcess_getExecutablePathResponse").pyclass

IProcess_getExitCodeRequestMsg = GED("http://www.virtualbox.org/", "IProcess_getExitCode").pyclass

IProcess_getExitCodeResultMsg = GED("http://www.virtualbox.org/", "IProcess_getExitCodeResponse").pyclass

IProcess_getNameRequestMsg = GED("http://www.virtualbox.org/", "IProcess_getName").pyclass

IProcess_getNameResultMsg = GED("http://www.virtualbox.org/", "IProcess_getNameResponse").pyclass

IProcess_getPIDRequestMsg = GED("http://www.virtualbox.org/", "IProcess_getPID").pyclass

IProcess_getPIDResultMsg = GED("http://www.virtualbox.org/", "IProcess_getPIDResponse").pyclass

IProcess_getStatusRequestMsg = GED("http://www.virtualbox.org/", "IProcess_getStatus").pyclass

IProcess_getStatusResultMsg = GED("http://www.virtualbox.org/", "IProcess_getStatusResponse").pyclass

IProcess_waitForRequestMsg = GED("http://www.virtualbox.org/", "IProcess_waitFor").pyclass

IProcess_waitForResultMsg = GED("http://www.virtualbox.org/", "IProcess_waitForResponse").pyclass

IProcess_waitForArrayRequestMsg = GED("http://www.virtualbox.org/", "IProcess_waitForArray").pyclass

IProcess_waitForArrayResultMsg = GED("http://www.virtualbox.org/", "IProcess_waitForArrayResponse").pyclass

IProcess_readRequestMsg = GED("http://www.virtualbox.org/", "IProcess_read").pyclass

IProcess_readResultMsg = GED("http://www.virtualbox.org/", "IProcess_readResponse").pyclass

IProcess_writeRequestMsg = GED("http://www.virtualbox.org/", "IProcess_write").pyclass

IProcess_writeResultMsg = GED("http://www.virtualbox.org/", "IProcess_writeResponse").pyclass

IProcess_writeArrayRequestMsg = GED("http://www.virtualbox.org/", "IProcess_writeArray").pyclass

IProcess_writeArrayResultMsg = GED("http://www.virtualbox.org/", "IProcess_writeArrayResponse").pyclass

IProcess_terminateRequestMsg = GED("http://www.virtualbox.org/", "IProcess_terminate").pyclass

IProcess_terminateResultMsg = GED("http://www.virtualbox.org/", "IProcess_terminateResponse").pyclass

IGuestProcess_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IGuestProcess_getMidlDoesNotLikeEmptyInterfaces").pyclass

IGuestProcess_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IGuestProcess_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IDirectory_getDirectoryNameRequestMsg = GED("http://www.virtualbox.org/", "IDirectory_getDirectoryName").pyclass

IDirectory_getDirectoryNameResultMsg = GED("http://www.virtualbox.org/", "IDirectory_getDirectoryNameResponse").pyclass

IDirectory_getFilterRequestMsg = GED("http://www.virtualbox.org/", "IDirectory_getFilter").pyclass

IDirectory_getFilterResultMsg = GED("http://www.virtualbox.org/", "IDirectory_getFilterResponse").pyclass

IDirectory_closeRequestMsg = GED("http://www.virtualbox.org/", "IDirectory_close").pyclass

IDirectory_closeResultMsg = GED("http://www.virtualbox.org/", "IDirectory_closeResponse").pyclass

IDirectory_readRequestMsg = GED("http://www.virtualbox.org/", "IDirectory_read").pyclass

IDirectory_readResultMsg = GED("http://www.virtualbox.org/", "IDirectory_readResponse").pyclass

IGuestDirectory_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IGuestDirectory_getMidlDoesNotLikeEmptyInterfaces").pyclass

IGuestDirectory_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IGuestDirectory_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IFile_getEventSourceRequestMsg = GED("http://www.virtualbox.org/", "IFile_getEventSource").pyclass

IFile_getEventSourceResultMsg = GED("http://www.virtualbox.org/", "IFile_getEventSourceResponse").pyclass

IFile_getIdRequestMsg = GED("http://www.virtualbox.org/", "IFile_getId").pyclass

IFile_getIdResultMsg = GED("http://www.virtualbox.org/", "IFile_getIdResponse").pyclass

IFile_getInitialSizeRequestMsg = GED("http://www.virtualbox.org/", "IFile_getInitialSize").pyclass

IFile_getInitialSizeResultMsg = GED("http://www.virtualbox.org/", "IFile_getInitialSizeResponse").pyclass

IFile_getOffsetRequestMsg = GED("http://www.virtualbox.org/", "IFile_getOffset").pyclass

IFile_getOffsetResultMsg = GED("http://www.virtualbox.org/", "IFile_getOffsetResponse").pyclass

IFile_getStatusRequestMsg = GED("http://www.virtualbox.org/", "IFile_getStatus").pyclass

IFile_getStatusResultMsg = GED("http://www.virtualbox.org/", "IFile_getStatusResponse").pyclass

IFile_getFileNameRequestMsg = GED("http://www.virtualbox.org/", "IFile_getFileName").pyclass

IFile_getFileNameResultMsg = GED("http://www.virtualbox.org/", "IFile_getFileNameResponse").pyclass

IFile_getCreationModeRequestMsg = GED("http://www.virtualbox.org/", "IFile_getCreationMode").pyclass

IFile_getCreationModeResultMsg = GED("http://www.virtualbox.org/", "IFile_getCreationModeResponse").pyclass

IFile_getOpenActionRequestMsg = GED("http://www.virtualbox.org/", "IFile_getOpenAction").pyclass

IFile_getOpenActionResultMsg = GED("http://www.virtualbox.org/", "IFile_getOpenActionResponse").pyclass

IFile_getAccessModeRequestMsg = GED("http://www.virtualbox.org/", "IFile_getAccessMode").pyclass

IFile_getAccessModeResultMsg = GED("http://www.virtualbox.org/", "IFile_getAccessModeResponse").pyclass

IFile_closeRequestMsg = GED("http://www.virtualbox.org/", "IFile_close").pyclass

IFile_closeResultMsg = GED("http://www.virtualbox.org/", "IFile_closeResponse").pyclass

IFile_queryInfoRequestMsg = GED("http://www.virtualbox.org/", "IFile_queryInfo").pyclass

IFile_queryInfoResultMsg = GED("http://www.virtualbox.org/", "IFile_queryInfoResponse").pyclass

IFile_querySizeRequestMsg = GED("http://www.virtualbox.org/", "IFile_querySize").pyclass

IFile_querySizeResultMsg = GED("http://www.virtualbox.org/", "IFile_querySizeResponse").pyclass

IFile_readRequestMsg = GED("http://www.virtualbox.org/", "IFile_read").pyclass

IFile_readResultMsg = GED("http://www.virtualbox.org/", "IFile_readResponse").pyclass

IFile_readAtRequestMsg = GED("http://www.virtualbox.org/", "IFile_readAt").pyclass

IFile_readAtResultMsg = GED("http://www.virtualbox.org/", "IFile_readAtResponse").pyclass

IFile_seekRequestMsg = GED("http://www.virtualbox.org/", "IFile_seek").pyclass

IFile_seekResultMsg = GED("http://www.virtualbox.org/", "IFile_seekResponse").pyclass

IFile_setACLRequestMsg = GED("http://www.virtualbox.org/", "IFile_setACL").pyclass

IFile_setACLResultMsg = GED("http://www.virtualbox.org/", "IFile_setACLResponse").pyclass

IFile_setSizeRequestMsg = GED("http://www.virtualbox.org/", "IFile_setSize").pyclass

IFile_setSizeResultMsg = GED("http://www.virtualbox.org/", "IFile_setSizeResponse").pyclass

IFile_writeRequestMsg = GED("http://www.virtualbox.org/", "IFile_write").pyclass

IFile_writeResultMsg = GED("http://www.virtualbox.org/", "IFile_writeResponse").pyclass

IFile_writeAtRequestMsg = GED("http://www.virtualbox.org/", "IFile_writeAt").pyclass

IFile_writeAtResultMsg = GED("http://www.virtualbox.org/", "IFile_writeAtResponse").pyclass

IGuestFile_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IGuestFile_getMidlDoesNotLikeEmptyInterfaces").pyclass

IGuestFile_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IGuestFile_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IFsObjInfo_getAccessTimeRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getAccessTime").pyclass

IFsObjInfo_getAccessTimeResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getAccessTimeResponse").pyclass

IFsObjInfo_getAllocatedSizeRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getAllocatedSize").pyclass

IFsObjInfo_getAllocatedSizeResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getAllocatedSizeResponse").pyclass

IFsObjInfo_getBirthTimeRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getBirthTime").pyclass

IFsObjInfo_getBirthTimeResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getBirthTimeResponse").pyclass

IFsObjInfo_getChangeTimeRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getChangeTime").pyclass

IFsObjInfo_getChangeTimeResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getChangeTimeResponse").pyclass

IFsObjInfo_getDeviceNumberRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getDeviceNumber").pyclass

IFsObjInfo_getDeviceNumberResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getDeviceNumberResponse").pyclass

IFsObjInfo_getFileAttributesRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getFileAttributes").pyclass

IFsObjInfo_getFileAttributesResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getFileAttributesResponse").pyclass

IFsObjInfo_getGenerationIdRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getGenerationId").pyclass

IFsObjInfo_getGenerationIdResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getGenerationIdResponse").pyclass

IFsObjInfo_getGIDRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getGID").pyclass

IFsObjInfo_getGIDResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getGIDResponse").pyclass

IFsObjInfo_getGroupNameRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getGroupName").pyclass

IFsObjInfo_getGroupNameResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getGroupNameResponse").pyclass

IFsObjInfo_getHardLinksRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getHardLinks").pyclass

IFsObjInfo_getHardLinksResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getHardLinksResponse").pyclass

IFsObjInfo_getModificationTimeRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getModificationTime").pyclass

IFsObjInfo_getModificationTimeResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getModificationTimeResponse").pyclass

IFsObjInfo_getNameRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getName").pyclass

IFsObjInfo_getNameResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getNameResponse").pyclass

IFsObjInfo_getNodeIdRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getNodeId").pyclass

IFsObjInfo_getNodeIdResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getNodeIdResponse").pyclass

IFsObjInfo_getNodeIdDeviceRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getNodeIdDevice").pyclass

IFsObjInfo_getNodeIdDeviceResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getNodeIdDeviceResponse").pyclass

IFsObjInfo_getObjectSizeRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getObjectSize").pyclass

IFsObjInfo_getObjectSizeResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getObjectSizeResponse").pyclass

IFsObjInfo_getTypeRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getType").pyclass

IFsObjInfo_getTypeResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getTypeResponse").pyclass

IFsObjInfo_getUIDRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getUID").pyclass

IFsObjInfo_getUIDResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getUIDResponse").pyclass

IFsObjInfo_getUserFlagsRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getUserFlags").pyclass

IFsObjInfo_getUserFlagsResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getUserFlagsResponse").pyclass

IFsObjInfo_getUserNameRequestMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getUserName").pyclass

IFsObjInfo_getUserNameResultMsg = GED("http://www.virtualbox.org/", "IFsObjInfo_getUserNameResponse").pyclass

IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfaces").pyclass

IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IGuest_getOSTypeIdRequestMsg = GED("http://www.virtualbox.org/", "IGuest_getOSTypeId").pyclass

IGuest_getOSTypeIdResultMsg = GED("http://www.virtualbox.org/", "IGuest_getOSTypeIdResponse").pyclass

IGuest_getAdditionsRunLevelRequestMsg = GED("http://www.virtualbox.org/", "IGuest_getAdditionsRunLevel").pyclass

IGuest_getAdditionsRunLevelResultMsg = GED("http://www.virtualbox.org/", "IGuest_getAdditionsRunLevelResponse").pyclass

IGuest_getAdditionsVersionRequestMsg = GED("http://www.virtualbox.org/", "IGuest_getAdditionsVersion").pyclass

IGuest_getAdditionsVersionResultMsg = GED("http://www.virtualbox.org/", "IGuest_getAdditionsVersionResponse").pyclass

IGuest_getAdditionsRevisionRequestMsg = GED("http://www.virtualbox.org/", "IGuest_getAdditionsRevision").pyclass

IGuest_getAdditionsRevisionResultMsg = GED("http://www.virtualbox.org/", "IGuest_getAdditionsRevisionResponse").pyclass

IGuest_getDnDSourceRequestMsg = GED("http://www.virtualbox.org/", "IGuest_getDnDSource").pyclass

IGuest_getDnDSourceResultMsg = GED("http://www.virtualbox.org/", "IGuest_getDnDSourceResponse").pyclass

IGuest_getDnDTargetRequestMsg = GED("http://www.virtualbox.org/", "IGuest_getDnDTarget").pyclass

IGuest_getDnDTargetResultMsg = GED("http://www.virtualbox.org/", "IGuest_getDnDTargetResponse").pyclass

IGuest_getEventSourceRequestMsg = GED("http://www.virtualbox.org/", "IGuest_getEventSource").pyclass

IGuest_getEventSourceResultMsg = GED("http://www.virtualbox.org/", "IGuest_getEventSourceResponse").pyclass

IGuest_getFacilitiesRequestMsg = GED("http://www.virtualbox.org/", "IGuest_getFacilities").pyclass

IGuest_getFacilitiesResultMsg = GED("http://www.virtualbox.org/", "IGuest_getFacilitiesResponse").pyclass

IGuest_getSessionsRequestMsg = GED("http://www.virtualbox.org/", "IGuest_getSessions").pyclass

IGuest_getSessionsResultMsg = GED("http://www.virtualbox.org/", "IGuest_getSessionsResponse").pyclass

IGuest_getMemoryBalloonSizeRequestMsg = GED("http://www.virtualbox.org/", "IGuest_getMemoryBalloonSize").pyclass

IGuest_getMemoryBalloonSizeResultMsg = GED("http://www.virtualbox.org/", "IGuest_getMemoryBalloonSizeResponse").pyclass

IGuest_setMemoryBalloonSizeRequestMsg = GED("http://www.virtualbox.org/", "IGuest_setMemoryBalloonSize").pyclass

IGuest_setMemoryBalloonSizeResultMsg = GED("http://www.virtualbox.org/", "IGuest_setMemoryBalloonSizeResponse").pyclass

IGuest_getStatisticsUpdateIntervalRequestMsg = GED("http://www.virtualbox.org/", "IGuest_getStatisticsUpdateInterval").pyclass

IGuest_getStatisticsUpdateIntervalResultMsg = GED("http://www.virtualbox.org/", "IGuest_getStatisticsUpdateIntervalResponse").pyclass

IGuest_setStatisticsUpdateIntervalRequestMsg = GED("http://www.virtualbox.org/", "IGuest_setStatisticsUpdateInterval").pyclass

IGuest_setStatisticsUpdateIntervalResultMsg = GED("http://www.virtualbox.org/", "IGuest_setStatisticsUpdateIntervalResponse").pyclass

IGuest_internalGetStatisticsRequestMsg = GED("http://www.virtualbox.org/", "IGuest_internalGetStatistics").pyclass

IGuest_internalGetStatisticsResultMsg = GED("http://www.virtualbox.org/", "IGuest_internalGetStatisticsResponse").pyclass

IGuest_getFacilityStatusRequestMsg = GED("http://www.virtualbox.org/", "IGuest_getFacilityStatus").pyclass

IGuest_getFacilityStatusResultMsg = GED("http://www.virtualbox.org/", "IGuest_getFacilityStatusResponse").pyclass

IGuest_getAdditionsStatusRequestMsg = GED("http://www.virtualbox.org/", "IGuest_getAdditionsStatus").pyclass

IGuest_getAdditionsStatusResultMsg = GED("http://www.virtualbox.org/", "IGuest_getAdditionsStatusResponse").pyclass

IGuest_setCredentialsRequestMsg = GED("http://www.virtualbox.org/", "IGuest_setCredentials").pyclass

IGuest_setCredentialsResultMsg = GED("http://www.virtualbox.org/", "IGuest_setCredentialsResponse").pyclass

IGuest_createSessionRequestMsg = GED("http://www.virtualbox.org/", "IGuest_createSession").pyclass

IGuest_createSessionResultMsg = GED("http://www.virtualbox.org/", "IGuest_createSessionResponse").pyclass

IGuest_findSessionRequestMsg = GED("http://www.virtualbox.org/", "IGuest_findSession").pyclass

IGuest_findSessionResultMsg = GED("http://www.virtualbox.org/", "IGuest_findSessionResponse").pyclass

IGuest_updateGuestAdditionsRequestMsg = GED("http://www.virtualbox.org/", "IGuest_updateGuestAdditions").pyclass

IGuest_updateGuestAdditionsResultMsg = GED("http://www.virtualbox.org/", "IGuest_updateGuestAdditionsResponse").pyclass

IProgress_getIdRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getId").pyclass

IProgress_getIdResultMsg = GED("http://www.virtualbox.org/", "IProgress_getIdResponse").pyclass

IProgress_getDescriptionRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getDescription").pyclass

IProgress_getDescriptionResultMsg = GED("http://www.virtualbox.org/", "IProgress_getDescriptionResponse").pyclass

IProgress_getInitiatorRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getInitiator").pyclass

IProgress_getInitiatorResultMsg = GED("http://www.virtualbox.org/", "IProgress_getInitiatorResponse").pyclass

IProgress_getCancelableRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getCancelable").pyclass

IProgress_getCancelableResultMsg = GED("http://www.virtualbox.org/", "IProgress_getCancelableResponse").pyclass

IProgress_getPercentRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getPercent").pyclass

IProgress_getPercentResultMsg = GED("http://www.virtualbox.org/", "IProgress_getPercentResponse").pyclass

IProgress_getTimeRemainingRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getTimeRemaining").pyclass

IProgress_getTimeRemainingResultMsg = GED("http://www.virtualbox.org/", "IProgress_getTimeRemainingResponse").pyclass

IProgress_getCompletedRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getCompleted").pyclass

IProgress_getCompletedResultMsg = GED("http://www.virtualbox.org/", "IProgress_getCompletedResponse").pyclass

IProgress_getCanceledRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getCanceled").pyclass

IProgress_getCanceledResultMsg = GED("http://www.virtualbox.org/", "IProgress_getCanceledResponse").pyclass

IProgress_getResultCodeRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getResultCode").pyclass

IProgress_getResultCodeResultMsg = GED("http://www.virtualbox.org/", "IProgress_getResultCodeResponse").pyclass

IProgress_getErrorInfoRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getErrorInfo").pyclass

IProgress_getErrorInfoResultMsg = GED("http://www.virtualbox.org/", "IProgress_getErrorInfoResponse").pyclass

IProgress_getOperationCountRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getOperationCount").pyclass

IProgress_getOperationCountResultMsg = GED("http://www.virtualbox.org/", "IProgress_getOperationCountResponse").pyclass

IProgress_getOperationRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getOperation").pyclass

IProgress_getOperationResultMsg = GED("http://www.virtualbox.org/", "IProgress_getOperationResponse").pyclass

IProgress_getOperationDescriptionRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getOperationDescription").pyclass

IProgress_getOperationDescriptionResultMsg = GED("http://www.virtualbox.org/", "IProgress_getOperationDescriptionResponse").pyclass

IProgress_getOperationPercentRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getOperationPercent").pyclass

IProgress_getOperationPercentResultMsg = GED("http://www.virtualbox.org/", "IProgress_getOperationPercentResponse").pyclass

IProgress_getOperationWeightRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getOperationWeight").pyclass

IProgress_getOperationWeightResultMsg = GED("http://www.virtualbox.org/", "IProgress_getOperationWeightResponse").pyclass

IProgress_getTimeoutRequestMsg = GED("http://www.virtualbox.org/", "IProgress_getTimeout").pyclass

IProgress_getTimeoutResultMsg = GED("http://www.virtualbox.org/", "IProgress_getTimeoutResponse").pyclass

IProgress_setTimeoutRequestMsg = GED("http://www.virtualbox.org/", "IProgress_setTimeout").pyclass

IProgress_setTimeoutResultMsg = GED("http://www.virtualbox.org/", "IProgress_setTimeoutResponse").pyclass

IProgress_setCurrentOperationProgressRequestMsg = GED("http://www.virtualbox.org/", "IProgress_setCurrentOperationProgress").pyclass

IProgress_setCurrentOperationProgressResultMsg = GED("http://www.virtualbox.org/", "IProgress_setCurrentOperationProgressResponse").pyclass

IProgress_setNextOperationRequestMsg = GED("http://www.virtualbox.org/", "IProgress_setNextOperation").pyclass

IProgress_setNextOperationResultMsg = GED("http://www.virtualbox.org/", "IProgress_setNextOperationResponse").pyclass

IProgress_waitForCompletionRequestMsg = GED("http://www.virtualbox.org/", "IProgress_waitForCompletion").pyclass

IProgress_waitForCompletionResultMsg = GED("http://www.virtualbox.org/", "IProgress_waitForCompletionResponse").pyclass

IProgress_waitForOperationCompletionRequestMsg = GED("http://www.virtualbox.org/", "IProgress_waitForOperationCompletion").pyclass

IProgress_waitForOperationCompletionResultMsg = GED("http://www.virtualbox.org/", "IProgress_waitForOperationCompletionResponse").pyclass

IProgress_waitForAsyncProgressCompletionRequestMsg = GED("http://www.virtualbox.org/", "IProgress_waitForAsyncProgressCompletion").pyclass

IProgress_waitForAsyncProgressCompletionResultMsg = GED("http://www.virtualbox.org/", "IProgress_waitForAsyncProgressCompletionResponse").pyclass

IProgress_cancelRequestMsg = GED("http://www.virtualbox.org/", "IProgress_cancel").pyclass

IProgress_cancelResultMsg = GED("http://www.virtualbox.org/", "IProgress_cancelResponse").pyclass

ISnapshot_getIdRequestMsg = GED("http://www.virtualbox.org/", "ISnapshot_getId").pyclass

ISnapshot_getIdResultMsg = GED("http://www.virtualbox.org/", "ISnapshot_getIdResponse").pyclass

ISnapshot_getNameRequestMsg = GED("http://www.virtualbox.org/", "ISnapshot_getName").pyclass

ISnapshot_getNameResultMsg = GED("http://www.virtualbox.org/", "ISnapshot_getNameResponse").pyclass

ISnapshot_setNameRequestMsg = GED("http://www.virtualbox.org/", "ISnapshot_setName").pyclass

ISnapshot_setNameResultMsg = GED("http://www.virtualbox.org/", "ISnapshot_setNameResponse").pyclass

ISnapshot_getDescriptionRequestMsg = GED("http://www.virtualbox.org/", "ISnapshot_getDescription").pyclass

ISnapshot_getDescriptionResultMsg = GED("http://www.virtualbox.org/", "ISnapshot_getDescriptionResponse").pyclass

ISnapshot_setDescriptionRequestMsg = GED("http://www.virtualbox.org/", "ISnapshot_setDescription").pyclass

ISnapshot_setDescriptionResultMsg = GED("http://www.virtualbox.org/", "ISnapshot_setDescriptionResponse").pyclass

ISnapshot_getTimeStampRequestMsg = GED("http://www.virtualbox.org/", "ISnapshot_getTimeStamp").pyclass

ISnapshot_getTimeStampResultMsg = GED("http://www.virtualbox.org/", "ISnapshot_getTimeStampResponse").pyclass

ISnapshot_getOnlineRequestMsg = GED("http://www.virtualbox.org/", "ISnapshot_getOnline").pyclass

ISnapshot_getOnlineResultMsg = GED("http://www.virtualbox.org/", "ISnapshot_getOnlineResponse").pyclass

ISnapshot_getMachineRequestMsg = GED("http://www.virtualbox.org/", "ISnapshot_getMachine").pyclass

ISnapshot_getMachineResultMsg = GED("http://www.virtualbox.org/", "ISnapshot_getMachineResponse").pyclass

ISnapshot_getParentRequestMsg = GED("http://www.virtualbox.org/", "ISnapshot_getParent").pyclass

ISnapshot_getParentResultMsg = GED("http://www.virtualbox.org/", "ISnapshot_getParentResponse").pyclass

ISnapshot_getChildrenRequestMsg = GED("http://www.virtualbox.org/", "ISnapshot_getChildren").pyclass

ISnapshot_getChildrenResultMsg = GED("http://www.virtualbox.org/", "ISnapshot_getChildrenResponse").pyclass

ISnapshot_getChildrenCountRequestMsg = GED("http://www.virtualbox.org/", "ISnapshot_getChildrenCount").pyclass

ISnapshot_getChildrenCountResultMsg = GED("http://www.virtualbox.org/", "ISnapshot_getChildrenCountResponse").pyclass

IMedium_getIdRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getId").pyclass

IMedium_getIdResultMsg = GED("http://www.virtualbox.org/", "IMedium_getIdResponse").pyclass

IMedium_getDescriptionRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getDescription").pyclass

IMedium_getDescriptionResultMsg = GED("http://www.virtualbox.org/", "IMedium_getDescriptionResponse").pyclass

IMedium_setDescriptionRequestMsg = GED("http://www.virtualbox.org/", "IMedium_setDescription").pyclass

IMedium_setDescriptionResultMsg = GED("http://www.virtualbox.org/", "IMedium_setDescriptionResponse").pyclass

IMedium_getStateRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getState").pyclass

IMedium_getStateResultMsg = GED("http://www.virtualbox.org/", "IMedium_getStateResponse").pyclass

IMedium_getVariantRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getVariant").pyclass

IMedium_getVariantResultMsg = GED("http://www.virtualbox.org/", "IMedium_getVariantResponse").pyclass

IMedium_getLocationRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getLocation").pyclass

IMedium_getLocationResultMsg = GED("http://www.virtualbox.org/", "IMedium_getLocationResponse").pyclass

IMedium_getNameRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getName").pyclass

IMedium_getNameResultMsg = GED("http://www.virtualbox.org/", "IMedium_getNameResponse").pyclass

IMedium_getDeviceTypeRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getDeviceType").pyclass

IMedium_getDeviceTypeResultMsg = GED("http://www.virtualbox.org/", "IMedium_getDeviceTypeResponse").pyclass

IMedium_getHostDriveRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getHostDrive").pyclass

IMedium_getHostDriveResultMsg = GED("http://www.virtualbox.org/", "IMedium_getHostDriveResponse").pyclass

IMedium_getSizeRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getSize").pyclass

IMedium_getSizeResultMsg = GED("http://www.virtualbox.org/", "IMedium_getSizeResponse").pyclass

IMedium_getFormatRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getFormat").pyclass

IMedium_getFormatResultMsg = GED("http://www.virtualbox.org/", "IMedium_getFormatResponse").pyclass

IMedium_getMediumFormatRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getMediumFormat").pyclass

IMedium_getMediumFormatResultMsg = GED("http://www.virtualbox.org/", "IMedium_getMediumFormatResponse").pyclass

IMedium_getTypeRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getType").pyclass

IMedium_getTypeResultMsg = GED("http://www.virtualbox.org/", "IMedium_getTypeResponse").pyclass

IMedium_setTypeRequestMsg = GED("http://www.virtualbox.org/", "IMedium_setType").pyclass

IMedium_setTypeResultMsg = GED("http://www.virtualbox.org/", "IMedium_setTypeResponse").pyclass

IMedium_getAllowedTypesRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getAllowedTypes").pyclass

IMedium_getAllowedTypesResultMsg = GED("http://www.virtualbox.org/", "IMedium_getAllowedTypesResponse").pyclass

IMedium_getParentRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getParent").pyclass

IMedium_getParentResultMsg = GED("http://www.virtualbox.org/", "IMedium_getParentResponse").pyclass

IMedium_getChildrenRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getChildren").pyclass

IMedium_getChildrenResultMsg = GED("http://www.virtualbox.org/", "IMedium_getChildrenResponse").pyclass

IMedium_getBaseRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getBase").pyclass

IMedium_getBaseResultMsg = GED("http://www.virtualbox.org/", "IMedium_getBaseResponse").pyclass

IMedium_getReadOnlyRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getReadOnly").pyclass

IMedium_getReadOnlyResultMsg = GED("http://www.virtualbox.org/", "IMedium_getReadOnlyResponse").pyclass

IMedium_getLogicalSizeRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getLogicalSize").pyclass

IMedium_getLogicalSizeResultMsg = GED("http://www.virtualbox.org/", "IMedium_getLogicalSizeResponse").pyclass

IMedium_getAutoResetRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getAutoReset").pyclass

IMedium_getAutoResetResultMsg = GED("http://www.virtualbox.org/", "IMedium_getAutoResetResponse").pyclass

IMedium_setAutoResetRequestMsg = GED("http://www.virtualbox.org/", "IMedium_setAutoReset").pyclass

IMedium_setAutoResetResultMsg = GED("http://www.virtualbox.org/", "IMedium_setAutoResetResponse").pyclass

IMedium_getLastAccessErrorRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getLastAccessError").pyclass

IMedium_getLastAccessErrorResultMsg = GED("http://www.virtualbox.org/", "IMedium_getLastAccessErrorResponse").pyclass

IMedium_getMachineIdsRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getMachineIds").pyclass

IMedium_getMachineIdsResultMsg = GED("http://www.virtualbox.org/", "IMedium_getMachineIdsResponse").pyclass

IMedium_setIdsRequestMsg = GED("http://www.virtualbox.org/", "IMedium_setIds").pyclass

IMedium_setIdsResultMsg = GED("http://www.virtualbox.org/", "IMedium_setIdsResponse").pyclass

IMedium_refreshStateRequestMsg = GED("http://www.virtualbox.org/", "IMedium_refreshState").pyclass

IMedium_refreshStateResultMsg = GED("http://www.virtualbox.org/", "IMedium_refreshStateResponse").pyclass

IMedium_getSnapshotIdsRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getSnapshotIds").pyclass

IMedium_getSnapshotIdsResultMsg = GED("http://www.virtualbox.org/", "IMedium_getSnapshotIdsResponse").pyclass

IMedium_lockReadRequestMsg = GED("http://www.virtualbox.org/", "IMedium_lockRead").pyclass

IMedium_lockReadResultMsg = GED("http://www.virtualbox.org/", "IMedium_lockReadResponse").pyclass

IMedium_lockWriteRequestMsg = GED("http://www.virtualbox.org/", "IMedium_lockWrite").pyclass

IMedium_lockWriteResultMsg = GED("http://www.virtualbox.org/", "IMedium_lockWriteResponse").pyclass

IMedium_closeRequestMsg = GED("http://www.virtualbox.org/", "IMedium_close").pyclass

IMedium_closeResultMsg = GED("http://www.virtualbox.org/", "IMedium_closeResponse").pyclass

IMedium_getPropertyRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getProperty").pyclass

IMedium_getPropertyResultMsg = GED("http://www.virtualbox.org/", "IMedium_getPropertyResponse").pyclass

IMedium_setPropertyRequestMsg = GED("http://www.virtualbox.org/", "IMedium_setProperty").pyclass

IMedium_setPropertyResultMsg = GED("http://www.virtualbox.org/", "IMedium_setPropertyResponse").pyclass

IMedium_getPropertiesRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getProperties").pyclass

IMedium_getPropertiesResultMsg = GED("http://www.virtualbox.org/", "IMedium_getPropertiesResponse").pyclass

IMedium_setPropertiesRequestMsg = GED("http://www.virtualbox.org/", "IMedium_setProperties").pyclass

IMedium_setPropertiesResultMsg = GED("http://www.virtualbox.org/", "IMedium_setPropertiesResponse").pyclass

IMedium_createBaseStorageRequestMsg = GED("http://www.virtualbox.org/", "IMedium_createBaseStorage").pyclass

IMedium_createBaseStorageResultMsg = GED("http://www.virtualbox.org/", "IMedium_createBaseStorageResponse").pyclass

IMedium_deleteStorageRequestMsg = GED("http://www.virtualbox.org/", "IMedium_deleteStorage").pyclass

IMedium_deleteStorageResultMsg = GED("http://www.virtualbox.org/", "IMedium_deleteStorageResponse").pyclass

IMedium_createDiffStorageRequestMsg = GED("http://www.virtualbox.org/", "IMedium_createDiffStorage").pyclass

IMedium_createDiffStorageResultMsg = GED("http://www.virtualbox.org/", "IMedium_createDiffStorageResponse").pyclass

IMedium_mergeToRequestMsg = GED("http://www.virtualbox.org/", "IMedium_mergeTo").pyclass

IMedium_mergeToResultMsg = GED("http://www.virtualbox.org/", "IMedium_mergeToResponse").pyclass

IMedium_cloneToRequestMsg = GED("http://www.virtualbox.org/", "IMedium_cloneTo").pyclass

IMedium_cloneToResultMsg = GED("http://www.virtualbox.org/", "IMedium_cloneToResponse").pyclass

IMedium_cloneToBaseRequestMsg = GED("http://www.virtualbox.org/", "IMedium_cloneToBase").pyclass

IMedium_cloneToBaseResultMsg = GED("http://www.virtualbox.org/", "IMedium_cloneToBaseResponse").pyclass

IMedium_setLocationRequestMsg = GED("http://www.virtualbox.org/", "IMedium_setLocation").pyclass

IMedium_setLocationResultMsg = GED("http://www.virtualbox.org/", "IMedium_setLocationResponse").pyclass

IMedium_compactRequestMsg = GED("http://www.virtualbox.org/", "IMedium_compact").pyclass

IMedium_compactResultMsg = GED("http://www.virtualbox.org/", "IMedium_compactResponse").pyclass

IMedium_resizeRequestMsg = GED("http://www.virtualbox.org/", "IMedium_resize").pyclass

IMedium_resizeResultMsg = GED("http://www.virtualbox.org/", "IMedium_resizeResponse").pyclass

IMedium_resetRequestMsg = GED("http://www.virtualbox.org/", "IMedium_reset").pyclass

IMedium_resetResultMsg = GED("http://www.virtualbox.org/", "IMedium_resetResponse").pyclass

IMedium_changeEncryptionRequestMsg = GED("http://www.virtualbox.org/", "IMedium_changeEncryption").pyclass

IMedium_changeEncryptionResultMsg = GED("http://www.virtualbox.org/", "IMedium_changeEncryptionResponse").pyclass

IMedium_getEncryptionSettingsRequestMsg = GED("http://www.virtualbox.org/", "IMedium_getEncryptionSettings").pyclass

IMedium_getEncryptionSettingsResultMsg = GED("http://www.virtualbox.org/", "IMedium_getEncryptionSettingsResponse").pyclass

IMedium_checkEncryptionPasswordRequestMsg = GED("http://www.virtualbox.org/", "IMedium_checkEncryptionPassword").pyclass

IMedium_checkEncryptionPasswordResultMsg = GED("http://www.virtualbox.org/", "IMedium_checkEncryptionPasswordResponse").pyclass

IMediumFormat_getIdRequestMsg = GED("http://www.virtualbox.org/", "IMediumFormat_getId").pyclass

IMediumFormat_getIdResultMsg = GED("http://www.virtualbox.org/", "IMediumFormat_getIdResponse").pyclass

IMediumFormat_getNameRequestMsg = GED("http://www.virtualbox.org/", "IMediumFormat_getName").pyclass

IMediumFormat_getNameResultMsg = GED("http://www.virtualbox.org/", "IMediumFormat_getNameResponse").pyclass

IMediumFormat_getCapabilitiesRequestMsg = GED("http://www.virtualbox.org/", "IMediumFormat_getCapabilities").pyclass

IMediumFormat_getCapabilitiesResultMsg = GED("http://www.virtualbox.org/", "IMediumFormat_getCapabilitiesResponse").pyclass

IMediumFormat_describeFileExtensionsRequestMsg = GED("http://www.virtualbox.org/", "IMediumFormat_describeFileExtensions").pyclass

IMediumFormat_describeFileExtensionsResultMsg = GED("http://www.virtualbox.org/", "IMediumFormat_describeFileExtensionsResponse").pyclass

IMediumFormat_describePropertiesRequestMsg = GED("http://www.virtualbox.org/", "IMediumFormat_describeProperties").pyclass

IMediumFormat_describePropertiesResultMsg = GED("http://www.virtualbox.org/", "IMediumFormat_describePropertiesResponse").pyclass

IToken_abandonRequestMsg = GED("http://www.virtualbox.org/", "IToken_abandon").pyclass

IToken_abandonResultMsg = GED("http://www.virtualbox.org/", "IToken_abandonResponse").pyclass

IToken_dummyRequestMsg = GED("http://www.virtualbox.org/", "IToken_dummy").pyclass

IToken_dummyResultMsg = GED("http://www.virtualbox.org/", "IToken_dummyResponse").pyclass

IKeyboard_getKeyboardLEDsRequestMsg = GED("http://www.virtualbox.org/", "IKeyboard_getKeyboardLEDs").pyclass

IKeyboard_getKeyboardLEDsResultMsg = GED("http://www.virtualbox.org/", "IKeyboard_getKeyboardLEDsResponse").pyclass

IKeyboard_getEventSourceRequestMsg = GED("http://www.virtualbox.org/", "IKeyboard_getEventSource").pyclass

IKeyboard_getEventSourceResultMsg = GED("http://www.virtualbox.org/", "IKeyboard_getEventSourceResponse").pyclass

IKeyboard_putScancodeRequestMsg = GED("http://www.virtualbox.org/", "IKeyboard_putScancode").pyclass

IKeyboard_putScancodeResultMsg = GED("http://www.virtualbox.org/", "IKeyboard_putScancodeResponse").pyclass

IKeyboard_putScancodesRequestMsg = GED("http://www.virtualbox.org/", "IKeyboard_putScancodes").pyclass

IKeyboard_putScancodesResultMsg = GED("http://www.virtualbox.org/", "IKeyboard_putScancodesResponse").pyclass

IKeyboard_putCADRequestMsg = GED("http://www.virtualbox.org/", "IKeyboard_putCAD").pyclass

IKeyboard_putCADResultMsg = GED("http://www.virtualbox.org/", "IKeyboard_putCADResponse").pyclass

IKeyboard_releaseKeysRequestMsg = GED("http://www.virtualbox.org/", "IKeyboard_releaseKeys").pyclass

IKeyboard_releaseKeysResultMsg = GED("http://www.virtualbox.org/", "IKeyboard_releaseKeysResponse").pyclass

IMousePointerShape_getVisibleRequestMsg = GED("http://www.virtualbox.org/", "IMousePointerShape_getVisible").pyclass

IMousePointerShape_getVisibleResultMsg = GED("http://www.virtualbox.org/", "IMousePointerShape_getVisibleResponse").pyclass

IMousePointerShape_getAlphaRequestMsg = GED("http://www.virtualbox.org/", "IMousePointerShape_getAlpha").pyclass

IMousePointerShape_getAlphaResultMsg = GED("http://www.virtualbox.org/", "IMousePointerShape_getAlphaResponse").pyclass

IMousePointerShape_getHotXRequestMsg = GED("http://www.virtualbox.org/", "IMousePointerShape_getHotX").pyclass

IMousePointerShape_getHotXResultMsg = GED("http://www.virtualbox.org/", "IMousePointerShape_getHotXResponse").pyclass

IMousePointerShape_getHotYRequestMsg = GED("http://www.virtualbox.org/", "IMousePointerShape_getHotY").pyclass

IMousePointerShape_getHotYResultMsg = GED("http://www.virtualbox.org/", "IMousePointerShape_getHotYResponse").pyclass

IMousePointerShape_getWidthRequestMsg = GED("http://www.virtualbox.org/", "IMousePointerShape_getWidth").pyclass

IMousePointerShape_getWidthResultMsg = GED("http://www.virtualbox.org/", "IMousePointerShape_getWidthResponse").pyclass

IMousePointerShape_getHeightRequestMsg = GED("http://www.virtualbox.org/", "IMousePointerShape_getHeight").pyclass

IMousePointerShape_getHeightResultMsg = GED("http://www.virtualbox.org/", "IMousePointerShape_getHeightResponse").pyclass

IMousePointerShape_getShapeRequestMsg = GED("http://www.virtualbox.org/", "IMousePointerShape_getShape").pyclass

IMousePointerShape_getShapeResultMsg = GED("http://www.virtualbox.org/", "IMousePointerShape_getShapeResponse").pyclass

IMouse_getAbsoluteSupportedRequestMsg = GED("http://www.virtualbox.org/", "IMouse_getAbsoluteSupported").pyclass

IMouse_getAbsoluteSupportedResultMsg = GED("http://www.virtualbox.org/", "IMouse_getAbsoluteSupportedResponse").pyclass

IMouse_getRelativeSupportedRequestMsg = GED("http://www.virtualbox.org/", "IMouse_getRelativeSupported").pyclass

IMouse_getRelativeSupportedResultMsg = GED("http://www.virtualbox.org/", "IMouse_getRelativeSupportedResponse").pyclass

IMouse_getMultiTouchSupportedRequestMsg = GED("http://www.virtualbox.org/", "IMouse_getMultiTouchSupported").pyclass

IMouse_getMultiTouchSupportedResultMsg = GED("http://www.virtualbox.org/", "IMouse_getMultiTouchSupportedResponse").pyclass

IMouse_getNeedsHostCursorRequestMsg = GED("http://www.virtualbox.org/", "IMouse_getNeedsHostCursor").pyclass

IMouse_getNeedsHostCursorResultMsg = GED("http://www.virtualbox.org/", "IMouse_getNeedsHostCursorResponse").pyclass

IMouse_getPointerShapeRequestMsg = GED("http://www.virtualbox.org/", "IMouse_getPointerShape").pyclass

IMouse_getPointerShapeResultMsg = GED("http://www.virtualbox.org/", "IMouse_getPointerShapeResponse").pyclass

IMouse_getEventSourceRequestMsg = GED("http://www.virtualbox.org/", "IMouse_getEventSource").pyclass

IMouse_getEventSourceResultMsg = GED("http://www.virtualbox.org/", "IMouse_getEventSourceResponse").pyclass

IMouse_putMouseEventRequestMsg = GED("http://www.virtualbox.org/", "IMouse_putMouseEvent").pyclass

IMouse_putMouseEventResultMsg = GED("http://www.virtualbox.org/", "IMouse_putMouseEventResponse").pyclass

IMouse_putMouseEventAbsoluteRequestMsg = GED("http://www.virtualbox.org/", "IMouse_putMouseEventAbsolute").pyclass

IMouse_putMouseEventAbsoluteResultMsg = GED("http://www.virtualbox.org/", "IMouse_putMouseEventAbsoluteResponse").pyclass

IMouse_putEventMultiTouchRequestMsg = GED("http://www.virtualbox.org/", "IMouse_putEventMultiTouch").pyclass

IMouse_putEventMultiTouchResultMsg = GED("http://www.virtualbox.org/", "IMouse_putEventMultiTouchResponse").pyclass

IMouse_putEventMultiTouchStringRequestMsg = GED("http://www.virtualbox.org/", "IMouse_putEventMultiTouchString").pyclass

IMouse_putEventMultiTouchStringResultMsg = GED("http://www.virtualbox.org/", "IMouse_putEventMultiTouchStringResponse").pyclass

IFramebuffer_getWidthRequestMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getWidth").pyclass

IFramebuffer_getWidthResultMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getWidthResponse").pyclass

IFramebuffer_getHeightRequestMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getHeight").pyclass

IFramebuffer_getHeightResultMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getHeightResponse").pyclass

IFramebuffer_getBitsPerPixelRequestMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getBitsPerPixel").pyclass

IFramebuffer_getBitsPerPixelResultMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getBitsPerPixelResponse").pyclass

IFramebuffer_getBytesPerLineRequestMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getBytesPerLine").pyclass

IFramebuffer_getBytesPerLineResultMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getBytesPerLineResponse").pyclass

IFramebuffer_getPixelFormatRequestMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getPixelFormat").pyclass

IFramebuffer_getPixelFormatResultMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getPixelFormatResponse").pyclass

IFramebuffer_getHeightReductionRequestMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getHeightReduction").pyclass

IFramebuffer_getHeightReductionResultMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getHeightReductionResponse").pyclass

IFramebuffer_getOverlayRequestMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getOverlay").pyclass

IFramebuffer_getOverlayResultMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getOverlayResponse").pyclass

IFramebuffer_getCapabilitiesRequestMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getCapabilities").pyclass

IFramebuffer_getCapabilitiesResultMsg = GED("http://www.virtualbox.org/", "IFramebuffer_getCapabilitiesResponse").pyclass

IFramebuffer_notifyUpdateRequestMsg = GED("http://www.virtualbox.org/", "IFramebuffer_notifyUpdate").pyclass

IFramebuffer_notifyUpdateResultMsg = GED("http://www.virtualbox.org/", "IFramebuffer_notifyUpdateResponse").pyclass

IFramebuffer_notifyUpdateImageRequestMsg = GED("http://www.virtualbox.org/", "IFramebuffer_notifyUpdateImage").pyclass

IFramebuffer_notifyUpdateImageResultMsg = GED("http://www.virtualbox.org/", "IFramebuffer_notifyUpdateImageResponse").pyclass

IFramebuffer_notifyChangeRequestMsg = GED("http://www.virtualbox.org/", "IFramebuffer_notifyChange").pyclass

IFramebuffer_notifyChangeResultMsg = GED("http://www.virtualbox.org/", "IFramebuffer_notifyChangeResponse").pyclass

IFramebuffer_videoModeSupportedRequestMsg = GED("http://www.virtualbox.org/", "IFramebuffer_videoModeSupported").pyclass

IFramebuffer_videoModeSupportedResultMsg = GED("http://www.virtualbox.org/", "IFramebuffer_videoModeSupportedResponse").pyclass

IFramebuffer_notify3DEventRequestMsg = GED("http://www.virtualbox.org/", "IFramebuffer_notify3DEvent").pyclass

IFramebuffer_notify3DEventResultMsg = GED("http://www.virtualbox.org/", "IFramebuffer_notify3DEventResponse").pyclass

IFramebufferOverlay_getXRequestMsg = GED("http://www.virtualbox.org/", "IFramebufferOverlay_getX").pyclass

IFramebufferOverlay_getXResultMsg = GED("http://www.virtualbox.org/", "IFramebufferOverlay_getXResponse").pyclass

IFramebufferOverlay_getYRequestMsg = GED("http://www.virtualbox.org/", "IFramebufferOverlay_getY").pyclass

IFramebufferOverlay_getYResultMsg = GED("http://www.virtualbox.org/", "IFramebufferOverlay_getYResponse").pyclass

IFramebufferOverlay_getVisibleRequestMsg = GED("http://www.virtualbox.org/", "IFramebufferOverlay_getVisible").pyclass

IFramebufferOverlay_getVisibleResultMsg = GED("http://www.virtualbox.org/", "IFramebufferOverlay_getVisibleResponse").pyclass

IFramebufferOverlay_setVisibleRequestMsg = GED("http://www.virtualbox.org/", "IFramebufferOverlay_setVisible").pyclass

IFramebufferOverlay_setVisibleResultMsg = GED("http://www.virtualbox.org/", "IFramebufferOverlay_setVisibleResponse").pyclass

IFramebufferOverlay_getAlphaRequestMsg = GED("http://www.virtualbox.org/", "IFramebufferOverlay_getAlpha").pyclass

IFramebufferOverlay_getAlphaResultMsg = GED("http://www.virtualbox.org/", "IFramebufferOverlay_getAlphaResponse").pyclass

IFramebufferOverlay_setAlphaRequestMsg = GED("http://www.virtualbox.org/", "IFramebufferOverlay_setAlpha").pyclass

IFramebufferOverlay_setAlphaResultMsg = GED("http://www.virtualbox.org/", "IFramebufferOverlay_setAlphaResponse").pyclass

IFramebufferOverlay_moveRequestMsg = GED("http://www.virtualbox.org/", "IFramebufferOverlay_move").pyclass

IFramebufferOverlay_moveResultMsg = GED("http://www.virtualbox.org/", "IFramebufferOverlay_moveResponse").pyclass

IDisplay_getScreenResolutionRequestMsg = GED("http://www.virtualbox.org/", "IDisplay_getScreenResolution").pyclass

IDisplay_getScreenResolutionResultMsg = GED("http://www.virtualbox.org/", "IDisplay_getScreenResolutionResponse").pyclass

IDisplay_attachFramebufferRequestMsg = GED("http://www.virtualbox.org/", "IDisplay_attachFramebuffer").pyclass

IDisplay_attachFramebufferResultMsg = GED("http://www.virtualbox.org/", "IDisplay_attachFramebufferResponse").pyclass

IDisplay_detachFramebufferRequestMsg = GED("http://www.virtualbox.org/", "IDisplay_detachFramebuffer").pyclass

IDisplay_detachFramebufferResultMsg = GED("http://www.virtualbox.org/", "IDisplay_detachFramebufferResponse").pyclass

IDisplay_queryFramebufferRequestMsg = GED("http://www.virtualbox.org/", "IDisplay_queryFramebuffer").pyclass

IDisplay_queryFramebufferResultMsg = GED("http://www.virtualbox.org/", "IDisplay_queryFramebufferResponse").pyclass

IDisplay_setVideoModeHintRequestMsg = GED("http://www.virtualbox.org/", "IDisplay_setVideoModeHint").pyclass

IDisplay_setVideoModeHintResultMsg = GED("http://www.virtualbox.org/", "IDisplay_setVideoModeHintResponse").pyclass

IDisplay_setSeamlessModeRequestMsg = GED("http://www.virtualbox.org/", "IDisplay_setSeamlessMode").pyclass

IDisplay_setSeamlessModeResultMsg = GED("http://www.virtualbox.org/", "IDisplay_setSeamlessModeResponse").pyclass

IDisplay_takeScreenShotToArrayRequestMsg = GED("http://www.virtualbox.org/", "IDisplay_takeScreenShotToArray").pyclass

IDisplay_takeScreenShotToArrayResultMsg = GED("http://www.virtualbox.org/", "IDisplay_takeScreenShotToArrayResponse").pyclass

IDisplay_invalidateAndUpdateRequestMsg = GED("http://www.virtualbox.org/", "IDisplay_invalidateAndUpdate").pyclass

IDisplay_invalidateAndUpdateResultMsg = GED("http://www.virtualbox.org/", "IDisplay_invalidateAndUpdateResponse").pyclass

IDisplay_invalidateAndUpdateScreenRequestMsg = GED("http://www.virtualbox.org/", "IDisplay_invalidateAndUpdateScreen").pyclass

IDisplay_invalidateAndUpdateScreenResultMsg = GED("http://www.virtualbox.org/", "IDisplay_invalidateAndUpdateScreenResponse").pyclass

IDisplay_viewportChangedRequestMsg = GED("http://www.virtualbox.org/", "IDisplay_viewportChanged").pyclass

IDisplay_viewportChangedResultMsg = GED("http://www.virtualbox.org/", "IDisplay_viewportChangedResponse").pyclass

IDisplay_notifyScaleFactorChangeRequestMsg = GED("http://www.virtualbox.org/", "IDisplay_notifyScaleFactorChange").pyclass

IDisplay_notifyScaleFactorChangeResultMsg = GED("http://www.virtualbox.org/", "IDisplay_notifyScaleFactorChangeResponse").pyclass

IDisplay_notifyHiDPIOutputPolicyChangeRequestMsg = GED("http://www.virtualbox.org/", "IDisplay_notifyHiDPIOutputPolicyChange").pyclass

IDisplay_notifyHiDPIOutputPolicyChangeResultMsg = GED("http://www.virtualbox.org/", "IDisplay_notifyHiDPIOutputPolicyChangeResponse").pyclass

INetworkAdapter_getAdapterTypeRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getAdapterType").pyclass

INetworkAdapter_getAdapterTypeResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getAdapterTypeResponse").pyclass

INetworkAdapter_setAdapterTypeRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setAdapterType").pyclass

INetworkAdapter_setAdapterTypeResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setAdapterTypeResponse").pyclass

INetworkAdapter_getSlotRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getSlot").pyclass

INetworkAdapter_getSlotResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getSlotResponse").pyclass

INetworkAdapter_getEnabledRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getEnabled").pyclass

INetworkAdapter_getEnabledResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getEnabledResponse").pyclass

INetworkAdapter_setEnabledRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setEnabled").pyclass

INetworkAdapter_setEnabledResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setEnabledResponse").pyclass

INetworkAdapter_getMACAddressRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getMACAddress").pyclass

INetworkAdapter_getMACAddressResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getMACAddressResponse").pyclass

INetworkAdapter_setMACAddressRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setMACAddress").pyclass

INetworkAdapter_setMACAddressResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setMACAddressResponse").pyclass

INetworkAdapter_getAttachmentTypeRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getAttachmentType").pyclass

INetworkAdapter_getAttachmentTypeResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getAttachmentTypeResponse").pyclass

INetworkAdapter_setAttachmentTypeRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setAttachmentType").pyclass

INetworkAdapter_setAttachmentTypeResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setAttachmentTypeResponse").pyclass

INetworkAdapter_getBridgedInterfaceRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getBridgedInterface").pyclass

INetworkAdapter_getBridgedInterfaceResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getBridgedInterfaceResponse").pyclass

INetworkAdapter_setBridgedInterfaceRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setBridgedInterface").pyclass

INetworkAdapter_setBridgedInterfaceResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setBridgedInterfaceResponse").pyclass

INetworkAdapter_getHostOnlyInterfaceRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getHostOnlyInterface").pyclass

INetworkAdapter_getHostOnlyInterfaceResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getHostOnlyInterfaceResponse").pyclass

INetworkAdapter_setHostOnlyInterfaceRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setHostOnlyInterface").pyclass

INetworkAdapter_setHostOnlyInterfaceResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setHostOnlyInterfaceResponse").pyclass

INetworkAdapter_getInternalNetworkRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getInternalNetwork").pyclass

INetworkAdapter_getInternalNetworkResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getInternalNetworkResponse").pyclass

INetworkAdapter_setInternalNetworkRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setInternalNetwork").pyclass

INetworkAdapter_setInternalNetworkResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setInternalNetworkResponse").pyclass

INetworkAdapter_getNATNetworkRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getNATNetwork").pyclass

INetworkAdapter_getNATNetworkResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getNATNetworkResponse").pyclass

INetworkAdapter_setNATNetworkRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setNATNetwork").pyclass

INetworkAdapter_setNATNetworkResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setNATNetworkResponse").pyclass

INetworkAdapter_getGenericDriverRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getGenericDriver").pyclass

INetworkAdapter_getGenericDriverResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getGenericDriverResponse").pyclass

INetworkAdapter_setGenericDriverRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setGenericDriver").pyclass

INetworkAdapter_setGenericDriverResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setGenericDriverResponse").pyclass

INetworkAdapter_getCableConnectedRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getCableConnected").pyclass

INetworkAdapter_getCableConnectedResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getCableConnectedResponse").pyclass

INetworkAdapter_setCableConnectedRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setCableConnected").pyclass

INetworkAdapter_setCableConnectedResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setCableConnectedResponse").pyclass

INetworkAdapter_getLineSpeedRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getLineSpeed").pyclass

INetworkAdapter_getLineSpeedResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getLineSpeedResponse").pyclass

INetworkAdapter_setLineSpeedRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setLineSpeed").pyclass

INetworkAdapter_setLineSpeedResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setLineSpeedResponse").pyclass

INetworkAdapter_getPromiscModePolicyRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getPromiscModePolicy").pyclass

INetworkAdapter_getPromiscModePolicyResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getPromiscModePolicyResponse").pyclass

INetworkAdapter_setPromiscModePolicyRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setPromiscModePolicy").pyclass

INetworkAdapter_setPromiscModePolicyResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setPromiscModePolicyResponse").pyclass

INetworkAdapter_getTraceEnabledRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getTraceEnabled").pyclass

INetworkAdapter_getTraceEnabledResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getTraceEnabledResponse").pyclass

INetworkAdapter_setTraceEnabledRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setTraceEnabled").pyclass

INetworkAdapter_setTraceEnabledResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setTraceEnabledResponse").pyclass

INetworkAdapter_getTraceFileRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getTraceFile").pyclass

INetworkAdapter_getTraceFileResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getTraceFileResponse").pyclass

INetworkAdapter_setTraceFileRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setTraceFile").pyclass

INetworkAdapter_setTraceFileResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setTraceFileResponse").pyclass

INetworkAdapter_getNATEngineRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getNATEngine").pyclass

INetworkAdapter_getNATEngineResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getNATEngineResponse").pyclass

INetworkAdapter_getBootPriorityRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getBootPriority").pyclass

INetworkAdapter_getBootPriorityResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getBootPriorityResponse").pyclass

INetworkAdapter_setBootPriorityRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setBootPriority").pyclass

INetworkAdapter_setBootPriorityResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setBootPriorityResponse").pyclass

INetworkAdapter_getBandwidthGroupRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getBandwidthGroup").pyclass

INetworkAdapter_getBandwidthGroupResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getBandwidthGroupResponse").pyclass

INetworkAdapter_setBandwidthGroupRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setBandwidthGroup").pyclass

INetworkAdapter_setBandwidthGroupResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setBandwidthGroupResponse").pyclass

INetworkAdapter_getPropertyRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getProperty").pyclass

INetworkAdapter_getPropertyResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getPropertyResponse").pyclass

INetworkAdapter_setPropertyRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setProperty").pyclass

INetworkAdapter_setPropertyResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_setPropertyResponse").pyclass

INetworkAdapter_getPropertiesRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getProperties").pyclass

INetworkAdapter_getPropertiesResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapter_getPropertiesResponse").pyclass

ISerialPort_getSlotRequestMsg = GED("http://www.virtualbox.org/", "ISerialPort_getSlot").pyclass

ISerialPort_getSlotResultMsg = GED("http://www.virtualbox.org/", "ISerialPort_getSlotResponse").pyclass

ISerialPort_getEnabledRequestMsg = GED("http://www.virtualbox.org/", "ISerialPort_getEnabled").pyclass

ISerialPort_getEnabledResultMsg = GED("http://www.virtualbox.org/", "ISerialPort_getEnabledResponse").pyclass

ISerialPort_setEnabledRequestMsg = GED("http://www.virtualbox.org/", "ISerialPort_setEnabled").pyclass

ISerialPort_setEnabledResultMsg = GED("http://www.virtualbox.org/", "ISerialPort_setEnabledResponse").pyclass

ISerialPort_getIOBaseRequestMsg = GED("http://www.virtualbox.org/", "ISerialPort_getIOBase").pyclass

ISerialPort_getIOBaseResultMsg = GED("http://www.virtualbox.org/", "ISerialPort_getIOBaseResponse").pyclass

ISerialPort_setIOBaseRequestMsg = GED("http://www.virtualbox.org/", "ISerialPort_setIOBase").pyclass

ISerialPort_setIOBaseResultMsg = GED("http://www.virtualbox.org/", "ISerialPort_setIOBaseResponse").pyclass

ISerialPort_getIRQRequestMsg = GED("http://www.virtualbox.org/", "ISerialPort_getIRQ").pyclass

ISerialPort_getIRQResultMsg = GED("http://www.virtualbox.org/", "ISerialPort_getIRQResponse").pyclass

ISerialPort_setIRQRequestMsg = GED("http://www.virtualbox.org/", "ISerialPort_setIRQ").pyclass

ISerialPort_setIRQResultMsg = GED("http://www.virtualbox.org/", "ISerialPort_setIRQResponse").pyclass

ISerialPort_getHostModeRequestMsg = GED("http://www.virtualbox.org/", "ISerialPort_getHostMode").pyclass

ISerialPort_getHostModeResultMsg = GED("http://www.virtualbox.org/", "ISerialPort_getHostModeResponse").pyclass

ISerialPort_setHostModeRequestMsg = GED("http://www.virtualbox.org/", "ISerialPort_setHostMode").pyclass

ISerialPort_setHostModeResultMsg = GED("http://www.virtualbox.org/", "ISerialPort_setHostModeResponse").pyclass

ISerialPort_getServerRequestMsg = GED("http://www.virtualbox.org/", "ISerialPort_getServer").pyclass

ISerialPort_getServerResultMsg = GED("http://www.virtualbox.org/", "ISerialPort_getServerResponse").pyclass

ISerialPort_setServerRequestMsg = GED("http://www.virtualbox.org/", "ISerialPort_setServer").pyclass

ISerialPort_setServerResultMsg = GED("http://www.virtualbox.org/", "ISerialPort_setServerResponse").pyclass

ISerialPort_getPathRequestMsg = GED("http://www.virtualbox.org/", "ISerialPort_getPath").pyclass

ISerialPort_getPathResultMsg = GED("http://www.virtualbox.org/", "ISerialPort_getPathResponse").pyclass

ISerialPort_setPathRequestMsg = GED("http://www.virtualbox.org/", "ISerialPort_setPath").pyclass

ISerialPort_setPathResultMsg = GED("http://www.virtualbox.org/", "ISerialPort_setPathResponse").pyclass

IParallelPort_getSlotRequestMsg = GED("http://www.virtualbox.org/", "IParallelPort_getSlot").pyclass

IParallelPort_getSlotResultMsg = GED("http://www.virtualbox.org/", "IParallelPort_getSlotResponse").pyclass

IParallelPort_getEnabledRequestMsg = GED("http://www.virtualbox.org/", "IParallelPort_getEnabled").pyclass

IParallelPort_getEnabledResultMsg = GED("http://www.virtualbox.org/", "IParallelPort_getEnabledResponse").pyclass

IParallelPort_setEnabledRequestMsg = GED("http://www.virtualbox.org/", "IParallelPort_setEnabled").pyclass

IParallelPort_setEnabledResultMsg = GED("http://www.virtualbox.org/", "IParallelPort_setEnabledResponse").pyclass

IParallelPort_getIOBaseRequestMsg = GED("http://www.virtualbox.org/", "IParallelPort_getIOBase").pyclass

IParallelPort_getIOBaseResultMsg = GED("http://www.virtualbox.org/", "IParallelPort_getIOBaseResponse").pyclass

IParallelPort_setIOBaseRequestMsg = GED("http://www.virtualbox.org/", "IParallelPort_setIOBase").pyclass

IParallelPort_setIOBaseResultMsg = GED("http://www.virtualbox.org/", "IParallelPort_setIOBaseResponse").pyclass

IParallelPort_getIRQRequestMsg = GED("http://www.virtualbox.org/", "IParallelPort_getIRQ").pyclass

IParallelPort_getIRQResultMsg = GED("http://www.virtualbox.org/", "IParallelPort_getIRQResponse").pyclass

IParallelPort_setIRQRequestMsg = GED("http://www.virtualbox.org/", "IParallelPort_setIRQ").pyclass

IParallelPort_setIRQResultMsg = GED("http://www.virtualbox.org/", "IParallelPort_setIRQResponse").pyclass

IParallelPort_getPathRequestMsg = GED("http://www.virtualbox.org/", "IParallelPort_getPath").pyclass

IParallelPort_getPathResultMsg = GED("http://www.virtualbox.org/", "IParallelPort_getPathResponse").pyclass

IParallelPort_setPathRequestMsg = GED("http://www.virtualbox.org/", "IParallelPort_setPath").pyclass

IParallelPort_setPathResultMsg = GED("http://www.virtualbox.org/", "IParallelPort_setPathResponse").pyclass

IMachineDebugger_getSingleStepRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getSingleStep").pyclass

IMachineDebugger_getSingleStepResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getSingleStepResponse").pyclass

IMachineDebugger_setSingleStepRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setSingleStep").pyclass

IMachineDebugger_setSingleStepResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setSingleStepResponse").pyclass

IMachineDebugger_getRecompileUserRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getRecompileUser").pyclass

IMachineDebugger_getRecompileUserResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getRecompileUserResponse").pyclass

IMachineDebugger_setRecompileUserRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setRecompileUser").pyclass

IMachineDebugger_setRecompileUserResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setRecompileUserResponse").pyclass

IMachineDebugger_getRecompileSupervisorRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getRecompileSupervisor").pyclass

IMachineDebugger_getRecompileSupervisorResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getRecompileSupervisorResponse").pyclass

IMachineDebugger_setRecompileSupervisorRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setRecompileSupervisor").pyclass

IMachineDebugger_setRecompileSupervisorResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setRecompileSupervisorResponse").pyclass

IMachineDebugger_getExecuteAllInIEMRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getExecuteAllInIEM").pyclass

IMachineDebugger_getExecuteAllInIEMResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getExecuteAllInIEMResponse").pyclass

IMachineDebugger_setExecuteAllInIEMRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setExecuteAllInIEM").pyclass

IMachineDebugger_setExecuteAllInIEMResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setExecuteAllInIEMResponse").pyclass

IMachineDebugger_getPATMEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getPATMEnabled").pyclass

IMachineDebugger_getPATMEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getPATMEnabledResponse").pyclass

IMachineDebugger_setPATMEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setPATMEnabled").pyclass

IMachineDebugger_setPATMEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setPATMEnabledResponse").pyclass

IMachineDebugger_getCSAMEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getCSAMEnabled").pyclass

IMachineDebugger_getCSAMEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getCSAMEnabledResponse").pyclass

IMachineDebugger_setCSAMEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setCSAMEnabled").pyclass

IMachineDebugger_setCSAMEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setCSAMEnabledResponse").pyclass

IMachineDebugger_getLogEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getLogEnabled").pyclass

IMachineDebugger_getLogEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getLogEnabledResponse").pyclass

IMachineDebugger_setLogEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setLogEnabled").pyclass

IMachineDebugger_setLogEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setLogEnabledResponse").pyclass

IMachineDebugger_getLogDbgFlagsRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getLogDbgFlags").pyclass

IMachineDebugger_getLogDbgFlagsResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getLogDbgFlagsResponse").pyclass

IMachineDebugger_getLogDbgGroupsRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getLogDbgGroups").pyclass

IMachineDebugger_getLogDbgGroupsResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getLogDbgGroupsResponse").pyclass

IMachineDebugger_getLogDbgDestinationsRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getLogDbgDestinations").pyclass

IMachineDebugger_getLogDbgDestinationsResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getLogDbgDestinationsResponse").pyclass

IMachineDebugger_getLogRelFlagsRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getLogRelFlags").pyclass

IMachineDebugger_getLogRelFlagsResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getLogRelFlagsResponse").pyclass

IMachineDebugger_getLogRelGroupsRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getLogRelGroups").pyclass

IMachineDebugger_getLogRelGroupsResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getLogRelGroupsResponse").pyclass

IMachineDebugger_getLogRelDestinationsRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getLogRelDestinations").pyclass

IMachineDebugger_getLogRelDestinationsResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getLogRelDestinationsResponse").pyclass

IMachineDebugger_getHWVirtExEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getHWVirtExEnabled").pyclass

IMachineDebugger_getHWVirtExEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getHWVirtExEnabledResponse").pyclass

IMachineDebugger_getHWVirtExNestedPagingEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getHWVirtExNestedPagingEnabled").pyclass

IMachineDebugger_getHWVirtExNestedPagingEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getHWVirtExNestedPagingEnabledResponse").pyclass

IMachineDebugger_getHWVirtExVPIDEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getHWVirtExVPIDEnabled").pyclass

IMachineDebugger_getHWVirtExVPIDEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getHWVirtExVPIDEnabledResponse").pyclass

IMachineDebugger_getHWVirtExUXEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getHWVirtExUXEnabled").pyclass

IMachineDebugger_getHWVirtExUXEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getHWVirtExUXEnabledResponse").pyclass

IMachineDebugger_getOSNameRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getOSName").pyclass

IMachineDebugger_getOSNameResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getOSNameResponse").pyclass

IMachineDebugger_getOSVersionRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getOSVersion").pyclass

IMachineDebugger_getOSVersionResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getOSVersionResponse").pyclass

IMachineDebugger_getPAEEnabledRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getPAEEnabled").pyclass

IMachineDebugger_getPAEEnabledResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getPAEEnabledResponse").pyclass

IMachineDebugger_getVirtualTimeRateRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getVirtualTimeRate").pyclass

IMachineDebugger_getVirtualTimeRateResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getVirtualTimeRateResponse").pyclass

IMachineDebugger_setVirtualTimeRateRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setVirtualTimeRate").pyclass

IMachineDebugger_setVirtualTimeRateResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setVirtualTimeRateResponse").pyclass

IMachineDebugger_dumpGuestCoreRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_dumpGuestCore").pyclass

IMachineDebugger_dumpGuestCoreResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_dumpGuestCoreResponse").pyclass

IMachineDebugger_dumpHostProcessCoreRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_dumpHostProcessCore").pyclass

IMachineDebugger_dumpHostProcessCoreResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_dumpHostProcessCoreResponse").pyclass

IMachineDebugger_infoRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_info").pyclass

IMachineDebugger_infoResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_infoResponse").pyclass

IMachineDebugger_injectNMIRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_injectNMI").pyclass

IMachineDebugger_injectNMIResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_injectNMIResponse").pyclass

IMachineDebugger_modifyLogGroupsRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_modifyLogGroups").pyclass

IMachineDebugger_modifyLogGroupsResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_modifyLogGroupsResponse").pyclass

IMachineDebugger_modifyLogFlagsRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_modifyLogFlags").pyclass

IMachineDebugger_modifyLogFlagsResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_modifyLogFlagsResponse").pyclass

IMachineDebugger_modifyLogDestinationsRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_modifyLogDestinations").pyclass

IMachineDebugger_modifyLogDestinationsResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_modifyLogDestinationsResponse").pyclass

IMachineDebugger_readPhysicalMemoryRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_readPhysicalMemory").pyclass

IMachineDebugger_readPhysicalMemoryResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_readPhysicalMemoryResponse").pyclass

IMachineDebugger_writePhysicalMemoryRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_writePhysicalMemory").pyclass

IMachineDebugger_writePhysicalMemoryResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_writePhysicalMemoryResponse").pyclass

IMachineDebugger_readVirtualMemoryRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_readVirtualMemory").pyclass

IMachineDebugger_readVirtualMemoryResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_readVirtualMemoryResponse").pyclass

IMachineDebugger_writeVirtualMemoryRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_writeVirtualMemory").pyclass

IMachineDebugger_writeVirtualMemoryResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_writeVirtualMemoryResponse").pyclass

IMachineDebugger_loadPlugInRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_loadPlugIn").pyclass

IMachineDebugger_loadPlugInResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_loadPlugInResponse").pyclass

IMachineDebugger_unloadPlugInRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_unloadPlugIn").pyclass

IMachineDebugger_unloadPlugInResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_unloadPlugInResponse").pyclass

IMachineDebugger_detectOSRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_detectOS").pyclass

IMachineDebugger_detectOSResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_detectOSResponse").pyclass

IMachineDebugger_queryOSKernelLogRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_queryOSKernelLog").pyclass

IMachineDebugger_queryOSKernelLogResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_queryOSKernelLogResponse").pyclass

IMachineDebugger_getRegisterRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getRegister").pyclass

IMachineDebugger_getRegisterResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getRegisterResponse").pyclass

IMachineDebugger_getRegistersRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getRegisters").pyclass

IMachineDebugger_getRegistersResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getRegistersResponse").pyclass

IMachineDebugger_setRegisterRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setRegister").pyclass

IMachineDebugger_setRegisterResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setRegisterResponse").pyclass

IMachineDebugger_setRegistersRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setRegisters").pyclass

IMachineDebugger_setRegistersResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_setRegistersResponse").pyclass

IMachineDebugger_dumpGuestStackRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_dumpGuestStack").pyclass

IMachineDebugger_dumpGuestStackResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_dumpGuestStackResponse").pyclass

IMachineDebugger_resetStatsRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_resetStats").pyclass

IMachineDebugger_resetStatsResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_resetStatsResponse").pyclass

IMachineDebugger_dumpStatsRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_dumpStats").pyclass

IMachineDebugger_dumpStatsResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_dumpStatsResponse").pyclass

IMachineDebugger_getStatsRequestMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getStats").pyclass

IMachineDebugger_getStatsResultMsg = GED("http://www.virtualbox.org/", "IMachineDebugger_getStatsResponse").pyclass

IUSBDeviceFilters_getDeviceFiltersRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilters_getDeviceFilters").pyclass

IUSBDeviceFilters_getDeviceFiltersResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilters_getDeviceFiltersResponse").pyclass

IUSBDeviceFilters_createDeviceFilterRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilters_createDeviceFilter").pyclass

IUSBDeviceFilters_createDeviceFilterResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilters_createDeviceFilterResponse").pyclass

IUSBDeviceFilters_insertDeviceFilterRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilters_insertDeviceFilter").pyclass

IUSBDeviceFilters_insertDeviceFilterResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilters_insertDeviceFilterResponse").pyclass

IUSBDeviceFilters_removeDeviceFilterRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilters_removeDeviceFilter").pyclass

IUSBDeviceFilters_removeDeviceFilterResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilters_removeDeviceFilterResponse").pyclass

IUSBController_getNameRequestMsg = GED("http://www.virtualbox.org/", "IUSBController_getName").pyclass

IUSBController_getNameResultMsg = GED("http://www.virtualbox.org/", "IUSBController_getNameResponse").pyclass

IUSBController_setNameRequestMsg = GED("http://www.virtualbox.org/", "IUSBController_setName").pyclass

IUSBController_setNameResultMsg = GED("http://www.virtualbox.org/", "IUSBController_setNameResponse").pyclass

IUSBController_getTypeRequestMsg = GED("http://www.virtualbox.org/", "IUSBController_getType").pyclass

IUSBController_getTypeResultMsg = GED("http://www.virtualbox.org/", "IUSBController_getTypeResponse").pyclass

IUSBController_setTypeRequestMsg = GED("http://www.virtualbox.org/", "IUSBController_setType").pyclass

IUSBController_setTypeResultMsg = GED("http://www.virtualbox.org/", "IUSBController_setTypeResponse").pyclass

IUSBController_getUSBStandardRequestMsg = GED("http://www.virtualbox.org/", "IUSBController_getUSBStandard").pyclass

IUSBController_getUSBStandardResultMsg = GED("http://www.virtualbox.org/", "IUSBController_getUSBStandardResponse").pyclass

IUSBDevice_getIdRequestMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getId").pyclass

IUSBDevice_getIdResultMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getIdResponse").pyclass

IUSBDevice_getVendorIdRequestMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getVendorId").pyclass

IUSBDevice_getVendorIdResultMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getVendorIdResponse").pyclass

IUSBDevice_getProductIdRequestMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getProductId").pyclass

IUSBDevice_getProductIdResultMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getProductIdResponse").pyclass

IUSBDevice_getRevisionRequestMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getRevision").pyclass

IUSBDevice_getRevisionResultMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getRevisionResponse").pyclass

IUSBDevice_getManufacturerRequestMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getManufacturer").pyclass

IUSBDevice_getManufacturerResultMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getManufacturerResponse").pyclass

IUSBDevice_getProductRequestMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getProduct").pyclass

IUSBDevice_getProductResultMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getProductResponse").pyclass

IUSBDevice_getSerialNumberRequestMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getSerialNumber").pyclass

IUSBDevice_getSerialNumberResultMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getSerialNumberResponse").pyclass

IUSBDevice_getAddressRequestMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getAddress").pyclass

IUSBDevice_getAddressResultMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getAddressResponse").pyclass

IUSBDevice_getPortRequestMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getPort").pyclass

IUSBDevice_getPortResultMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getPortResponse").pyclass

IUSBDevice_getVersionRequestMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getVersion").pyclass

IUSBDevice_getVersionResultMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getVersionResponse").pyclass

IUSBDevice_getPortVersionRequestMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getPortVersion").pyclass

IUSBDevice_getPortVersionResultMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getPortVersionResponse").pyclass

IUSBDevice_getSpeedRequestMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getSpeed").pyclass

IUSBDevice_getSpeedResultMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getSpeedResponse").pyclass

IUSBDevice_getRemoteRequestMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getRemote").pyclass

IUSBDevice_getRemoteResultMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getRemoteResponse").pyclass

IUSBDevice_getDeviceInfoRequestMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getDeviceInfo").pyclass

IUSBDevice_getDeviceInfoResultMsg = GED("http://www.virtualbox.org/", "IUSBDevice_getDeviceInfoResponse").pyclass

IUSBDeviceFilter_getNameRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getName").pyclass

IUSBDeviceFilter_getNameResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getNameResponse").pyclass

IUSBDeviceFilter_setNameRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setName").pyclass

IUSBDeviceFilter_setNameResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setNameResponse").pyclass

IUSBDeviceFilter_getActiveRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getActive").pyclass

IUSBDeviceFilter_getActiveResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getActiveResponse").pyclass

IUSBDeviceFilter_setActiveRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setActive").pyclass

IUSBDeviceFilter_setActiveResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setActiveResponse").pyclass

IUSBDeviceFilter_getVendorIdRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getVendorId").pyclass

IUSBDeviceFilter_getVendorIdResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getVendorIdResponse").pyclass

IUSBDeviceFilter_setVendorIdRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setVendorId").pyclass

IUSBDeviceFilter_setVendorIdResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setVendorIdResponse").pyclass

IUSBDeviceFilter_getProductIdRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getProductId").pyclass

IUSBDeviceFilter_getProductIdResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getProductIdResponse").pyclass

IUSBDeviceFilter_setProductIdRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setProductId").pyclass

IUSBDeviceFilter_setProductIdResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setProductIdResponse").pyclass

IUSBDeviceFilter_getRevisionRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getRevision").pyclass

IUSBDeviceFilter_getRevisionResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getRevisionResponse").pyclass

IUSBDeviceFilter_setRevisionRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setRevision").pyclass

IUSBDeviceFilter_setRevisionResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setRevisionResponse").pyclass

IUSBDeviceFilter_getManufacturerRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getManufacturer").pyclass

IUSBDeviceFilter_getManufacturerResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getManufacturerResponse").pyclass

IUSBDeviceFilter_setManufacturerRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setManufacturer").pyclass

IUSBDeviceFilter_setManufacturerResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setManufacturerResponse").pyclass

IUSBDeviceFilter_getProductRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getProduct").pyclass

IUSBDeviceFilter_getProductResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getProductResponse").pyclass

IUSBDeviceFilter_setProductRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setProduct").pyclass

IUSBDeviceFilter_setProductResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setProductResponse").pyclass

IUSBDeviceFilter_getSerialNumberRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getSerialNumber").pyclass

IUSBDeviceFilter_getSerialNumberResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getSerialNumberResponse").pyclass

IUSBDeviceFilter_setSerialNumberRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setSerialNumber").pyclass

IUSBDeviceFilter_setSerialNumberResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setSerialNumberResponse").pyclass

IUSBDeviceFilter_getPortRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getPort").pyclass

IUSBDeviceFilter_getPortResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getPortResponse").pyclass

IUSBDeviceFilter_setPortRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setPort").pyclass

IUSBDeviceFilter_setPortResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setPortResponse").pyclass

IUSBDeviceFilter_getRemoteRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getRemote").pyclass

IUSBDeviceFilter_getRemoteResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getRemoteResponse").pyclass

IUSBDeviceFilter_setRemoteRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setRemote").pyclass

IUSBDeviceFilter_setRemoteResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setRemoteResponse").pyclass

IUSBDeviceFilter_getMaskedInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getMaskedInterfaces").pyclass

IUSBDeviceFilter_getMaskedInterfacesResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_getMaskedInterfacesResponse").pyclass

IUSBDeviceFilter_setMaskedInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setMaskedInterfaces").pyclass

IUSBDeviceFilter_setMaskedInterfacesResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceFilter_setMaskedInterfacesResponse").pyclass

IHostUSBDevice_getStateRequestMsg = GED("http://www.virtualbox.org/", "IHostUSBDevice_getState").pyclass

IHostUSBDevice_getStateResultMsg = GED("http://www.virtualbox.org/", "IHostUSBDevice_getStateResponse").pyclass

IHostUSBDeviceFilter_getActionRequestMsg = GED("http://www.virtualbox.org/", "IHostUSBDeviceFilter_getAction").pyclass

IHostUSBDeviceFilter_getActionResultMsg = GED("http://www.virtualbox.org/", "IHostUSBDeviceFilter_getActionResponse").pyclass

IHostUSBDeviceFilter_setActionRequestMsg = GED("http://www.virtualbox.org/", "IHostUSBDeviceFilter_setAction").pyclass

IHostUSBDeviceFilter_setActionResultMsg = GED("http://www.virtualbox.org/", "IHostUSBDeviceFilter_setActionResponse").pyclass

IAudioAdapter_getEnabledRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getEnabled").pyclass

IAudioAdapter_getEnabledResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getEnabledResponse").pyclass

IAudioAdapter_setEnabledRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_setEnabled").pyclass

IAudioAdapter_setEnabledResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_setEnabledResponse").pyclass

IAudioAdapter_getEnabledInRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getEnabledIn").pyclass

IAudioAdapter_getEnabledInResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getEnabledInResponse").pyclass

IAudioAdapter_setEnabledInRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_setEnabledIn").pyclass

IAudioAdapter_setEnabledInResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_setEnabledInResponse").pyclass

IAudioAdapter_getEnabledOutRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getEnabledOut").pyclass

IAudioAdapter_getEnabledOutResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getEnabledOutResponse").pyclass

IAudioAdapter_setEnabledOutRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_setEnabledOut").pyclass

IAudioAdapter_setEnabledOutResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_setEnabledOutResponse").pyclass

IAudioAdapter_getAudioControllerRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getAudioController").pyclass

IAudioAdapter_getAudioControllerResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getAudioControllerResponse").pyclass

IAudioAdapter_setAudioControllerRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_setAudioController").pyclass

IAudioAdapter_setAudioControllerResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_setAudioControllerResponse").pyclass

IAudioAdapter_getAudioCodecRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getAudioCodec").pyclass

IAudioAdapter_getAudioCodecResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getAudioCodecResponse").pyclass

IAudioAdapter_setAudioCodecRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_setAudioCodec").pyclass

IAudioAdapter_setAudioCodecResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_setAudioCodecResponse").pyclass

IAudioAdapter_getAudioDriverRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getAudioDriver").pyclass

IAudioAdapter_getAudioDriverResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getAudioDriverResponse").pyclass

IAudioAdapter_setAudioDriverRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_setAudioDriver").pyclass

IAudioAdapter_setAudioDriverResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_setAudioDriverResponse").pyclass

IAudioAdapter_getPropertiesListRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getPropertiesList").pyclass

IAudioAdapter_getPropertiesListResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getPropertiesListResponse").pyclass

IAudioAdapter_setPropertyRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_setProperty").pyclass

IAudioAdapter_setPropertyResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_setPropertyResponse").pyclass

IAudioAdapter_getPropertyRequestMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getProperty").pyclass

IAudioAdapter_getPropertyResultMsg = GED("http://www.virtualbox.org/", "IAudioAdapter_getPropertyResponse").pyclass

IVRDEServer_getEnabledRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getEnabled").pyclass

IVRDEServer_getEnabledResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getEnabledResponse").pyclass

IVRDEServer_setEnabledRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setEnabled").pyclass

IVRDEServer_setEnabledResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setEnabledResponse").pyclass

IVRDEServer_getAuthTypeRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getAuthType").pyclass

IVRDEServer_getAuthTypeResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getAuthTypeResponse").pyclass

IVRDEServer_setAuthTypeRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setAuthType").pyclass

IVRDEServer_setAuthTypeResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setAuthTypeResponse").pyclass

IVRDEServer_getAuthTimeoutRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getAuthTimeout").pyclass

IVRDEServer_getAuthTimeoutResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getAuthTimeoutResponse").pyclass

IVRDEServer_setAuthTimeoutRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setAuthTimeout").pyclass

IVRDEServer_setAuthTimeoutResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setAuthTimeoutResponse").pyclass

IVRDEServer_getAllowMultiConnectionRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getAllowMultiConnection").pyclass

IVRDEServer_getAllowMultiConnectionResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getAllowMultiConnectionResponse").pyclass

IVRDEServer_setAllowMultiConnectionRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setAllowMultiConnection").pyclass

IVRDEServer_setAllowMultiConnectionResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setAllowMultiConnectionResponse").pyclass

IVRDEServer_getReuseSingleConnectionRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getReuseSingleConnection").pyclass

IVRDEServer_getReuseSingleConnectionResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getReuseSingleConnectionResponse").pyclass

IVRDEServer_setReuseSingleConnectionRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setReuseSingleConnection").pyclass

IVRDEServer_setReuseSingleConnectionResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setReuseSingleConnectionResponse").pyclass

IVRDEServer_getVRDEExtPackRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getVRDEExtPack").pyclass

IVRDEServer_getVRDEExtPackResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getVRDEExtPackResponse").pyclass

IVRDEServer_setVRDEExtPackRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setVRDEExtPack").pyclass

IVRDEServer_setVRDEExtPackResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setVRDEExtPackResponse").pyclass

IVRDEServer_getAuthLibraryRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getAuthLibrary").pyclass

IVRDEServer_getAuthLibraryResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getAuthLibraryResponse").pyclass

IVRDEServer_setAuthLibraryRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setAuthLibrary").pyclass

IVRDEServer_setAuthLibraryResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setAuthLibraryResponse").pyclass

IVRDEServer_getVRDEPropertiesRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getVRDEProperties").pyclass

IVRDEServer_getVRDEPropertiesResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getVRDEPropertiesResponse").pyclass

IVRDEServer_setVRDEPropertyRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setVRDEProperty").pyclass

IVRDEServer_setVRDEPropertyResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_setVRDEPropertyResponse").pyclass

IVRDEServer_getVRDEPropertyRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getVRDEProperty").pyclass

IVRDEServer_getVRDEPropertyResultMsg = GED("http://www.virtualbox.org/", "IVRDEServer_getVRDEPropertyResponse").pyclass

ISession_getStateRequestMsg = GED("http://www.virtualbox.org/", "ISession_getState").pyclass

ISession_getStateResultMsg = GED("http://www.virtualbox.org/", "ISession_getStateResponse").pyclass

ISession_getTypeRequestMsg = GED("http://www.virtualbox.org/", "ISession_getType").pyclass

ISession_getTypeResultMsg = GED("http://www.virtualbox.org/", "ISession_getTypeResponse").pyclass

ISession_getNameRequestMsg = GED("http://www.virtualbox.org/", "ISession_getName").pyclass

ISession_getNameResultMsg = GED("http://www.virtualbox.org/", "ISession_getNameResponse").pyclass

ISession_setNameRequestMsg = GED("http://www.virtualbox.org/", "ISession_setName").pyclass

ISession_setNameResultMsg = GED("http://www.virtualbox.org/", "ISession_setNameResponse").pyclass

ISession_getMachineRequestMsg = GED("http://www.virtualbox.org/", "ISession_getMachine").pyclass

ISession_getMachineResultMsg = GED("http://www.virtualbox.org/", "ISession_getMachineResponse").pyclass

ISession_getConsoleRequestMsg = GED("http://www.virtualbox.org/", "ISession_getConsole").pyclass

ISession_getConsoleResultMsg = GED("http://www.virtualbox.org/", "ISession_getConsoleResponse").pyclass

ISession_unlockMachineRequestMsg = GED("http://www.virtualbox.org/", "ISession_unlockMachine").pyclass

ISession_unlockMachineResultMsg = GED("http://www.virtualbox.org/", "ISession_unlockMachineResponse").pyclass

IStorageController_getNameRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_getName").pyclass

IStorageController_getNameResultMsg = GED("http://www.virtualbox.org/", "IStorageController_getNameResponse").pyclass

IStorageController_setNameRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_setName").pyclass

IStorageController_setNameResultMsg = GED("http://www.virtualbox.org/", "IStorageController_setNameResponse").pyclass

IStorageController_getMaxDevicesPerPortCountRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_getMaxDevicesPerPortCount").pyclass

IStorageController_getMaxDevicesPerPortCountResultMsg = GED("http://www.virtualbox.org/", "IStorageController_getMaxDevicesPerPortCountResponse").pyclass

IStorageController_getMinPortCountRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_getMinPortCount").pyclass

IStorageController_getMinPortCountResultMsg = GED("http://www.virtualbox.org/", "IStorageController_getMinPortCountResponse").pyclass

IStorageController_getMaxPortCountRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_getMaxPortCount").pyclass

IStorageController_getMaxPortCountResultMsg = GED("http://www.virtualbox.org/", "IStorageController_getMaxPortCountResponse").pyclass

IStorageController_getInstanceRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_getInstance").pyclass

IStorageController_getInstanceResultMsg = GED("http://www.virtualbox.org/", "IStorageController_getInstanceResponse").pyclass

IStorageController_setInstanceRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_setInstance").pyclass

IStorageController_setInstanceResultMsg = GED("http://www.virtualbox.org/", "IStorageController_setInstanceResponse").pyclass

IStorageController_getPortCountRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_getPortCount").pyclass

IStorageController_getPortCountResultMsg = GED("http://www.virtualbox.org/", "IStorageController_getPortCountResponse").pyclass

IStorageController_setPortCountRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_setPortCount").pyclass

IStorageController_setPortCountResultMsg = GED("http://www.virtualbox.org/", "IStorageController_setPortCountResponse").pyclass

IStorageController_getBusRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_getBus").pyclass

IStorageController_getBusResultMsg = GED("http://www.virtualbox.org/", "IStorageController_getBusResponse").pyclass

IStorageController_getControllerTypeRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_getControllerType").pyclass

IStorageController_getControllerTypeResultMsg = GED("http://www.virtualbox.org/", "IStorageController_getControllerTypeResponse").pyclass

IStorageController_setControllerTypeRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_setControllerType").pyclass

IStorageController_setControllerTypeResultMsg = GED("http://www.virtualbox.org/", "IStorageController_setControllerTypeResponse").pyclass

IStorageController_getUseHostIOCacheRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_getUseHostIOCache").pyclass

IStorageController_getUseHostIOCacheResultMsg = GED("http://www.virtualbox.org/", "IStorageController_getUseHostIOCacheResponse").pyclass

IStorageController_setUseHostIOCacheRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_setUseHostIOCache").pyclass

IStorageController_setUseHostIOCacheResultMsg = GED("http://www.virtualbox.org/", "IStorageController_setUseHostIOCacheResponse").pyclass

IStorageController_getBootableRequestMsg = GED("http://www.virtualbox.org/", "IStorageController_getBootable").pyclass

IStorageController_getBootableResultMsg = GED("http://www.virtualbox.org/", "IStorageController_getBootableResponse").pyclass

IManagedObjectRef_getInterfaceNameRequestMsg = GED("http://www.virtualbox.org/", "IManagedObjectRef_getInterfaceName").pyclass

IManagedObjectRef_getInterfaceNameResultMsg = GED("http://www.virtualbox.org/", "IManagedObjectRef_getInterfaceNameResponse").pyclass

IManagedObjectRef_releaseRequestMsg = GED("http://www.virtualbox.org/", "IManagedObjectRef_release").pyclass

IManagedObjectRef_releaseResultMsg = GED("http://www.virtualbox.org/", "IManagedObjectRef_releaseResponse").pyclass

IWebsessionManager_logonRequestMsg = GED("http://www.virtualbox.org/", "IWebsessionManager_logon").pyclass

IWebsessionManager_logonResultMsg = GED("http://www.virtualbox.org/", "IWebsessionManager_logonResponse").pyclass

IWebsessionManager_getSessionObjectRequestMsg = GED("http://www.virtualbox.org/", "IWebsessionManager_getSessionObject").pyclass

IWebsessionManager_getSessionObjectResultMsg = GED("http://www.virtualbox.org/", "IWebsessionManager_getSessionObjectResponse").pyclass

IWebsessionManager_logoffRequestMsg = GED("http://www.virtualbox.org/", "IWebsessionManager_logoff").pyclass

IWebsessionManager_logoffResultMsg = GED("http://www.virtualbox.org/", "IWebsessionManager_logoffResponse").pyclass

IPerformanceMetric_getMetricNameRequestMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getMetricName").pyclass

IPerformanceMetric_getMetricNameResultMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getMetricNameResponse").pyclass

IPerformanceMetric_getObjectRequestMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getObject").pyclass

IPerformanceMetric_getObjectResultMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getObjectResponse").pyclass

IPerformanceMetric_getDescriptionRequestMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getDescription").pyclass

IPerformanceMetric_getDescriptionResultMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getDescriptionResponse").pyclass

IPerformanceMetric_getPeriodRequestMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getPeriod").pyclass

IPerformanceMetric_getPeriodResultMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getPeriodResponse").pyclass

IPerformanceMetric_getCountRequestMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getCount").pyclass

IPerformanceMetric_getCountResultMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getCountResponse").pyclass

IPerformanceMetric_getUnitRequestMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getUnit").pyclass

IPerformanceMetric_getUnitResultMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getUnitResponse").pyclass

IPerformanceMetric_getMinimumValueRequestMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getMinimumValue").pyclass

IPerformanceMetric_getMinimumValueResultMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getMinimumValueResponse").pyclass

IPerformanceMetric_getMaximumValueRequestMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getMaximumValue").pyclass

IPerformanceMetric_getMaximumValueResultMsg = GED("http://www.virtualbox.org/", "IPerformanceMetric_getMaximumValueResponse").pyclass

IPerformanceCollector_getMetricNamesRequestMsg = GED("http://www.virtualbox.org/", "IPerformanceCollector_getMetricNames").pyclass

IPerformanceCollector_getMetricNamesResultMsg = GED("http://www.virtualbox.org/", "IPerformanceCollector_getMetricNamesResponse").pyclass

IPerformanceCollector_getMetricsRequestMsg = GED("http://www.virtualbox.org/", "IPerformanceCollector_getMetrics").pyclass

IPerformanceCollector_getMetricsResultMsg = GED("http://www.virtualbox.org/", "IPerformanceCollector_getMetricsResponse").pyclass

IPerformanceCollector_setupMetricsRequestMsg = GED("http://www.virtualbox.org/", "IPerformanceCollector_setupMetrics").pyclass

IPerformanceCollector_setupMetricsResultMsg = GED("http://www.virtualbox.org/", "IPerformanceCollector_setupMetricsResponse").pyclass

IPerformanceCollector_enableMetricsRequestMsg = GED("http://www.virtualbox.org/", "IPerformanceCollector_enableMetrics").pyclass

IPerformanceCollector_enableMetricsResultMsg = GED("http://www.virtualbox.org/", "IPerformanceCollector_enableMetricsResponse").pyclass

IPerformanceCollector_disableMetricsRequestMsg = GED("http://www.virtualbox.org/", "IPerformanceCollector_disableMetrics").pyclass

IPerformanceCollector_disableMetricsResultMsg = GED("http://www.virtualbox.org/", "IPerformanceCollector_disableMetricsResponse").pyclass

IPerformanceCollector_queryMetricsDataRequestMsg = GED("http://www.virtualbox.org/", "IPerformanceCollector_queryMetricsData").pyclass

IPerformanceCollector_queryMetricsDataResultMsg = GED("http://www.virtualbox.org/", "IPerformanceCollector_queryMetricsDataResponse").pyclass

INATEngine_getNetworkRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_getNetwork").pyclass

INATEngine_getNetworkResultMsg = GED("http://www.virtualbox.org/", "INATEngine_getNetworkResponse").pyclass

INATEngine_setNetworkRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_setNetwork").pyclass

INATEngine_setNetworkResultMsg = GED("http://www.virtualbox.org/", "INATEngine_setNetworkResponse").pyclass

INATEngine_getHostIPRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_getHostIP").pyclass

INATEngine_getHostIPResultMsg = GED("http://www.virtualbox.org/", "INATEngine_getHostIPResponse").pyclass

INATEngine_setHostIPRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_setHostIP").pyclass

INATEngine_setHostIPResultMsg = GED("http://www.virtualbox.org/", "INATEngine_setHostIPResponse").pyclass

INATEngine_getTFTPPrefixRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_getTFTPPrefix").pyclass

INATEngine_getTFTPPrefixResultMsg = GED("http://www.virtualbox.org/", "INATEngine_getTFTPPrefixResponse").pyclass

INATEngine_setTFTPPrefixRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_setTFTPPrefix").pyclass

INATEngine_setTFTPPrefixResultMsg = GED("http://www.virtualbox.org/", "INATEngine_setTFTPPrefixResponse").pyclass

INATEngine_getTFTPBootFileRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_getTFTPBootFile").pyclass

INATEngine_getTFTPBootFileResultMsg = GED("http://www.virtualbox.org/", "INATEngine_getTFTPBootFileResponse").pyclass

INATEngine_setTFTPBootFileRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_setTFTPBootFile").pyclass

INATEngine_setTFTPBootFileResultMsg = GED("http://www.virtualbox.org/", "INATEngine_setTFTPBootFileResponse").pyclass

INATEngine_getTFTPNextServerRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_getTFTPNextServer").pyclass

INATEngine_getTFTPNextServerResultMsg = GED("http://www.virtualbox.org/", "INATEngine_getTFTPNextServerResponse").pyclass

INATEngine_setTFTPNextServerRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_setTFTPNextServer").pyclass

INATEngine_setTFTPNextServerResultMsg = GED("http://www.virtualbox.org/", "INATEngine_setTFTPNextServerResponse").pyclass

INATEngine_getAliasModeRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_getAliasMode").pyclass

INATEngine_getAliasModeResultMsg = GED("http://www.virtualbox.org/", "INATEngine_getAliasModeResponse").pyclass

INATEngine_setAliasModeRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_setAliasMode").pyclass

INATEngine_setAliasModeResultMsg = GED("http://www.virtualbox.org/", "INATEngine_setAliasModeResponse").pyclass

INATEngine_getDNSPassDomainRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_getDNSPassDomain").pyclass

INATEngine_getDNSPassDomainResultMsg = GED("http://www.virtualbox.org/", "INATEngine_getDNSPassDomainResponse").pyclass

INATEngine_setDNSPassDomainRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_setDNSPassDomain").pyclass

INATEngine_setDNSPassDomainResultMsg = GED("http://www.virtualbox.org/", "INATEngine_setDNSPassDomainResponse").pyclass

INATEngine_getDNSProxyRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_getDNSProxy").pyclass

INATEngine_getDNSProxyResultMsg = GED("http://www.virtualbox.org/", "INATEngine_getDNSProxyResponse").pyclass

INATEngine_setDNSProxyRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_setDNSProxy").pyclass

INATEngine_setDNSProxyResultMsg = GED("http://www.virtualbox.org/", "INATEngine_setDNSProxyResponse").pyclass

INATEngine_getDNSUseHostResolverRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_getDNSUseHostResolver").pyclass

INATEngine_getDNSUseHostResolverResultMsg = GED("http://www.virtualbox.org/", "INATEngine_getDNSUseHostResolverResponse").pyclass

INATEngine_setDNSUseHostResolverRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_setDNSUseHostResolver").pyclass

INATEngine_setDNSUseHostResolverResultMsg = GED("http://www.virtualbox.org/", "INATEngine_setDNSUseHostResolverResponse").pyclass

INATEngine_getRedirectsRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_getRedirects").pyclass

INATEngine_getRedirectsResultMsg = GED("http://www.virtualbox.org/", "INATEngine_getRedirectsResponse").pyclass

INATEngine_setNetworkSettingsRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_setNetworkSettings").pyclass

INATEngine_setNetworkSettingsResultMsg = GED("http://www.virtualbox.org/", "INATEngine_setNetworkSettingsResponse").pyclass

INATEngine_getNetworkSettingsRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_getNetworkSettings").pyclass

INATEngine_getNetworkSettingsResultMsg = GED("http://www.virtualbox.org/", "INATEngine_getNetworkSettingsResponse").pyclass

INATEngine_addRedirectRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_addRedirect").pyclass

INATEngine_addRedirectResultMsg = GED("http://www.virtualbox.org/", "INATEngine_addRedirectResponse").pyclass

INATEngine_removeRedirectRequestMsg = GED("http://www.virtualbox.org/", "INATEngine_removeRedirect").pyclass

INATEngine_removeRedirectResultMsg = GED("http://www.virtualbox.org/", "INATEngine_removeRedirectResponse").pyclass

IBandwidthGroup_getNameRequestMsg = GED("http://www.virtualbox.org/", "IBandwidthGroup_getName").pyclass

IBandwidthGroup_getNameResultMsg = GED("http://www.virtualbox.org/", "IBandwidthGroup_getNameResponse").pyclass

IBandwidthGroup_getTypeRequestMsg = GED("http://www.virtualbox.org/", "IBandwidthGroup_getType").pyclass

IBandwidthGroup_getTypeResultMsg = GED("http://www.virtualbox.org/", "IBandwidthGroup_getTypeResponse").pyclass

IBandwidthGroup_getReferenceRequestMsg = GED("http://www.virtualbox.org/", "IBandwidthGroup_getReference").pyclass

IBandwidthGroup_getReferenceResultMsg = GED("http://www.virtualbox.org/", "IBandwidthGroup_getReferenceResponse").pyclass

IBandwidthGroup_getMaxBytesPerSecRequestMsg = GED("http://www.virtualbox.org/", "IBandwidthGroup_getMaxBytesPerSec").pyclass

IBandwidthGroup_getMaxBytesPerSecResultMsg = GED("http://www.virtualbox.org/", "IBandwidthGroup_getMaxBytesPerSecResponse").pyclass

IBandwidthGroup_setMaxBytesPerSecRequestMsg = GED("http://www.virtualbox.org/", "IBandwidthGroup_setMaxBytesPerSec").pyclass

IBandwidthGroup_setMaxBytesPerSecResultMsg = GED("http://www.virtualbox.org/", "IBandwidthGroup_setMaxBytesPerSecResponse").pyclass

IBandwidthControl_getNumGroupsRequestMsg = GED("http://www.virtualbox.org/", "IBandwidthControl_getNumGroups").pyclass

IBandwidthControl_getNumGroupsResultMsg = GED("http://www.virtualbox.org/", "IBandwidthControl_getNumGroupsResponse").pyclass

IBandwidthControl_createBandwidthGroupRequestMsg = GED("http://www.virtualbox.org/", "IBandwidthControl_createBandwidthGroup").pyclass

IBandwidthControl_createBandwidthGroupResultMsg = GED("http://www.virtualbox.org/", "IBandwidthControl_createBandwidthGroupResponse").pyclass

IBandwidthControl_deleteBandwidthGroupRequestMsg = GED("http://www.virtualbox.org/", "IBandwidthControl_deleteBandwidthGroup").pyclass

IBandwidthControl_deleteBandwidthGroupResultMsg = GED("http://www.virtualbox.org/", "IBandwidthControl_deleteBandwidthGroupResponse").pyclass

IBandwidthControl_getBandwidthGroupRequestMsg = GED("http://www.virtualbox.org/", "IBandwidthControl_getBandwidthGroup").pyclass

IBandwidthControl_getBandwidthGroupResultMsg = GED("http://www.virtualbox.org/", "IBandwidthControl_getBandwidthGroupResponse").pyclass

IBandwidthControl_getAllBandwidthGroupsRequestMsg = GED("http://www.virtualbox.org/", "IBandwidthControl_getAllBandwidthGroups").pyclass

IBandwidthControl_getAllBandwidthGroupsResultMsg = GED("http://www.virtualbox.org/", "IBandwidthControl_getAllBandwidthGroupsResponse").pyclass

IEventSource_createListenerRequestMsg = GED("http://www.virtualbox.org/", "IEventSource_createListener").pyclass

IEventSource_createListenerResultMsg = GED("http://www.virtualbox.org/", "IEventSource_createListenerResponse").pyclass

IEventSource_createAggregatorRequestMsg = GED("http://www.virtualbox.org/", "IEventSource_createAggregator").pyclass

IEventSource_createAggregatorResultMsg = GED("http://www.virtualbox.org/", "IEventSource_createAggregatorResponse").pyclass

IEventSource_registerListenerRequestMsg = GED("http://www.virtualbox.org/", "IEventSource_registerListener").pyclass

IEventSource_registerListenerResultMsg = GED("http://www.virtualbox.org/", "IEventSource_registerListenerResponse").pyclass

IEventSource_unregisterListenerRequestMsg = GED("http://www.virtualbox.org/", "IEventSource_unregisterListener").pyclass

IEventSource_unregisterListenerResultMsg = GED("http://www.virtualbox.org/", "IEventSource_unregisterListenerResponse").pyclass

IEventSource_fireEventRequestMsg = GED("http://www.virtualbox.org/", "IEventSource_fireEvent").pyclass

IEventSource_fireEventResultMsg = GED("http://www.virtualbox.org/", "IEventSource_fireEventResponse").pyclass

IEventSource_getEventRequestMsg = GED("http://www.virtualbox.org/", "IEventSource_getEvent").pyclass

IEventSource_getEventResultMsg = GED("http://www.virtualbox.org/", "IEventSource_getEventResponse").pyclass

IEventSource_eventProcessedRequestMsg = GED("http://www.virtualbox.org/", "IEventSource_eventProcessed").pyclass

IEventSource_eventProcessedResultMsg = GED("http://www.virtualbox.org/", "IEventSource_eventProcessedResponse").pyclass

IEventListener_handleEventRequestMsg = GED("http://www.virtualbox.org/", "IEventListener_handleEvent").pyclass

IEventListener_handleEventResultMsg = GED("http://www.virtualbox.org/", "IEventListener_handleEventResponse").pyclass

IEvent_getTypeRequestMsg = GED("http://www.virtualbox.org/", "IEvent_getType").pyclass

IEvent_getTypeResultMsg = GED("http://www.virtualbox.org/", "IEvent_getTypeResponse").pyclass

IEvent_getSourceRequestMsg = GED("http://www.virtualbox.org/", "IEvent_getSource").pyclass

IEvent_getSourceResultMsg = GED("http://www.virtualbox.org/", "IEvent_getSourceResponse").pyclass

IEvent_getWaitableRequestMsg = GED("http://www.virtualbox.org/", "IEvent_getWaitable").pyclass

IEvent_getWaitableResultMsg = GED("http://www.virtualbox.org/", "IEvent_getWaitableResponse").pyclass

IEvent_setProcessedRequestMsg = GED("http://www.virtualbox.org/", "IEvent_setProcessed").pyclass

IEvent_setProcessedResultMsg = GED("http://www.virtualbox.org/", "IEvent_setProcessedResponse").pyclass

IEvent_waitProcessedRequestMsg = GED("http://www.virtualbox.org/", "IEvent_waitProcessed").pyclass

IEvent_waitProcessedResultMsg = GED("http://www.virtualbox.org/", "IEvent_waitProcessedResponse").pyclass

IReusableEvent_getGenerationRequestMsg = GED("http://www.virtualbox.org/", "IReusableEvent_getGeneration").pyclass

IReusableEvent_getGenerationResultMsg = GED("http://www.virtualbox.org/", "IReusableEvent_getGenerationResponse").pyclass

IReusableEvent_reuseRequestMsg = GED("http://www.virtualbox.org/", "IReusableEvent_reuse").pyclass

IReusableEvent_reuseResultMsg = GED("http://www.virtualbox.org/", "IReusableEvent_reuseResponse").pyclass

IMachineEvent_getMachineIdRequestMsg = GED("http://www.virtualbox.org/", "IMachineEvent_getMachineId").pyclass

IMachineEvent_getMachineIdResultMsg = GED("http://www.virtualbox.org/", "IMachineEvent_getMachineIdResponse").pyclass

IMachineStateChangedEvent_getStateRequestMsg = GED("http://www.virtualbox.org/", "IMachineStateChangedEvent_getState").pyclass

IMachineStateChangedEvent_getStateResultMsg = GED("http://www.virtualbox.org/", "IMachineStateChangedEvent_getStateResponse").pyclass

IMachineDataChangedEvent_getTemporaryRequestMsg = GED("http://www.virtualbox.org/", "IMachineDataChangedEvent_getTemporary").pyclass

IMachineDataChangedEvent_getTemporaryResultMsg = GED("http://www.virtualbox.org/", "IMachineDataChangedEvent_getTemporaryResponse").pyclass

IMediumRegisteredEvent_getMediumIdRequestMsg = GED("http://www.virtualbox.org/", "IMediumRegisteredEvent_getMediumId").pyclass

IMediumRegisteredEvent_getMediumIdResultMsg = GED("http://www.virtualbox.org/", "IMediumRegisteredEvent_getMediumIdResponse").pyclass

IMediumRegisteredEvent_getMediumTypeRequestMsg = GED("http://www.virtualbox.org/", "IMediumRegisteredEvent_getMediumType").pyclass

IMediumRegisteredEvent_getMediumTypeResultMsg = GED("http://www.virtualbox.org/", "IMediumRegisteredEvent_getMediumTypeResponse").pyclass

IMediumRegisteredEvent_getRegisteredRequestMsg = GED("http://www.virtualbox.org/", "IMediumRegisteredEvent_getRegistered").pyclass

IMediumRegisteredEvent_getRegisteredResultMsg = GED("http://www.virtualbox.org/", "IMediumRegisteredEvent_getRegisteredResponse").pyclass

IMediumConfigChangedEvent_getMediumRequestMsg = GED("http://www.virtualbox.org/", "IMediumConfigChangedEvent_getMedium").pyclass

IMediumConfigChangedEvent_getMediumResultMsg = GED("http://www.virtualbox.org/", "IMediumConfigChangedEvent_getMediumResponse").pyclass

IMachineRegisteredEvent_getRegisteredRequestMsg = GED("http://www.virtualbox.org/", "IMachineRegisteredEvent_getRegistered").pyclass

IMachineRegisteredEvent_getRegisteredResultMsg = GED("http://www.virtualbox.org/", "IMachineRegisteredEvent_getRegisteredResponse").pyclass

ISessionStateChangedEvent_getStateRequestMsg = GED("http://www.virtualbox.org/", "ISessionStateChangedEvent_getState").pyclass

ISessionStateChangedEvent_getStateResultMsg = GED("http://www.virtualbox.org/", "ISessionStateChangedEvent_getStateResponse").pyclass

IGuestPropertyChangedEvent_getNameRequestMsg = GED("http://www.virtualbox.org/", "IGuestPropertyChangedEvent_getName").pyclass

IGuestPropertyChangedEvent_getNameResultMsg = GED("http://www.virtualbox.org/", "IGuestPropertyChangedEvent_getNameResponse").pyclass

IGuestPropertyChangedEvent_getValueRequestMsg = GED("http://www.virtualbox.org/", "IGuestPropertyChangedEvent_getValue").pyclass

IGuestPropertyChangedEvent_getValueResultMsg = GED("http://www.virtualbox.org/", "IGuestPropertyChangedEvent_getValueResponse").pyclass

IGuestPropertyChangedEvent_getFlagsRequestMsg = GED("http://www.virtualbox.org/", "IGuestPropertyChangedEvent_getFlags").pyclass

IGuestPropertyChangedEvent_getFlagsResultMsg = GED("http://www.virtualbox.org/", "IGuestPropertyChangedEvent_getFlagsResponse").pyclass

ISnapshotEvent_getSnapshotIdRequestMsg = GED("http://www.virtualbox.org/", "ISnapshotEvent_getSnapshotId").pyclass

ISnapshotEvent_getSnapshotIdResultMsg = GED("http://www.virtualbox.org/", "ISnapshotEvent_getSnapshotIdResponse").pyclass

ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IMousePointerShapeChangedEvent_getVisibleRequestMsg = GED("http://www.virtualbox.org/", "IMousePointerShapeChangedEvent_getVisible").pyclass

IMousePointerShapeChangedEvent_getVisibleResultMsg = GED("http://www.virtualbox.org/", "IMousePointerShapeChangedEvent_getVisibleResponse").pyclass

IMousePointerShapeChangedEvent_getAlphaRequestMsg = GED("http://www.virtualbox.org/", "IMousePointerShapeChangedEvent_getAlpha").pyclass

IMousePointerShapeChangedEvent_getAlphaResultMsg = GED("http://www.virtualbox.org/", "IMousePointerShapeChangedEvent_getAlphaResponse").pyclass

IMousePointerShapeChangedEvent_getXhotRequestMsg = GED("http://www.virtualbox.org/", "IMousePointerShapeChangedEvent_getXhot").pyclass

IMousePointerShapeChangedEvent_getXhotResultMsg = GED("http://www.virtualbox.org/", "IMousePointerShapeChangedEvent_getXhotResponse").pyclass

IMousePointerShapeChangedEvent_getYhotRequestMsg = GED("http://www.virtualbox.org/", "IMousePointerShapeChangedEvent_getYhot").pyclass

IMousePointerShapeChangedEvent_getYhotResultMsg = GED("http://www.virtualbox.org/", "IMousePointerShapeChangedEvent_getYhotResponse").pyclass

IMousePointerShapeChangedEvent_getWidthRequestMsg = GED("http://www.virtualbox.org/", "IMousePointerShapeChangedEvent_getWidth").pyclass

IMousePointerShapeChangedEvent_getWidthResultMsg = GED("http://www.virtualbox.org/", "IMousePointerShapeChangedEvent_getWidthResponse").pyclass

IMousePointerShapeChangedEvent_getHeightRequestMsg = GED("http://www.virtualbox.org/", "IMousePointerShapeChangedEvent_getHeight").pyclass

IMousePointerShapeChangedEvent_getHeightResultMsg = GED("http://www.virtualbox.org/", "IMousePointerShapeChangedEvent_getHeightResponse").pyclass

IMousePointerShapeChangedEvent_getShapeRequestMsg = GED("http://www.virtualbox.org/", "IMousePointerShapeChangedEvent_getShape").pyclass

IMousePointerShapeChangedEvent_getShapeResultMsg = GED("http://www.virtualbox.org/", "IMousePointerShapeChangedEvent_getShapeResponse").pyclass

IMouseCapabilityChangedEvent_getSupportsAbsoluteRequestMsg = GED("http://www.virtualbox.org/", "IMouseCapabilityChangedEvent_getSupportsAbsolute").pyclass

IMouseCapabilityChangedEvent_getSupportsAbsoluteResultMsg = GED("http://www.virtualbox.org/", "IMouseCapabilityChangedEvent_getSupportsAbsoluteResponse").pyclass

IMouseCapabilityChangedEvent_getSupportsRelativeRequestMsg = GED("http://www.virtualbox.org/", "IMouseCapabilityChangedEvent_getSupportsRelative").pyclass

IMouseCapabilityChangedEvent_getSupportsRelativeResultMsg = GED("http://www.virtualbox.org/", "IMouseCapabilityChangedEvent_getSupportsRelativeResponse").pyclass

IMouseCapabilityChangedEvent_getSupportsMultiTouchRequestMsg = GED("http://www.virtualbox.org/", "IMouseCapabilityChangedEvent_getSupportsMultiTouch").pyclass

IMouseCapabilityChangedEvent_getSupportsMultiTouchResultMsg = GED("http://www.virtualbox.org/", "IMouseCapabilityChangedEvent_getSupportsMultiTouchResponse").pyclass

IMouseCapabilityChangedEvent_getNeedsHostCursorRequestMsg = GED("http://www.virtualbox.org/", "IMouseCapabilityChangedEvent_getNeedsHostCursor").pyclass

IMouseCapabilityChangedEvent_getNeedsHostCursorResultMsg = GED("http://www.virtualbox.org/", "IMouseCapabilityChangedEvent_getNeedsHostCursorResponse").pyclass

IKeyboardLedsChangedEvent_getNumLockRequestMsg = GED("http://www.virtualbox.org/", "IKeyboardLedsChangedEvent_getNumLock").pyclass

IKeyboardLedsChangedEvent_getNumLockResultMsg = GED("http://www.virtualbox.org/", "IKeyboardLedsChangedEvent_getNumLockResponse").pyclass

IKeyboardLedsChangedEvent_getCapsLockRequestMsg = GED("http://www.virtualbox.org/", "IKeyboardLedsChangedEvent_getCapsLock").pyclass

IKeyboardLedsChangedEvent_getCapsLockResultMsg = GED("http://www.virtualbox.org/", "IKeyboardLedsChangedEvent_getCapsLockResponse").pyclass

IKeyboardLedsChangedEvent_getScrollLockRequestMsg = GED("http://www.virtualbox.org/", "IKeyboardLedsChangedEvent_getScrollLock").pyclass

IKeyboardLedsChangedEvent_getScrollLockResultMsg = GED("http://www.virtualbox.org/", "IKeyboardLedsChangedEvent_getScrollLockResponse").pyclass

IStateChangedEvent_getStateRequestMsg = GED("http://www.virtualbox.org/", "IStateChangedEvent_getState").pyclass

IStateChangedEvent_getStateResultMsg = GED("http://www.virtualbox.org/", "IStateChangedEvent_getStateResponse").pyclass

IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

INetworkAdapterChangedEvent_getNetworkAdapterRequestMsg = GED("http://www.virtualbox.org/", "INetworkAdapterChangedEvent_getNetworkAdapter").pyclass

INetworkAdapterChangedEvent_getNetworkAdapterResultMsg = GED("http://www.virtualbox.org/", "INetworkAdapterChangedEvent_getNetworkAdapterResponse").pyclass

ISerialPortChangedEvent_getSerialPortRequestMsg = GED("http://www.virtualbox.org/", "ISerialPortChangedEvent_getSerialPort").pyclass

ISerialPortChangedEvent_getSerialPortResultMsg = GED("http://www.virtualbox.org/", "ISerialPortChangedEvent_getSerialPortResponse").pyclass

IParallelPortChangedEvent_getParallelPortRequestMsg = GED("http://www.virtualbox.org/", "IParallelPortChangedEvent_getParallelPort").pyclass

IParallelPortChangedEvent_getParallelPortResultMsg = GED("http://www.virtualbox.org/", "IParallelPortChangedEvent_getParallelPortResponse").pyclass

IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IMediumChangedEvent_getMediumAttachmentRequestMsg = GED("http://www.virtualbox.org/", "IMediumChangedEvent_getMediumAttachment").pyclass

IMediumChangedEvent_getMediumAttachmentResultMsg = GED("http://www.virtualbox.org/", "IMediumChangedEvent_getMediumAttachmentResponse").pyclass

IClipboardModeChangedEvent_getClipboardModeRequestMsg = GED("http://www.virtualbox.org/", "IClipboardModeChangedEvent_getClipboardMode").pyclass

IClipboardModeChangedEvent_getClipboardModeResultMsg = GED("http://www.virtualbox.org/", "IClipboardModeChangedEvent_getClipboardModeResponse").pyclass

IDnDModeChangedEvent_getDndModeRequestMsg = GED("http://www.virtualbox.org/", "IDnDModeChangedEvent_getDndMode").pyclass

IDnDModeChangedEvent_getDndModeResultMsg = GED("http://www.virtualbox.org/", "IDnDModeChangedEvent_getDndModeResponse").pyclass

ICPUChangedEvent_getCPURequestMsg = GED("http://www.virtualbox.org/", "ICPUChangedEvent_getCPU").pyclass

ICPUChangedEvent_getCPUResultMsg = GED("http://www.virtualbox.org/", "ICPUChangedEvent_getCPUResponse").pyclass

ICPUChangedEvent_getAddRequestMsg = GED("http://www.virtualbox.org/", "ICPUChangedEvent_getAdd").pyclass

ICPUChangedEvent_getAddResultMsg = GED("http://www.virtualbox.org/", "ICPUChangedEvent_getAddResponse").pyclass

ICPUExecutionCapChangedEvent_getExecutionCapRequestMsg = GED("http://www.virtualbox.org/", "ICPUExecutionCapChangedEvent_getExecutionCap").pyclass

ICPUExecutionCapChangedEvent_getExecutionCapResultMsg = GED("http://www.virtualbox.org/", "ICPUExecutionCapChangedEvent_getExecutionCapResponse").pyclass

IGuestKeyboardEvent_getScancodesRequestMsg = GED("http://www.virtualbox.org/", "IGuestKeyboardEvent_getScancodes").pyclass

IGuestKeyboardEvent_getScancodesResultMsg = GED("http://www.virtualbox.org/", "IGuestKeyboardEvent_getScancodesResponse").pyclass

IGuestMouseEvent_getModeRequestMsg = GED("http://www.virtualbox.org/", "IGuestMouseEvent_getMode").pyclass

IGuestMouseEvent_getModeResultMsg = GED("http://www.virtualbox.org/", "IGuestMouseEvent_getModeResponse").pyclass

IGuestMouseEvent_getXRequestMsg = GED("http://www.virtualbox.org/", "IGuestMouseEvent_getX").pyclass

IGuestMouseEvent_getXResultMsg = GED("http://www.virtualbox.org/", "IGuestMouseEvent_getXResponse").pyclass

IGuestMouseEvent_getYRequestMsg = GED("http://www.virtualbox.org/", "IGuestMouseEvent_getY").pyclass

IGuestMouseEvent_getYResultMsg = GED("http://www.virtualbox.org/", "IGuestMouseEvent_getYResponse").pyclass

IGuestMouseEvent_getZRequestMsg = GED("http://www.virtualbox.org/", "IGuestMouseEvent_getZ").pyclass

IGuestMouseEvent_getZResultMsg = GED("http://www.virtualbox.org/", "IGuestMouseEvent_getZResponse").pyclass

IGuestMouseEvent_getWRequestMsg = GED("http://www.virtualbox.org/", "IGuestMouseEvent_getW").pyclass

IGuestMouseEvent_getWResultMsg = GED("http://www.virtualbox.org/", "IGuestMouseEvent_getWResponse").pyclass

IGuestMouseEvent_getButtonsRequestMsg = GED("http://www.virtualbox.org/", "IGuestMouseEvent_getButtons").pyclass

IGuestMouseEvent_getButtonsResultMsg = GED("http://www.virtualbox.org/", "IGuestMouseEvent_getButtonsResponse").pyclass

IGuestMultiTouchEvent_getContactCountRequestMsg = GED("http://www.virtualbox.org/", "IGuestMultiTouchEvent_getContactCount").pyclass

IGuestMultiTouchEvent_getContactCountResultMsg = GED("http://www.virtualbox.org/", "IGuestMultiTouchEvent_getContactCountResponse").pyclass

IGuestMultiTouchEvent_getXPositionsRequestMsg = GED("http://www.virtualbox.org/", "IGuestMultiTouchEvent_getXPositions").pyclass

IGuestMultiTouchEvent_getXPositionsResultMsg = GED("http://www.virtualbox.org/", "IGuestMultiTouchEvent_getXPositionsResponse").pyclass

IGuestMultiTouchEvent_getYPositionsRequestMsg = GED("http://www.virtualbox.org/", "IGuestMultiTouchEvent_getYPositions").pyclass

IGuestMultiTouchEvent_getYPositionsResultMsg = GED("http://www.virtualbox.org/", "IGuestMultiTouchEvent_getYPositionsResponse").pyclass

IGuestMultiTouchEvent_getContactIdsRequestMsg = GED("http://www.virtualbox.org/", "IGuestMultiTouchEvent_getContactIds").pyclass

IGuestMultiTouchEvent_getContactIdsResultMsg = GED("http://www.virtualbox.org/", "IGuestMultiTouchEvent_getContactIdsResponse").pyclass

IGuestMultiTouchEvent_getContactFlagsRequestMsg = GED("http://www.virtualbox.org/", "IGuestMultiTouchEvent_getContactFlags").pyclass

IGuestMultiTouchEvent_getContactFlagsResultMsg = GED("http://www.virtualbox.org/", "IGuestMultiTouchEvent_getContactFlagsResponse").pyclass

IGuestMultiTouchEvent_getScanTimeRequestMsg = GED("http://www.virtualbox.org/", "IGuestMultiTouchEvent_getScanTime").pyclass

IGuestMultiTouchEvent_getScanTimeResultMsg = GED("http://www.virtualbox.org/", "IGuestMultiTouchEvent_getScanTimeResponse").pyclass

IGuestSessionEvent_getSessionRequestMsg = GED("http://www.virtualbox.org/", "IGuestSessionEvent_getSession").pyclass

IGuestSessionEvent_getSessionResultMsg = GED("http://www.virtualbox.org/", "IGuestSessionEvent_getSessionResponse").pyclass

IGuestSessionStateChangedEvent_getIdRequestMsg = GED("http://www.virtualbox.org/", "IGuestSessionStateChangedEvent_getId").pyclass

IGuestSessionStateChangedEvent_getIdResultMsg = GED("http://www.virtualbox.org/", "IGuestSessionStateChangedEvent_getIdResponse").pyclass

IGuestSessionStateChangedEvent_getStatusRequestMsg = GED("http://www.virtualbox.org/", "IGuestSessionStateChangedEvent_getStatus").pyclass

IGuestSessionStateChangedEvent_getStatusResultMsg = GED("http://www.virtualbox.org/", "IGuestSessionStateChangedEvent_getStatusResponse").pyclass

IGuestSessionStateChangedEvent_getErrorRequestMsg = GED("http://www.virtualbox.org/", "IGuestSessionStateChangedEvent_getError").pyclass

IGuestSessionStateChangedEvent_getErrorResultMsg = GED("http://www.virtualbox.org/", "IGuestSessionStateChangedEvent_getErrorResponse").pyclass

IGuestSessionRegisteredEvent_getRegisteredRequestMsg = GED("http://www.virtualbox.org/", "IGuestSessionRegisteredEvent_getRegistered").pyclass

IGuestSessionRegisteredEvent_getRegisteredResultMsg = GED("http://www.virtualbox.org/", "IGuestSessionRegisteredEvent_getRegisteredResponse").pyclass

IGuestProcessEvent_getProcessRequestMsg = GED("http://www.virtualbox.org/", "IGuestProcessEvent_getProcess").pyclass

IGuestProcessEvent_getProcessResultMsg = GED("http://www.virtualbox.org/", "IGuestProcessEvent_getProcessResponse").pyclass

IGuestProcessEvent_getPidRequestMsg = GED("http://www.virtualbox.org/", "IGuestProcessEvent_getPid").pyclass

IGuestProcessEvent_getPidResultMsg = GED("http://www.virtualbox.org/", "IGuestProcessEvent_getPidResponse").pyclass

IGuestProcessRegisteredEvent_getRegisteredRequestMsg = GED("http://www.virtualbox.org/", "IGuestProcessRegisteredEvent_getRegistered").pyclass

IGuestProcessRegisteredEvent_getRegisteredResultMsg = GED("http://www.virtualbox.org/", "IGuestProcessRegisteredEvent_getRegisteredResponse").pyclass

IGuestProcessStateChangedEvent_getStatusRequestMsg = GED("http://www.virtualbox.org/", "IGuestProcessStateChangedEvent_getStatus").pyclass

IGuestProcessStateChangedEvent_getStatusResultMsg = GED("http://www.virtualbox.org/", "IGuestProcessStateChangedEvent_getStatusResponse").pyclass

IGuestProcessStateChangedEvent_getErrorRequestMsg = GED("http://www.virtualbox.org/", "IGuestProcessStateChangedEvent_getError").pyclass

IGuestProcessStateChangedEvent_getErrorResultMsg = GED("http://www.virtualbox.org/", "IGuestProcessStateChangedEvent_getErrorResponse").pyclass

IGuestProcessIOEvent_getHandleRequestMsg = GED("http://www.virtualbox.org/", "IGuestProcessIOEvent_getHandle").pyclass

IGuestProcessIOEvent_getHandleResultMsg = GED("http://www.virtualbox.org/", "IGuestProcessIOEvent_getHandleResponse").pyclass

IGuestProcessIOEvent_getProcessedRequestMsg = GED("http://www.virtualbox.org/", "IGuestProcessIOEvent_getProcessed").pyclass

IGuestProcessIOEvent_getProcessedResultMsg = GED("http://www.virtualbox.org/", "IGuestProcessIOEvent_getProcessedResponse").pyclass

IGuestProcessInputNotifyEvent_getStatusRequestMsg = GED("http://www.virtualbox.org/", "IGuestProcessInputNotifyEvent_getStatus").pyclass

IGuestProcessInputNotifyEvent_getStatusResultMsg = GED("http://www.virtualbox.org/", "IGuestProcessInputNotifyEvent_getStatusResponse").pyclass

IGuestProcessOutputEvent_getDataRequestMsg = GED("http://www.virtualbox.org/", "IGuestProcessOutputEvent_getData").pyclass

IGuestProcessOutputEvent_getDataResultMsg = GED("http://www.virtualbox.org/", "IGuestProcessOutputEvent_getDataResponse").pyclass

IGuestFileEvent_getFileRequestMsg = GED("http://www.virtualbox.org/", "IGuestFileEvent_getFile").pyclass

IGuestFileEvent_getFileResultMsg = GED("http://www.virtualbox.org/", "IGuestFileEvent_getFileResponse").pyclass

IGuestFileRegisteredEvent_getRegisteredRequestMsg = GED("http://www.virtualbox.org/", "IGuestFileRegisteredEvent_getRegistered").pyclass

IGuestFileRegisteredEvent_getRegisteredResultMsg = GED("http://www.virtualbox.org/", "IGuestFileRegisteredEvent_getRegisteredResponse").pyclass

IGuestFileStateChangedEvent_getStatusRequestMsg = GED("http://www.virtualbox.org/", "IGuestFileStateChangedEvent_getStatus").pyclass

IGuestFileStateChangedEvent_getStatusResultMsg = GED("http://www.virtualbox.org/", "IGuestFileStateChangedEvent_getStatusResponse").pyclass

IGuestFileStateChangedEvent_getErrorRequestMsg = GED("http://www.virtualbox.org/", "IGuestFileStateChangedEvent_getError").pyclass

IGuestFileStateChangedEvent_getErrorResultMsg = GED("http://www.virtualbox.org/", "IGuestFileStateChangedEvent_getErrorResponse").pyclass

IGuestFileIOEvent_getOffsetRequestMsg = GED("http://www.virtualbox.org/", "IGuestFileIOEvent_getOffset").pyclass

IGuestFileIOEvent_getOffsetResultMsg = GED("http://www.virtualbox.org/", "IGuestFileIOEvent_getOffsetResponse").pyclass

IGuestFileIOEvent_getProcessedRequestMsg = GED("http://www.virtualbox.org/", "IGuestFileIOEvent_getProcessed").pyclass

IGuestFileIOEvent_getProcessedResultMsg = GED("http://www.virtualbox.org/", "IGuestFileIOEvent_getProcessedResponse").pyclass

IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IGuestFileReadEvent_getDataRequestMsg = GED("http://www.virtualbox.org/", "IGuestFileReadEvent_getData").pyclass

IGuestFileReadEvent_getDataResultMsg = GED("http://www.virtualbox.org/", "IGuestFileReadEvent_getDataResponse").pyclass

IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IUSBDeviceStateChangedEvent_getDeviceRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceStateChangedEvent_getDevice").pyclass

IUSBDeviceStateChangedEvent_getDeviceResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceStateChangedEvent_getDeviceResponse").pyclass

IUSBDeviceStateChangedEvent_getAttachedRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceStateChangedEvent_getAttached").pyclass

IUSBDeviceStateChangedEvent_getAttachedResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceStateChangedEvent_getAttachedResponse").pyclass

IUSBDeviceStateChangedEvent_getErrorRequestMsg = GED("http://www.virtualbox.org/", "IUSBDeviceStateChangedEvent_getError").pyclass

IUSBDeviceStateChangedEvent_getErrorResultMsg = GED("http://www.virtualbox.org/", "IUSBDeviceStateChangedEvent_getErrorResponse").pyclass

ISharedFolderChangedEvent_getScopeRequestMsg = GED("http://www.virtualbox.org/", "ISharedFolderChangedEvent_getScope").pyclass

ISharedFolderChangedEvent_getScopeResultMsg = GED("http://www.virtualbox.org/", "ISharedFolderChangedEvent_getScopeResponse").pyclass

IRuntimeErrorEvent_getFatalRequestMsg = GED("http://www.virtualbox.org/", "IRuntimeErrorEvent_getFatal").pyclass

IRuntimeErrorEvent_getFatalResultMsg = GED("http://www.virtualbox.org/", "IRuntimeErrorEvent_getFatalResponse").pyclass

IRuntimeErrorEvent_getIdRequestMsg = GED("http://www.virtualbox.org/", "IRuntimeErrorEvent_getId").pyclass

IRuntimeErrorEvent_getIdResultMsg = GED("http://www.virtualbox.org/", "IRuntimeErrorEvent_getIdResponse").pyclass

IRuntimeErrorEvent_getMessageRequestMsg = GED("http://www.virtualbox.org/", "IRuntimeErrorEvent_getMessage").pyclass

IRuntimeErrorEvent_getMessageResultMsg = GED("http://www.virtualbox.org/", "IRuntimeErrorEvent_getMessageResponse").pyclass

IEventSourceChangedEvent_getListenerRequestMsg = GED("http://www.virtualbox.org/", "IEventSourceChangedEvent_getListener").pyclass

IEventSourceChangedEvent_getListenerResultMsg = GED("http://www.virtualbox.org/", "IEventSourceChangedEvent_getListenerResponse").pyclass

IEventSourceChangedEvent_getAddRequestMsg = GED("http://www.virtualbox.org/", "IEventSourceChangedEvent_getAdd").pyclass

IEventSourceChangedEvent_getAddResultMsg = GED("http://www.virtualbox.org/", "IEventSourceChangedEvent_getAddResponse").pyclass

IExtraDataChangedEvent_getMachineIdRequestMsg = GED("http://www.virtualbox.org/", "IExtraDataChangedEvent_getMachineId").pyclass

IExtraDataChangedEvent_getMachineIdResultMsg = GED("http://www.virtualbox.org/", "IExtraDataChangedEvent_getMachineIdResponse").pyclass

IExtraDataChangedEvent_getKeyRequestMsg = GED("http://www.virtualbox.org/", "IExtraDataChangedEvent_getKey").pyclass

IExtraDataChangedEvent_getKeyResultMsg = GED("http://www.virtualbox.org/", "IExtraDataChangedEvent_getKeyResponse").pyclass

IExtraDataChangedEvent_getValueRequestMsg = GED("http://www.virtualbox.org/", "IExtraDataChangedEvent_getValue").pyclass

IExtraDataChangedEvent_getValueResultMsg = GED("http://www.virtualbox.org/", "IExtraDataChangedEvent_getValueResponse").pyclass

IVetoEvent_addVetoRequestMsg = GED("http://www.virtualbox.org/", "IVetoEvent_addVeto").pyclass

IVetoEvent_addVetoResultMsg = GED("http://www.virtualbox.org/", "IVetoEvent_addVetoResponse").pyclass

IVetoEvent_isVetoedRequestMsg = GED("http://www.virtualbox.org/", "IVetoEvent_isVetoed").pyclass

IVetoEvent_isVetoedResultMsg = GED("http://www.virtualbox.org/", "IVetoEvent_isVetoedResponse").pyclass

IVetoEvent_getVetosRequestMsg = GED("http://www.virtualbox.org/", "IVetoEvent_getVetos").pyclass

IVetoEvent_getVetosResultMsg = GED("http://www.virtualbox.org/", "IVetoEvent_getVetosResponse").pyclass

IVetoEvent_addApprovalRequestMsg = GED("http://www.virtualbox.org/", "IVetoEvent_addApproval").pyclass

IVetoEvent_addApprovalResultMsg = GED("http://www.virtualbox.org/", "IVetoEvent_addApprovalResponse").pyclass

IVetoEvent_isApprovedRequestMsg = GED("http://www.virtualbox.org/", "IVetoEvent_isApproved").pyclass

IVetoEvent_isApprovedResultMsg = GED("http://www.virtualbox.org/", "IVetoEvent_isApprovedResponse").pyclass

IVetoEvent_getApprovalsRequestMsg = GED("http://www.virtualbox.org/", "IVetoEvent_getApprovals").pyclass

IVetoEvent_getApprovalsResultMsg = GED("http://www.virtualbox.org/", "IVetoEvent_getApprovalsResponse").pyclass

IExtraDataCanChangeEvent_getMachineIdRequestMsg = GED("http://www.virtualbox.org/", "IExtraDataCanChangeEvent_getMachineId").pyclass

IExtraDataCanChangeEvent_getMachineIdResultMsg = GED("http://www.virtualbox.org/", "IExtraDataCanChangeEvent_getMachineIdResponse").pyclass

IExtraDataCanChangeEvent_getKeyRequestMsg = GED("http://www.virtualbox.org/", "IExtraDataCanChangeEvent_getKey").pyclass

IExtraDataCanChangeEvent_getKeyResultMsg = GED("http://www.virtualbox.org/", "IExtraDataCanChangeEvent_getKeyResponse").pyclass

IExtraDataCanChangeEvent_getValueRequestMsg = GED("http://www.virtualbox.org/", "IExtraDataCanChangeEvent_getValue").pyclass

IExtraDataCanChangeEvent_getValueResultMsg = GED("http://www.virtualbox.org/", "IExtraDataCanChangeEvent_getValueResponse").pyclass

ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

IShowWindowEvent_getWinIdRequestMsg = GED("http://www.virtualbox.org/", "IShowWindowEvent_getWinId").pyclass

IShowWindowEvent_getWinIdResultMsg = GED("http://www.virtualbox.org/", "IShowWindowEvent_getWinIdResponse").pyclass

IShowWindowEvent_setWinIdRequestMsg = GED("http://www.virtualbox.org/", "IShowWindowEvent_setWinId").pyclass

IShowWindowEvent_setWinIdResultMsg = GED("http://www.virtualbox.org/", "IShowWindowEvent_setWinIdResponse").pyclass

INATRedirectEvent_getSlotRequestMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getSlot").pyclass

INATRedirectEvent_getSlotResultMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getSlotResponse").pyclass

INATRedirectEvent_getRemoveRequestMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getRemove").pyclass

INATRedirectEvent_getRemoveResultMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getRemoveResponse").pyclass

INATRedirectEvent_getNameRequestMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getName").pyclass

INATRedirectEvent_getNameResultMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getNameResponse").pyclass

INATRedirectEvent_getProtoRequestMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getProto").pyclass

INATRedirectEvent_getProtoResultMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getProtoResponse").pyclass

INATRedirectEvent_getHostIPRequestMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getHostIP").pyclass

INATRedirectEvent_getHostIPResultMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getHostIPResponse").pyclass

INATRedirectEvent_getHostPortRequestMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getHostPort").pyclass

INATRedirectEvent_getHostPortResultMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getHostPortResponse").pyclass

INATRedirectEvent_getGuestIPRequestMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getGuestIP").pyclass

INATRedirectEvent_getGuestIPResultMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getGuestIPResponse").pyclass

INATRedirectEvent_getGuestPortRequestMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getGuestPort").pyclass

INATRedirectEvent_getGuestPortResultMsg = GED("http://www.virtualbox.org/", "INATRedirectEvent_getGuestPortResponse").pyclass

IHostPCIDevicePlugEvent_getPluggedRequestMsg = GED("http://www.virtualbox.org/", "IHostPCIDevicePlugEvent_getPlugged").pyclass

IHostPCIDevicePlugEvent_getPluggedResultMsg = GED("http://www.virtualbox.org/", "IHostPCIDevicePlugEvent_getPluggedResponse").pyclass

IHostPCIDevicePlugEvent_getSuccessRequestMsg = GED("http://www.virtualbox.org/", "IHostPCIDevicePlugEvent_getSuccess").pyclass

IHostPCIDevicePlugEvent_getSuccessResultMsg = GED("http://www.virtualbox.org/", "IHostPCIDevicePlugEvent_getSuccessResponse").pyclass

IHostPCIDevicePlugEvent_getAttachmentRequestMsg = GED("http://www.virtualbox.org/", "IHostPCIDevicePlugEvent_getAttachment").pyclass

IHostPCIDevicePlugEvent_getAttachmentResultMsg = GED("http://www.virtualbox.org/", "IHostPCIDevicePlugEvent_getAttachmentResponse").pyclass

IHostPCIDevicePlugEvent_getMessageRequestMsg = GED("http://www.virtualbox.org/", "IHostPCIDevicePlugEvent_getMessage").pyclass

IHostPCIDevicePlugEvent_getMessageResultMsg = GED("http://www.virtualbox.org/", "IHostPCIDevicePlugEvent_getMessageResponse").pyclass

IVBoxSVCAvailabilityChangedEvent_getAvailableRequestMsg = GED("http://www.virtualbox.org/", "IVBoxSVCAvailabilityChangedEvent_getAvailable").pyclass

IVBoxSVCAvailabilityChangedEvent_getAvailableResultMsg = GED("http://www.virtualbox.org/", "IVBoxSVCAvailabilityChangedEvent_getAvailableResponse").pyclass

IBandwidthGroupChangedEvent_getBandwidthGroupRequestMsg = GED("http://www.virtualbox.org/", "IBandwidthGroupChangedEvent_getBandwidthGroup").pyclass

IBandwidthGroupChangedEvent_getBandwidthGroupResultMsg = GED("http://www.virtualbox.org/", "IBandwidthGroupChangedEvent_getBandwidthGroupResponse").pyclass

IGuestMonitorChangedEvent_getChangeTypeRequestMsg = GED("http://www.virtualbox.org/", "IGuestMonitorChangedEvent_getChangeType").pyclass

IGuestMonitorChangedEvent_getChangeTypeResultMsg = GED("http://www.virtualbox.org/", "IGuestMonitorChangedEvent_getChangeTypeResponse").pyclass

IGuestMonitorChangedEvent_getScreenIdRequestMsg = GED("http://www.virtualbox.org/", "IGuestMonitorChangedEvent_getScreenId").pyclass

IGuestMonitorChangedEvent_getScreenIdResultMsg = GED("http://www.virtualbox.org/", "IGuestMonitorChangedEvent_getScreenIdResponse").pyclass

IGuestMonitorChangedEvent_getOriginXRequestMsg = GED("http://www.virtualbox.org/", "IGuestMonitorChangedEvent_getOriginX").pyclass

IGuestMonitorChangedEvent_getOriginXResultMsg = GED("http://www.virtualbox.org/", "IGuestMonitorChangedEvent_getOriginXResponse").pyclass

IGuestMonitorChangedEvent_getOriginYRequestMsg = GED("http://www.virtualbox.org/", "IGuestMonitorChangedEvent_getOriginY").pyclass

IGuestMonitorChangedEvent_getOriginYResultMsg = GED("http://www.virtualbox.org/", "IGuestMonitorChangedEvent_getOriginYResponse").pyclass

IGuestMonitorChangedEvent_getWidthRequestMsg = GED("http://www.virtualbox.org/", "IGuestMonitorChangedEvent_getWidth").pyclass

IGuestMonitorChangedEvent_getWidthResultMsg = GED("http://www.virtualbox.org/", "IGuestMonitorChangedEvent_getWidthResponse").pyclass

IGuestMonitorChangedEvent_getHeightRequestMsg = GED("http://www.virtualbox.org/", "IGuestMonitorChangedEvent_getHeight").pyclass

IGuestMonitorChangedEvent_getHeightResultMsg = GED("http://www.virtualbox.org/", "IGuestMonitorChangedEvent_getHeightResponse").pyclass

IGuestUserStateChangedEvent_getNameRequestMsg = GED("http://www.virtualbox.org/", "IGuestUserStateChangedEvent_getName").pyclass

IGuestUserStateChangedEvent_getNameResultMsg = GED("http://www.virtualbox.org/", "IGuestUserStateChangedEvent_getNameResponse").pyclass

IGuestUserStateChangedEvent_getDomainRequestMsg = GED("http://www.virtualbox.org/", "IGuestUserStateChangedEvent_getDomain").pyclass

IGuestUserStateChangedEvent_getDomainResultMsg = GED("http://www.virtualbox.org/", "IGuestUserStateChangedEvent_getDomainResponse").pyclass

IGuestUserStateChangedEvent_getStateRequestMsg = GED("http://www.virtualbox.org/", "IGuestUserStateChangedEvent_getState").pyclass

IGuestUserStateChangedEvent_getStateResultMsg = GED("http://www.virtualbox.org/", "IGuestUserStateChangedEvent_getStateResponse").pyclass

IGuestUserStateChangedEvent_getStateDetailsRequestMsg = GED("http://www.virtualbox.org/", "IGuestUserStateChangedEvent_getStateDetails").pyclass

IGuestUserStateChangedEvent_getStateDetailsResultMsg = GED("http://www.virtualbox.org/", "IGuestUserStateChangedEvent_getStateDetailsResponse").pyclass

IStorageDeviceChangedEvent_getStorageDeviceRequestMsg = GED("http://www.virtualbox.org/", "IStorageDeviceChangedEvent_getStorageDevice").pyclass

IStorageDeviceChangedEvent_getStorageDeviceResultMsg = GED("http://www.virtualbox.org/", "IStorageDeviceChangedEvent_getStorageDeviceResponse").pyclass

IStorageDeviceChangedEvent_getRemovedRequestMsg = GED("http://www.virtualbox.org/", "IStorageDeviceChangedEvent_getRemoved").pyclass

IStorageDeviceChangedEvent_getRemovedResultMsg = GED("http://www.virtualbox.org/", "IStorageDeviceChangedEvent_getRemovedResponse").pyclass

IStorageDeviceChangedEvent_getSilentRequestMsg = GED("http://www.virtualbox.org/", "IStorageDeviceChangedEvent_getSilent").pyclass

IStorageDeviceChangedEvent_getSilentResultMsg = GED("http://www.virtualbox.org/", "IStorageDeviceChangedEvent_getSilentResponse").pyclass

INATNetworkChangedEvent_getNetworkNameRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkChangedEvent_getNetworkName").pyclass

INATNetworkChangedEvent_getNetworkNameResultMsg = GED("http://www.virtualbox.org/", "INATNetworkChangedEvent_getNetworkNameResponse").pyclass

INATNetworkStartStopEvent_getStartEventRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkStartStopEvent_getStartEvent").pyclass

INATNetworkStartStopEvent_getStartEventResultMsg = GED("http://www.virtualbox.org/", "INATNetworkStartStopEvent_getStartEventResponse").pyclass

INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass

INATNetworkCreationDeletionEvent_getCreationEventRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkCreationDeletionEvent_getCreationEvent").pyclass

INATNetworkCreationDeletionEvent_getCreationEventResultMsg = GED("http://www.virtualbox.org/", "INATNetworkCreationDeletionEvent_getCreationEventResponse").pyclass

INATNetworkSettingEvent_getEnabledRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkSettingEvent_getEnabled").pyclass

INATNetworkSettingEvent_getEnabledResultMsg = GED("http://www.virtualbox.org/", "INATNetworkSettingEvent_getEnabledResponse").pyclass

INATNetworkSettingEvent_getNetworkRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkSettingEvent_getNetwork").pyclass

INATNetworkSettingEvent_getNetworkResultMsg = GED("http://www.virtualbox.org/", "INATNetworkSettingEvent_getNetworkResponse").pyclass

INATNetworkSettingEvent_getGatewayRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkSettingEvent_getGateway").pyclass

INATNetworkSettingEvent_getGatewayResultMsg = GED("http://www.virtualbox.org/", "INATNetworkSettingEvent_getGatewayResponse").pyclass

INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabledRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabled").pyclass

INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabledResultMsg = GED("http://www.virtualbox.org/", "INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabledResponse").pyclass

INATNetworkSettingEvent_getNeedDhcpServerRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkSettingEvent_getNeedDhcpServer").pyclass

INATNetworkSettingEvent_getNeedDhcpServerResultMsg = GED("http://www.virtualbox.org/", "INATNetworkSettingEvent_getNeedDhcpServerResponse").pyclass

INATNetworkPortForwardEvent_getCreateRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getCreate").pyclass

INATNetworkPortForwardEvent_getCreateResultMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getCreateResponse").pyclass

INATNetworkPortForwardEvent_getIpv6RequestMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getIpv6").pyclass

INATNetworkPortForwardEvent_getIpv6ResultMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getIpv6Response").pyclass

INATNetworkPortForwardEvent_getNameRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getName").pyclass

INATNetworkPortForwardEvent_getNameResultMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getNameResponse").pyclass

INATNetworkPortForwardEvent_getProtoRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getProto").pyclass

INATNetworkPortForwardEvent_getProtoResultMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getProtoResponse").pyclass

INATNetworkPortForwardEvent_getHostIpRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getHostIp").pyclass

INATNetworkPortForwardEvent_getHostIpResultMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getHostIpResponse").pyclass

INATNetworkPortForwardEvent_getHostPortRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getHostPort").pyclass

INATNetworkPortForwardEvent_getHostPortResultMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getHostPortResponse").pyclass

INATNetworkPortForwardEvent_getGuestIpRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getGuestIp").pyclass

INATNetworkPortForwardEvent_getGuestIpResultMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getGuestIpResponse").pyclass

INATNetworkPortForwardEvent_getGuestPortRequestMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getGuestPort").pyclass

INATNetworkPortForwardEvent_getGuestPortResultMsg = GED("http://www.virtualbox.org/", "INATNetworkPortForwardEvent_getGuestPortResponse").pyclass

IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg = GED("http://www.virtualbox.org/", "IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfaces").pyclass

IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg = GED("http://www.virtualbox.org/", "IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfacesResponse").pyclass


# Service Skeletons
class vboxService(ServiceSOAPBinding):
    soapAction = {}
    root = {}

    def __init__(self, post='/', **kw):
        ServiceSOAPBinding.__init__(self, post)

    def soap_IVirtualBoxErrorInfo_getResultCode(self, ps, **kw):
        request = ps.Parse(IVirtualBoxErrorInfo_getResultCodeRequestMsg.typecode)
        return request,IVirtualBoxErrorInfo_getResultCodeResultMsg()

    soapAction[''] = 'soap_IVirtualBoxErrorInfo_getResultCode'
    root[(IVirtualBoxErrorInfo_getResultCodeRequestMsg.typecode.nspname,IVirtualBoxErrorInfo_getResultCodeRequestMsg.typecode.pname)] = 'soap_IVirtualBoxErrorInfo_getResultCode'

    def soap_IVirtualBoxErrorInfo_getResultDetail(self, ps, **kw):
        request = ps.Parse(IVirtualBoxErrorInfo_getResultDetailRequestMsg.typecode)
        return request,IVirtualBoxErrorInfo_getResultDetailResultMsg()

    soapAction[''] = 'soap_IVirtualBoxErrorInfo_getResultDetail'
    root[(IVirtualBoxErrorInfo_getResultDetailRequestMsg.typecode.nspname,IVirtualBoxErrorInfo_getResultDetailRequestMsg.typecode.pname)] = 'soap_IVirtualBoxErrorInfo_getResultDetail'

    def soap_IVirtualBoxErrorInfo_getInterfaceID(self, ps, **kw):
        request = ps.Parse(IVirtualBoxErrorInfo_getInterfaceIDRequestMsg.typecode)
        return request,IVirtualBoxErrorInfo_getInterfaceIDResultMsg()

    soapAction[''] = 'soap_IVirtualBoxErrorInfo_getInterfaceID'
    root[(IVirtualBoxErrorInfo_getInterfaceIDRequestMsg.typecode.nspname,IVirtualBoxErrorInfo_getInterfaceIDRequestMsg.typecode.pname)] = 'soap_IVirtualBoxErrorInfo_getInterfaceID'

    def soap_IVirtualBoxErrorInfo_getComponent(self, ps, **kw):
        request = ps.Parse(IVirtualBoxErrorInfo_getComponentRequestMsg.typecode)
        return request,IVirtualBoxErrorInfo_getComponentResultMsg()

    soapAction[''] = 'soap_IVirtualBoxErrorInfo_getComponent'
    root[(IVirtualBoxErrorInfo_getComponentRequestMsg.typecode.nspname,IVirtualBoxErrorInfo_getComponentRequestMsg.typecode.pname)] = 'soap_IVirtualBoxErrorInfo_getComponent'

    def soap_IVirtualBoxErrorInfo_getText(self, ps, **kw):
        request = ps.Parse(IVirtualBoxErrorInfo_getTextRequestMsg.typecode)
        return request,IVirtualBoxErrorInfo_getTextResultMsg()

    soapAction[''] = 'soap_IVirtualBoxErrorInfo_getText'
    root[(IVirtualBoxErrorInfo_getTextRequestMsg.typecode.nspname,IVirtualBoxErrorInfo_getTextRequestMsg.typecode.pname)] = 'soap_IVirtualBoxErrorInfo_getText'

    def soap_IVirtualBoxErrorInfo_getNext(self, ps, **kw):
        request = ps.Parse(IVirtualBoxErrorInfo_getNextRequestMsg.typecode)
        return request,IVirtualBoxErrorInfo_getNextResultMsg()

    soapAction[''] = 'soap_IVirtualBoxErrorInfo_getNext'
    root[(IVirtualBoxErrorInfo_getNextRequestMsg.typecode.nspname,IVirtualBoxErrorInfo_getNextRequestMsg.typecode.pname)] = 'soap_IVirtualBoxErrorInfo_getNext'

    def soap_INATNetwork_getNetworkName(self, ps, **kw):
        request = ps.Parse(INATNetwork_getNetworkNameRequestMsg.typecode)
        return request,INATNetwork_getNetworkNameResultMsg()

    soapAction[''] = 'soap_INATNetwork_getNetworkName'
    root[(INATNetwork_getNetworkNameRequestMsg.typecode.nspname,INATNetwork_getNetworkNameRequestMsg.typecode.pname)] = 'soap_INATNetwork_getNetworkName'

    def soap_INATNetwork_setNetworkName(self, ps, **kw):
        request = ps.Parse(INATNetwork_setNetworkNameRequestMsg.typecode)
        return request,INATNetwork_setNetworkNameResultMsg()

    soapAction[''] = 'soap_INATNetwork_setNetworkName'
    root[(INATNetwork_setNetworkNameRequestMsg.typecode.nspname,INATNetwork_setNetworkNameRequestMsg.typecode.pname)] = 'soap_INATNetwork_setNetworkName'

    def soap_INATNetwork_getEnabled(self, ps, **kw):
        request = ps.Parse(INATNetwork_getEnabledRequestMsg.typecode)
        return request,INATNetwork_getEnabledResultMsg()

    soapAction[''] = 'soap_INATNetwork_getEnabled'
    root[(INATNetwork_getEnabledRequestMsg.typecode.nspname,INATNetwork_getEnabledRequestMsg.typecode.pname)] = 'soap_INATNetwork_getEnabled'

    def soap_INATNetwork_setEnabled(self, ps, **kw):
        request = ps.Parse(INATNetwork_setEnabledRequestMsg.typecode)
        return request,INATNetwork_setEnabledResultMsg()

    soapAction[''] = 'soap_INATNetwork_setEnabled'
    root[(INATNetwork_setEnabledRequestMsg.typecode.nspname,INATNetwork_setEnabledRequestMsg.typecode.pname)] = 'soap_INATNetwork_setEnabled'

    def soap_INATNetwork_getNetwork(self, ps, **kw):
        request = ps.Parse(INATNetwork_getNetworkRequestMsg.typecode)
        return request,INATNetwork_getNetworkResultMsg()

    soapAction[''] = 'soap_INATNetwork_getNetwork'
    root[(INATNetwork_getNetworkRequestMsg.typecode.nspname,INATNetwork_getNetworkRequestMsg.typecode.pname)] = 'soap_INATNetwork_getNetwork'

    def soap_INATNetwork_setNetwork(self, ps, **kw):
        request = ps.Parse(INATNetwork_setNetworkRequestMsg.typecode)
        return request,INATNetwork_setNetworkResultMsg()

    soapAction[''] = 'soap_INATNetwork_setNetwork'
    root[(INATNetwork_setNetworkRequestMsg.typecode.nspname,INATNetwork_setNetworkRequestMsg.typecode.pname)] = 'soap_INATNetwork_setNetwork'

    def soap_INATNetwork_getGateway(self, ps, **kw):
        request = ps.Parse(INATNetwork_getGatewayRequestMsg.typecode)
        return request,INATNetwork_getGatewayResultMsg()

    soapAction[''] = 'soap_INATNetwork_getGateway'
    root[(INATNetwork_getGatewayRequestMsg.typecode.nspname,INATNetwork_getGatewayRequestMsg.typecode.pname)] = 'soap_INATNetwork_getGateway'

    def soap_INATNetwork_getIPv6Enabled(self, ps, **kw):
        request = ps.Parse(INATNetwork_getIPv6EnabledRequestMsg.typecode)
        return request,INATNetwork_getIPv6EnabledResultMsg()

    soapAction[''] = 'soap_INATNetwork_getIPv6Enabled'
    root[(INATNetwork_getIPv6EnabledRequestMsg.typecode.nspname,INATNetwork_getIPv6EnabledRequestMsg.typecode.pname)] = 'soap_INATNetwork_getIPv6Enabled'

    def soap_INATNetwork_setIPv6Enabled(self, ps, **kw):
        request = ps.Parse(INATNetwork_setIPv6EnabledRequestMsg.typecode)
        return request,INATNetwork_setIPv6EnabledResultMsg()

    soapAction[''] = 'soap_INATNetwork_setIPv6Enabled'
    root[(INATNetwork_setIPv6EnabledRequestMsg.typecode.nspname,INATNetwork_setIPv6EnabledRequestMsg.typecode.pname)] = 'soap_INATNetwork_setIPv6Enabled'

    def soap_INATNetwork_getIPv6Prefix(self, ps, **kw):
        request = ps.Parse(INATNetwork_getIPv6PrefixRequestMsg.typecode)
        return request,INATNetwork_getIPv6PrefixResultMsg()

    soapAction[''] = 'soap_INATNetwork_getIPv6Prefix'
    root[(INATNetwork_getIPv6PrefixRequestMsg.typecode.nspname,INATNetwork_getIPv6PrefixRequestMsg.typecode.pname)] = 'soap_INATNetwork_getIPv6Prefix'

    def soap_INATNetwork_setIPv6Prefix(self, ps, **kw):
        request = ps.Parse(INATNetwork_setIPv6PrefixRequestMsg.typecode)
        return request,INATNetwork_setIPv6PrefixResultMsg()

    soapAction[''] = 'soap_INATNetwork_setIPv6Prefix'
    root[(INATNetwork_setIPv6PrefixRequestMsg.typecode.nspname,INATNetwork_setIPv6PrefixRequestMsg.typecode.pname)] = 'soap_INATNetwork_setIPv6Prefix'

    def soap_INATNetwork_getAdvertiseDefaultIPv6RouteEnabled(self, ps, **kw):
        request = ps.Parse(INATNetwork_getAdvertiseDefaultIPv6RouteEnabledRequestMsg.typecode)
        return request,INATNetwork_getAdvertiseDefaultIPv6RouteEnabledResultMsg()

    soapAction[''] = 'soap_INATNetwork_getAdvertiseDefaultIPv6RouteEnabled'
    root[(INATNetwork_getAdvertiseDefaultIPv6RouteEnabledRequestMsg.typecode.nspname,INATNetwork_getAdvertiseDefaultIPv6RouteEnabledRequestMsg.typecode.pname)] = 'soap_INATNetwork_getAdvertiseDefaultIPv6RouteEnabled'

    def soap_INATNetwork_setAdvertiseDefaultIPv6RouteEnabled(self, ps, **kw):
        request = ps.Parse(INATNetwork_setAdvertiseDefaultIPv6RouteEnabledRequestMsg.typecode)
        return request,INATNetwork_setAdvertiseDefaultIPv6RouteEnabledResultMsg()

    soapAction[''] = 'soap_INATNetwork_setAdvertiseDefaultIPv6RouteEnabled'
    root[(INATNetwork_setAdvertiseDefaultIPv6RouteEnabledRequestMsg.typecode.nspname,INATNetwork_setAdvertiseDefaultIPv6RouteEnabledRequestMsg.typecode.pname)] = 'soap_INATNetwork_setAdvertiseDefaultIPv6RouteEnabled'

    def soap_INATNetwork_getNeedDhcpServer(self, ps, **kw):
        request = ps.Parse(INATNetwork_getNeedDhcpServerRequestMsg.typecode)
        return request,INATNetwork_getNeedDhcpServerResultMsg()

    soapAction[''] = 'soap_INATNetwork_getNeedDhcpServer'
    root[(INATNetwork_getNeedDhcpServerRequestMsg.typecode.nspname,INATNetwork_getNeedDhcpServerRequestMsg.typecode.pname)] = 'soap_INATNetwork_getNeedDhcpServer'

    def soap_INATNetwork_setNeedDhcpServer(self, ps, **kw):
        request = ps.Parse(INATNetwork_setNeedDhcpServerRequestMsg.typecode)
        return request,INATNetwork_setNeedDhcpServerResultMsg()

    soapAction[''] = 'soap_INATNetwork_setNeedDhcpServer'
    root[(INATNetwork_setNeedDhcpServerRequestMsg.typecode.nspname,INATNetwork_setNeedDhcpServerRequestMsg.typecode.pname)] = 'soap_INATNetwork_setNeedDhcpServer'

    def soap_INATNetwork_getEventSource(self, ps, **kw):
        request = ps.Parse(INATNetwork_getEventSourceRequestMsg.typecode)
        return request,INATNetwork_getEventSourceResultMsg()

    soapAction[''] = 'soap_INATNetwork_getEventSource'
    root[(INATNetwork_getEventSourceRequestMsg.typecode.nspname,INATNetwork_getEventSourceRequestMsg.typecode.pname)] = 'soap_INATNetwork_getEventSource'

    def soap_INATNetwork_getPortForwardRules4(self, ps, **kw):
        request = ps.Parse(INATNetwork_getPortForwardRules4RequestMsg.typecode)
        return request,INATNetwork_getPortForwardRules4ResultMsg()

    soapAction[''] = 'soap_INATNetwork_getPortForwardRules4'
    root[(INATNetwork_getPortForwardRules4RequestMsg.typecode.nspname,INATNetwork_getPortForwardRules4RequestMsg.typecode.pname)] = 'soap_INATNetwork_getPortForwardRules4'

    def soap_INATNetwork_getLocalMappings(self, ps, **kw):
        request = ps.Parse(INATNetwork_getLocalMappingsRequestMsg.typecode)
        return request,INATNetwork_getLocalMappingsResultMsg()

    soapAction[''] = 'soap_INATNetwork_getLocalMappings'
    root[(INATNetwork_getLocalMappingsRequestMsg.typecode.nspname,INATNetwork_getLocalMappingsRequestMsg.typecode.pname)] = 'soap_INATNetwork_getLocalMappings'

    def soap_INATNetwork_getLoopbackIp6(self, ps, **kw):
        request = ps.Parse(INATNetwork_getLoopbackIp6RequestMsg.typecode)
        return request,INATNetwork_getLoopbackIp6ResultMsg()

    soapAction[''] = 'soap_INATNetwork_getLoopbackIp6'
    root[(INATNetwork_getLoopbackIp6RequestMsg.typecode.nspname,INATNetwork_getLoopbackIp6RequestMsg.typecode.pname)] = 'soap_INATNetwork_getLoopbackIp6'

    def soap_INATNetwork_setLoopbackIp6(self, ps, **kw):
        request = ps.Parse(INATNetwork_setLoopbackIp6RequestMsg.typecode)
        return request,INATNetwork_setLoopbackIp6ResultMsg()

    soapAction[''] = 'soap_INATNetwork_setLoopbackIp6'
    root[(INATNetwork_setLoopbackIp6RequestMsg.typecode.nspname,INATNetwork_setLoopbackIp6RequestMsg.typecode.pname)] = 'soap_INATNetwork_setLoopbackIp6'

    def soap_INATNetwork_getPortForwardRules6(self, ps, **kw):
        request = ps.Parse(INATNetwork_getPortForwardRules6RequestMsg.typecode)
        return request,INATNetwork_getPortForwardRules6ResultMsg()

    soapAction[''] = 'soap_INATNetwork_getPortForwardRules6'
    root[(INATNetwork_getPortForwardRules6RequestMsg.typecode.nspname,INATNetwork_getPortForwardRules6RequestMsg.typecode.pname)] = 'soap_INATNetwork_getPortForwardRules6'

    def soap_INATNetwork_addLocalMapping(self, ps, **kw):
        request = ps.Parse(INATNetwork_addLocalMappingRequestMsg.typecode)
        return request,INATNetwork_addLocalMappingResultMsg()

    soapAction[''] = 'soap_INATNetwork_addLocalMapping'
    root[(INATNetwork_addLocalMappingRequestMsg.typecode.nspname,INATNetwork_addLocalMappingRequestMsg.typecode.pname)] = 'soap_INATNetwork_addLocalMapping'

    def soap_INATNetwork_addPortForwardRule(self, ps, **kw):
        request = ps.Parse(INATNetwork_addPortForwardRuleRequestMsg.typecode)
        return request,INATNetwork_addPortForwardRuleResultMsg()

    soapAction[''] = 'soap_INATNetwork_addPortForwardRule'
    root[(INATNetwork_addPortForwardRuleRequestMsg.typecode.nspname,INATNetwork_addPortForwardRuleRequestMsg.typecode.pname)] = 'soap_INATNetwork_addPortForwardRule'

    def soap_INATNetwork_removePortForwardRule(self, ps, **kw):
        request = ps.Parse(INATNetwork_removePortForwardRuleRequestMsg.typecode)
        return request,INATNetwork_removePortForwardRuleResultMsg()

    soapAction[''] = 'soap_INATNetwork_removePortForwardRule'
    root[(INATNetwork_removePortForwardRuleRequestMsg.typecode.nspname,INATNetwork_removePortForwardRuleRequestMsg.typecode.pname)] = 'soap_INATNetwork_removePortForwardRule'

    def soap_INATNetwork_start(self, ps, **kw):
        request = ps.Parse(INATNetwork_startRequestMsg.typecode)
        return request,INATNetwork_startResultMsg()

    soapAction[''] = 'soap_INATNetwork_start'
    root[(INATNetwork_startRequestMsg.typecode.nspname,INATNetwork_startRequestMsg.typecode.pname)] = 'soap_INATNetwork_start'

    def soap_INATNetwork_stop(self, ps, **kw):
        request = ps.Parse(INATNetwork_stopRequestMsg.typecode)
        return request,INATNetwork_stopResultMsg()

    soapAction[''] = 'soap_INATNetwork_stop'
    root[(INATNetwork_stopRequestMsg.typecode.nspname,INATNetwork_stopRequestMsg.typecode.pname)] = 'soap_INATNetwork_stop'

    def soap_IDHCPServer_getEventSource(self, ps, **kw):
        request = ps.Parse(IDHCPServer_getEventSourceRequestMsg.typecode)
        return request,IDHCPServer_getEventSourceResultMsg()

    soapAction[''] = 'soap_IDHCPServer_getEventSource'
    root[(IDHCPServer_getEventSourceRequestMsg.typecode.nspname,IDHCPServer_getEventSourceRequestMsg.typecode.pname)] = 'soap_IDHCPServer_getEventSource'

    def soap_IDHCPServer_getEnabled(self, ps, **kw):
        request = ps.Parse(IDHCPServer_getEnabledRequestMsg.typecode)
        return request,IDHCPServer_getEnabledResultMsg()

    soapAction[''] = 'soap_IDHCPServer_getEnabled'
    root[(IDHCPServer_getEnabledRequestMsg.typecode.nspname,IDHCPServer_getEnabledRequestMsg.typecode.pname)] = 'soap_IDHCPServer_getEnabled'

    def soap_IDHCPServer_setEnabled(self, ps, **kw):
        request = ps.Parse(IDHCPServer_setEnabledRequestMsg.typecode)
        return request,IDHCPServer_setEnabledResultMsg()

    soapAction[''] = 'soap_IDHCPServer_setEnabled'
    root[(IDHCPServer_setEnabledRequestMsg.typecode.nspname,IDHCPServer_setEnabledRequestMsg.typecode.pname)] = 'soap_IDHCPServer_setEnabled'

    def soap_IDHCPServer_getIPAddress(self, ps, **kw):
        request = ps.Parse(IDHCPServer_getIPAddressRequestMsg.typecode)
        return request,IDHCPServer_getIPAddressResultMsg()

    soapAction[''] = 'soap_IDHCPServer_getIPAddress'
    root[(IDHCPServer_getIPAddressRequestMsg.typecode.nspname,IDHCPServer_getIPAddressRequestMsg.typecode.pname)] = 'soap_IDHCPServer_getIPAddress'

    def soap_IDHCPServer_getNetworkMask(self, ps, **kw):
        request = ps.Parse(IDHCPServer_getNetworkMaskRequestMsg.typecode)
        return request,IDHCPServer_getNetworkMaskResultMsg()

    soapAction[''] = 'soap_IDHCPServer_getNetworkMask'
    root[(IDHCPServer_getNetworkMaskRequestMsg.typecode.nspname,IDHCPServer_getNetworkMaskRequestMsg.typecode.pname)] = 'soap_IDHCPServer_getNetworkMask'

    def soap_IDHCPServer_getNetworkName(self, ps, **kw):
        request = ps.Parse(IDHCPServer_getNetworkNameRequestMsg.typecode)
        return request,IDHCPServer_getNetworkNameResultMsg()

    soapAction[''] = 'soap_IDHCPServer_getNetworkName'
    root[(IDHCPServer_getNetworkNameRequestMsg.typecode.nspname,IDHCPServer_getNetworkNameRequestMsg.typecode.pname)] = 'soap_IDHCPServer_getNetworkName'

    def soap_IDHCPServer_getLowerIP(self, ps, **kw):
        request = ps.Parse(IDHCPServer_getLowerIPRequestMsg.typecode)
        return request,IDHCPServer_getLowerIPResultMsg()

    soapAction[''] = 'soap_IDHCPServer_getLowerIP'
    root[(IDHCPServer_getLowerIPRequestMsg.typecode.nspname,IDHCPServer_getLowerIPRequestMsg.typecode.pname)] = 'soap_IDHCPServer_getLowerIP'

    def soap_IDHCPServer_getUpperIP(self, ps, **kw):
        request = ps.Parse(IDHCPServer_getUpperIPRequestMsg.typecode)
        return request,IDHCPServer_getUpperIPResultMsg()

    soapAction[''] = 'soap_IDHCPServer_getUpperIP'
    root[(IDHCPServer_getUpperIPRequestMsg.typecode.nspname,IDHCPServer_getUpperIPRequestMsg.typecode.pname)] = 'soap_IDHCPServer_getUpperIP'

    def soap_IDHCPServer_getGlobalOptions(self, ps, **kw):
        request = ps.Parse(IDHCPServer_getGlobalOptionsRequestMsg.typecode)
        return request,IDHCPServer_getGlobalOptionsResultMsg()

    soapAction[''] = 'soap_IDHCPServer_getGlobalOptions'
    root[(IDHCPServer_getGlobalOptionsRequestMsg.typecode.nspname,IDHCPServer_getGlobalOptionsRequestMsg.typecode.pname)] = 'soap_IDHCPServer_getGlobalOptions'

    def soap_IDHCPServer_getVmConfigs(self, ps, **kw):
        request = ps.Parse(IDHCPServer_getVmConfigsRequestMsg.typecode)
        return request,IDHCPServer_getVmConfigsResultMsg()

    soapAction[''] = 'soap_IDHCPServer_getVmConfigs'
    root[(IDHCPServer_getVmConfigsRequestMsg.typecode.nspname,IDHCPServer_getVmConfigsRequestMsg.typecode.pname)] = 'soap_IDHCPServer_getVmConfigs'

    def soap_IDHCPServer_addGlobalOption(self, ps, **kw):
        request = ps.Parse(IDHCPServer_addGlobalOptionRequestMsg.typecode)
        return request,IDHCPServer_addGlobalOptionResultMsg()

    soapAction[''] = 'soap_IDHCPServer_addGlobalOption'
    root[(IDHCPServer_addGlobalOptionRequestMsg.typecode.nspname,IDHCPServer_addGlobalOptionRequestMsg.typecode.pname)] = 'soap_IDHCPServer_addGlobalOption'

    def soap_IDHCPServer_addVmSlotOption(self, ps, **kw):
        request = ps.Parse(IDHCPServer_addVmSlotOptionRequestMsg.typecode)
        return request,IDHCPServer_addVmSlotOptionResultMsg()

    soapAction[''] = 'soap_IDHCPServer_addVmSlotOption'
    root[(IDHCPServer_addVmSlotOptionRequestMsg.typecode.nspname,IDHCPServer_addVmSlotOptionRequestMsg.typecode.pname)] = 'soap_IDHCPServer_addVmSlotOption'

    def soap_IDHCPServer_removeVmSlotOptions(self, ps, **kw):
        request = ps.Parse(IDHCPServer_removeVmSlotOptionsRequestMsg.typecode)
        return request,IDHCPServer_removeVmSlotOptionsResultMsg()

    soapAction[''] = 'soap_IDHCPServer_removeVmSlotOptions'
    root[(IDHCPServer_removeVmSlotOptionsRequestMsg.typecode.nspname,IDHCPServer_removeVmSlotOptionsRequestMsg.typecode.pname)] = 'soap_IDHCPServer_removeVmSlotOptions'

    def soap_IDHCPServer_getVmSlotOptions(self, ps, **kw):
        request = ps.Parse(IDHCPServer_getVmSlotOptionsRequestMsg.typecode)
        return request,IDHCPServer_getVmSlotOptionsResultMsg()

    soapAction[''] = 'soap_IDHCPServer_getVmSlotOptions'
    root[(IDHCPServer_getVmSlotOptionsRequestMsg.typecode.nspname,IDHCPServer_getVmSlotOptionsRequestMsg.typecode.pname)] = 'soap_IDHCPServer_getVmSlotOptions'

    def soap_IDHCPServer_getMacOptions(self, ps, **kw):
        request = ps.Parse(IDHCPServer_getMacOptionsRequestMsg.typecode)
        return request,IDHCPServer_getMacOptionsResultMsg()

    soapAction[''] = 'soap_IDHCPServer_getMacOptions'
    root[(IDHCPServer_getMacOptionsRequestMsg.typecode.nspname,IDHCPServer_getMacOptionsRequestMsg.typecode.pname)] = 'soap_IDHCPServer_getMacOptions'

    def soap_IDHCPServer_setConfiguration(self, ps, **kw):
        request = ps.Parse(IDHCPServer_setConfigurationRequestMsg.typecode)
        return request,IDHCPServer_setConfigurationResultMsg()

    soapAction[''] = 'soap_IDHCPServer_setConfiguration'
    root[(IDHCPServer_setConfigurationRequestMsg.typecode.nspname,IDHCPServer_setConfigurationRequestMsg.typecode.pname)] = 'soap_IDHCPServer_setConfiguration'

    def soap_IDHCPServer_start(self, ps, **kw):
        request = ps.Parse(IDHCPServer_startRequestMsg.typecode)
        return request,IDHCPServer_startResultMsg()

    soapAction[''] = 'soap_IDHCPServer_start'
    root[(IDHCPServer_startRequestMsg.typecode.nspname,IDHCPServer_startRequestMsg.typecode.pname)] = 'soap_IDHCPServer_start'

    def soap_IDHCPServer_stop(self, ps, **kw):
        request = ps.Parse(IDHCPServer_stopRequestMsg.typecode)
        return request,IDHCPServer_stopResultMsg()

    soapAction[''] = 'soap_IDHCPServer_stop'
    root[(IDHCPServer_stopRequestMsg.typecode.nspname,IDHCPServer_stopRequestMsg.typecode.pname)] = 'soap_IDHCPServer_stop'

    def soap_IVirtualBox_getVersion(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getVersionRequestMsg.typecode)
        return request,IVirtualBox_getVersionResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getVersion'
    root[(IVirtualBox_getVersionRequestMsg.typecode.nspname,IVirtualBox_getVersionRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getVersion'

    def soap_IVirtualBox_getVersionNormalized(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getVersionNormalizedRequestMsg.typecode)
        return request,IVirtualBox_getVersionNormalizedResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getVersionNormalized'
    root[(IVirtualBox_getVersionNormalizedRequestMsg.typecode.nspname,IVirtualBox_getVersionNormalizedRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getVersionNormalized'

    def soap_IVirtualBox_getRevision(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getRevisionRequestMsg.typecode)
        return request,IVirtualBox_getRevisionResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getRevision'
    root[(IVirtualBox_getRevisionRequestMsg.typecode.nspname,IVirtualBox_getRevisionRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getRevision'

    def soap_IVirtualBox_getPackageType(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getPackageTypeRequestMsg.typecode)
        return request,IVirtualBox_getPackageTypeResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getPackageType'
    root[(IVirtualBox_getPackageTypeRequestMsg.typecode.nspname,IVirtualBox_getPackageTypeRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getPackageType'

    def soap_IVirtualBox_getAPIVersion(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getAPIVersionRequestMsg.typecode)
        return request,IVirtualBox_getAPIVersionResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getAPIVersion'
    root[(IVirtualBox_getAPIVersionRequestMsg.typecode.nspname,IVirtualBox_getAPIVersionRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getAPIVersion'

    def soap_IVirtualBox_getAPIRevision(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getAPIRevisionRequestMsg.typecode)
        return request,IVirtualBox_getAPIRevisionResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getAPIRevision'
    root[(IVirtualBox_getAPIRevisionRequestMsg.typecode.nspname,IVirtualBox_getAPIRevisionRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getAPIRevision'

    def soap_IVirtualBox_getHomeFolder(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getHomeFolderRequestMsg.typecode)
        return request,IVirtualBox_getHomeFolderResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getHomeFolder'
    root[(IVirtualBox_getHomeFolderRequestMsg.typecode.nspname,IVirtualBox_getHomeFolderRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getHomeFolder'

    def soap_IVirtualBox_getSettingsFilePath(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getSettingsFilePathRequestMsg.typecode)
        return request,IVirtualBox_getSettingsFilePathResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getSettingsFilePath'
    root[(IVirtualBox_getSettingsFilePathRequestMsg.typecode.nspname,IVirtualBox_getSettingsFilePathRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getSettingsFilePath'

    def soap_IVirtualBox_getHost(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getHostRequestMsg.typecode)
        return request,IVirtualBox_getHostResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getHost'
    root[(IVirtualBox_getHostRequestMsg.typecode.nspname,IVirtualBox_getHostRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getHost'

    def soap_IVirtualBox_getSystemProperties(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getSystemPropertiesRequestMsg.typecode)
        return request,IVirtualBox_getSystemPropertiesResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getSystemProperties'
    root[(IVirtualBox_getSystemPropertiesRequestMsg.typecode.nspname,IVirtualBox_getSystemPropertiesRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getSystemProperties'

    def soap_IVirtualBox_getMachines(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getMachinesRequestMsg.typecode)
        return request,IVirtualBox_getMachinesResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getMachines'
    root[(IVirtualBox_getMachinesRequestMsg.typecode.nspname,IVirtualBox_getMachinesRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getMachines'

    def soap_IVirtualBox_getMachineGroups(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getMachineGroupsRequestMsg.typecode)
        return request,IVirtualBox_getMachineGroupsResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getMachineGroups'
    root[(IVirtualBox_getMachineGroupsRequestMsg.typecode.nspname,IVirtualBox_getMachineGroupsRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getMachineGroups'

    def soap_IVirtualBox_getHardDisks(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getHardDisksRequestMsg.typecode)
        return request,IVirtualBox_getHardDisksResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getHardDisks'
    root[(IVirtualBox_getHardDisksRequestMsg.typecode.nspname,IVirtualBox_getHardDisksRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getHardDisks'

    def soap_IVirtualBox_getDVDImages(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getDVDImagesRequestMsg.typecode)
        return request,IVirtualBox_getDVDImagesResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getDVDImages'
    root[(IVirtualBox_getDVDImagesRequestMsg.typecode.nspname,IVirtualBox_getDVDImagesRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getDVDImages'

    def soap_IVirtualBox_getFloppyImages(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getFloppyImagesRequestMsg.typecode)
        return request,IVirtualBox_getFloppyImagesResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getFloppyImages'
    root[(IVirtualBox_getFloppyImagesRequestMsg.typecode.nspname,IVirtualBox_getFloppyImagesRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getFloppyImages'

    def soap_IVirtualBox_getProgressOperations(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getProgressOperationsRequestMsg.typecode)
        return request,IVirtualBox_getProgressOperationsResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getProgressOperations'
    root[(IVirtualBox_getProgressOperationsRequestMsg.typecode.nspname,IVirtualBox_getProgressOperationsRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getProgressOperations'

    def soap_IVirtualBox_getGuestOSTypes(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getGuestOSTypesRequestMsg.typecode)
        return request,IVirtualBox_getGuestOSTypesResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getGuestOSTypes'
    root[(IVirtualBox_getGuestOSTypesRequestMsg.typecode.nspname,IVirtualBox_getGuestOSTypesRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getGuestOSTypes'

    def soap_IVirtualBox_getSharedFolders(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getSharedFoldersRequestMsg.typecode)
        return request,IVirtualBox_getSharedFoldersResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getSharedFolders'
    root[(IVirtualBox_getSharedFoldersRequestMsg.typecode.nspname,IVirtualBox_getSharedFoldersRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getSharedFolders'

    def soap_IVirtualBox_getPerformanceCollector(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getPerformanceCollectorRequestMsg.typecode)
        return request,IVirtualBox_getPerformanceCollectorResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getPerformanceCollector'
    root[(IVirtualBox_getPerformanceCollectorRequestMsg.typecode.nspname,IVirtualBox_getPerformanceCollectorRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getPerformanceCollector'

    def soap_IVirtualBox_getDHCPServers(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getDHCPServersRequestMsg.typecode)
        return request,IVirtualBox_getDHCPServersResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getDHCPServers'
    root[(IVirtualBox_getDHCPServersRequestMsg.typecode.nspname,IVirtualBox_getDHCPServersRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getDHCPServers'

    def soap_IVirtualBox_getNATNetworks(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getNATNetworksRequestMsg.typecode)
        return request,IVirtualBox_getNATNetworksResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getNATNetworks'
    root[(IVirtualBox_getNATNetworksRequestMsg.typecode.nspname,IVirtualBox_getNATNetworksRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getNATNetworks'

    def soap_IVirtualBox_getEventSource(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getEventSourceRequestMsg.typecode)
        return request,IVirtualBox_getEventSourceResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getEventSource'
    root[(IVirtualBox_getEventSourceRequestMsg.typecode.nspname,IVirtualBox_getEventSourceRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getEventSource'

    def soap_IVirtualBox_getInternalNetworks(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getInternalNetworksRequestMsg.typecode)
        return request,IVirtualBox_getInternalNetworksResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getInternalNetworks'
    root[(IVirtualBox_getInternalNetworksRequestMsg.typecode.nspname,IVirtualBox_getInternalNetworksRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getInternalNetworks'

    def soap_IVirtualBox_getGenericNetworkDrivers(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getGenericNetworkDriversRequestMsg.typecode)
        return request,IVirtualBox_getGenericNetworkDriversResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getGenericNetworkDrivers'
    root[(IVirtualBox_getGenericNetworkDriversRequestMsg.typecode.nspname,IVirtualBox_getGenericNetworkDriversRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getGenericNetworkDrivers'

    def soap_IVirtualBox_composeMachineFilename(self, ps, **kw):
        request = ps.Parse(IVirtualBox_composeMachineFilenameRequestMsg.typecode)
        return request,IVirtualBox_composeMachineFilenameResultMsg()

    soapAction[''] = 'soap_IVirtualBox_composeMachineFilename'
    root[(IVirtualBox_composeMachineFilenameRequestMsg.typecode.nspname,IVirtualBox_composeMachineFilenameRequestMsg.typecode.pname)] = 'soap_IVirtualBox_composeMachineFilename'

    def soap_IVirtualBox_createMachine(self, ps, **kw):
        request = ps.Parse(IVirtualBox_createMachineRequestMsg.typecode)
        return request,IVirtualBox_createMachineResultMsg()

    soapAction[''] = 'soap_IVirtualBox_createMachine'
    root[(IVirtualBox_createMachineRequestMsg.typecode.nspname,IVirtualBox_createMachineRequestMsg.typecode.pname)] = 'soap_IVirtualBox_createMachine'

    def soap_IVirtualBox_openMachine(self, ps, **kw):
        request = ps.Parse(IVirtualBox_openMachineRequestMsg.typecode)
        return request,IVirtualBox_openMachineResultMsg()

    soapAction[''] = 'soap_IVirtualBox_openMachine'
    root[(IVirtualBox_openMachineRequestMsg.typecode.nspname,IVirtualBox_openMachineRequestMsg.typecode.pname)] = 'soap_IVirtualBox_openMachine'

    def soap_IVirtualBox_registerMachine(self, ps, **kw):
        request = ps.Parse(IVirtualBox_registerMachineRequestMsg.typecode)
        return request,IVirtualBox_registerMachineResultMsg()

    soapAction[''] = 'soap_IVirtualBox_registerMachine'
    root[(IVirtualBox_registerMachineRequestMsg.typecode.nspname,IVirtualBox_registerMachineRequestMsg.typecode.pname)] = 'soap_IVirtualBox_registerMachine'

    def soap_IVirtualBox_findMachine(self, ps, **kw):
        request = ps.Parse(IVirtualBox_findMachineRequestMsg.typecode)
        return request,IVirtualBox_findMachineResultMsg()

    soapAction[''] = 'soap_IVirtualBox_findMachine'
    root[(IVirtualBox_findMachineRequestMsg.typecode.nspname,IVirtualBox_findMachineRequestMsg.typecode.pname)] = 'soap_IVirtualBox_findMachine'

    def soap_IVirtualBox_getMachinesByGroups(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getMachinesByGroupsRequestMsg.typecode)
        return request,IVirtualBox_getMachinesByGroupsResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getMachinesByGroups'
    root[(IVirtualBox_getMachinesByGroupsRequestMsg.typecode.nspname,IVirtualBox_getMachinesByGroupsRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getMachinesByGroups'

    def soap_IVirtualBox_getMachineStates(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getMachineStatesRequestMsg.typecode)
        return request,IVirtualBox_getMachineStatesResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getMachineStates'
    root[(IVirtualBox_getMachineStatesRequestMsg.typecode.nspname,IVirtualBox_getMachineStatesRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getMachineStates'

    def soap_IVirtualBox_createAppliance(self, ps, **kw):
        request = ps.Parse(IVirtualBox_createApplianceRequestMsg.typecode)
        return request,IVirtualBox_createApplianceResultMsg()

    soapAction[''] = 'soap_IVirtualBox_createAppliance'
    root[(IVirtualBox_createApplianceRequestMsg.typecode.nspname,IVirtualBox_createApplianceRequestMsg.typecode.pname)] = 'soap_IVirtualBox_createAppliance'

    def soap_IVirtualBox_createMedium(self, ps, **kw):
        request = ps.Parse(IVirtualBox_createMediumRequestMsg.typecode)
        return request,IVirtualBox_createMediumResultMsg()

    soapAction[''] = 'soap_IVirtualBox_createMedium'
    root[(IVirtualBox_createMediumRequestMsg.typecode.nspname,IVirtualBox_createMediumRequestMsg.typecode.pname)] = 'soap_IVirtualBox_createMedium'

    def soap_IVirtualBox_openMedium(self, ps, **kw):
        request = ps.Parse(IVirtualBox_openMediumRequestMsg.typecode)
        return request,IVirtualBox_openMediumResultMsg()

    soapAction[''] = 'soap_IVirtualBox_openMedium'
    root[(IVirtualBox_openMediumRequestMsg.typecode.nspname,IVirtualBox_openMediumRequestMsg.typecode.pname)] = 'soap_IVirtualBox_openMedium'

    def soap_IVirtualBox_getGuestOSType(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getGuestOSTypeRequestMsg.typecode)
        return request,IVirtualBox_getGuestOSTypeResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getGuestOSType'
    root[(IVirtualBox_getGuestOSTypeRequestMsg.typecode.nspname,IVirtualBox_getGuestOSTypeRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getGuestOSType'

    def soap_IVirtualBox_createSharedFolder(self, ps, **kw):
        request = ps.Parse(IVirtualBox_createSharedFolderRequestMsg.typecode)
        return request,IVirtualBox_createSharedFolderResultMsg()

    soapAction[''] = 'soap_IVirtualBox_createSharedFolder'
    root[(IVirtualBox_createSharedFolderRequestMsg.typecode.nspname,IVirtualBox_createSharedFolderRequestMsg.typecode.pname)] = 'soap_IVirtualBox_createSharedFolder'

    def soap_IVirtualBox_removeSharedFolder(self, ps, **kw):
        request = ps.Parse(IVirtualBox_removeSharedFolderRequestMsg.typecode)
        return request,IVirtualBox_removeSharedFolderResultMsg()

    soapAction[''] = 'soap_IVirtualBox_removeSharedFolder'
    root[(IVirtualBox_removeSharedFolderRequestMsg.typecode.nspname,IVirtualBox_removeSharedFolderRequestMsg.typecode.pname)] = 'soap_IVirtualBox_removeSharedFolder'

    def soap_IVirtualBox_getExtraDataKeys(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getExtraDataKeysRequestMsg.typecode)
        return request,IVirtualBox_getExtraDataKeysResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getExtraDataKeys'
    root[(IVirtualBox_getExtraDataKeysRequestMsg.typecode.nspname,IVirtualBox_getExtraDataKeysRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getExtraDataKeys'

    def soap_IVirtualBox_getExtraData(self, ps, **kw):
        request = ps.Parse(IVirtualBox_getExtraDataRequestMsg.typecode)
        return request,IVirtualBox_getExtraDataResultMsg()

    soapAction[''] = 'soap_IVirtualBox_getExtraData'
    root[(IVirtualBox_getExtraDataRequestMsg.typecode.nspname,IVirtualBox_getExtraDataRequestMsg.typecode.pname)] = 'soap_IVirtualBox_getExtraData'

    def soap_IVirtualBox_setExtraData(self, ps, **kw):
        request = ps.Parse(IVirtualBox_setExtraDataRequestMsg.typecode)
        return request,IVirtualBox_setExtraDataResultMsg()

    soapAction[''] = 'soap_IVirtualBox_setExtraData'
    root[(IVirtualBox_setExtraDataRequestMsg.typecode.nspname,IVirtualBox_setExtraDataRequestMsg.typecode.pname)] = 'soap_IVirtualBox_setExtraData'

    def soap_IVirtualBox_setSettingsSecret(self, ps, **kw):
        request = ps.Parse(IVirtualBox_setSettingsSecretRequestMsg.typecode)
        return request,IVirtualBox_setSettingsSecretResultMsg()

    soapAction[''] = 'soap_IVirtualBox_setSettingsSecret'
    root[(IVirtualBox_setSettingsSecretRequestMsg.typecode.nspname,IVirtualBox_setSettingsSecretRequestMsg.typecode.pname)] = 'soap_IVirtualBox_setSettingsSecret'

    def soap_IVirtualBox_createDHCPServer(self, ps, **kw):
        request = ps.Parse(IVirtualBox_createDHCPServerRequestMsg.typecode)
        return request,IVirtualBox_createDHCPServerResultMsg()

    soapAction[''] = 'soap_IVirtualBox_createDHCPServer'
    root[(IVirtualBox_createDHCPServerRequestMsg.typecode.nspname,IVirtualBox_createDHCPServerRequestMsg.typecode.pname)] = 'soap_IVirtualBox_createDHCPServer'

    def soap_IVirtualBox_findDHCPServerByNetworkName(self, ps, **kw):
        request = ps.Parse(IVirtualBox_findDHCPServerByNetworkNameRequestMsg.typecode)
        return request,IVirtualBox_findDHCPServerByNetworkNameResultMsg()

    soapAction[''] = 'soap_IVirtualBox_findDHCPServerByNetworkName'
    root[(IVirtualBox_findDHCPServerByNetworkNameRequestMsg.typecode.nspname,IVirtualBox_findDHCPServerByNetworkNameRequestMsg.typecode.pname)] = 'soap_IVirtualBox_findDHCPServerByNetworkName'

    def soap_IVirtualBox_removeDHCPServer(self, ps, **kw):
        request = ps.Parse(IVirtualBox_removeDHCPServerRequestMsg.typecode)
        return request,IVirtualBox_removeDHCPServerResultMsg()

    soapAction[''] = 'soap_IVirtualBox_removeDHCPServer'
    root[(IVirtualBox_removeDHCPServerRequestMsg.typecode.nspname,IVirtualBox_removeDHCPServerRequestMsg.typecode.pname)] = 'soap_IVirtualBox_removeDHCPServer'

    def soap_IVirtualBox_createNATNetwork(self, ps, **kw):
        request = ps.Parse(IVirtualBox_createNATNetworkRequestMsg.typecode)
        return request,IVirtualBox_createNATNetworkResultMsg()

    soapAction[''] = 'soap_IVirtualBox_createNATNetwork'
    root[(IVirtualBox_createNATNetworkRequestMsg.typecode.nspname,IVirtualBox_createNATNetworkRequestMsg.typecode.pname)] = 'soap_IVirtualBox_createNATNetwork'

    def soap_IVirtualBox_findNATNetworkByName(self, ps, **kw):
        request = ps.Parse(IVirtualBox_findNATNetworkByNameRequestMsg.typecode)
        return request,IVirtualBox_findNATNetworkByNameResultMsg()

    soapAction[''] = 'soap_IVirtualBox_findNATNetworkByName'
    root[(IVirtualBox_findNATNetworkByNameRequestMsg.typecode.nspname,IVirtualBox_findNATNetworkByNameRequestMsg.typecode.pname)] = 'soap_IVirtualBox_findNATNetworkByName'

    def soap_IVirtualBox_removeNATNetwork(self, ps, **kw):
        request = ps.Parse(IVirtualBox_removeNATNetworkRequestMsg.typecode)
        return request,IVirtualBox_removeNATNetworkResultMsg()

    soapAction[''] = 'soap_IVirtualBox_removeNATNetwork'
    root[(IVirtualBox_removeNATNetworkRequestMsg.typecode.nspname,IVirtualBox_removeNATNetworkRequestMsg.typecode.pname)] = 'soap_IVirtualBox_removeNATNetwork'

    def soap_IVirtualBox_checkFirmwarePresent(self, ps, **kw):
        request = ps.Parse(IVirtualBox_checkFirmwarePresentRequestMsg.typecode)
        return request,IVirtualBox_checkFirmwarePresentResultMsg()

    soapAction[''] = 'soap_IVirtualBox_checkFirmwarePresent'
    root[(IVirtualBox_checkFirmwarePresentRequestMsg.typecode.nspname,IVirtualBox_checkFirmwarePresentRequestMsg.typecode.pname)] = 'soap_IVirtualBox_checkFirmwarePresent'

    def soap_IVFSExplorer_getPath(self, ps, **kw):
        request = ps.Parse(IVFSExplorer_getPathRequestMsg.typecode)
        return request,IVFSExplorer_getPathResultMsg()

    soapAction[''] = 'soap_IVFSExplorer_getPath'
    root[(IVFSExplorer_getPathRequestMsg.typecode.nspname,IVFSExplorer_getPathRequestMsg.typecode.pname)] = 'soap_IVFSExplorer_getPath'

    def soap_IVFSExplorer_getType(self, ps, **kw):
        request = ps.Parse(IVFSExplorer_getTypeRequestMsg.typecode)
        return request,IVFSExplorer_getTypeResultMsg()

    soapAction[''] = 'soap_IVFSExplorer_getType'
    root[(IVFSExplorer_getTypeRequestMsg.typecode.nspname,IVFSExplorer_getTypeRequestMsg.typecode.pname)] = 'soap_IVFSExplorer_getType'

    def soap_IVFSExplorer_update(self, ps, **kw):
        request = ps.Parse(IVFSExplorer_updateRequestMsg.typecode)
        return request,IVFSExplorer_updateResultMsg()

    soapAction[''] = 'soap_IVFSExplorer_update'
    root[(IVFSExplorer_updateRequestMsg.typecode.nspname,IVFSExplorer_updateRequestMsg.typecode.pname)] = 'soap_IVFSExplorer_update'

    def soap_IVFSExplorer_cd(self, ps, **kw):
        request = ps.Parse(IVFSExplorer_cdRequestMsg.typecode)
        return request,IVFSExplorer_cdResultMsg()

    soapAction[''] = 'soap_IVFSExplorer_cd'
    root[(IVFSExplorer_cdRequestMsg.typecode.nspname,IVFSExplorer_cdRequestMsg.typecode.pname)] = 'soap_IVFSExplorer_cd'

    def soap_IVFSExplorer_cdUp(self, ps, **kw):
        request = ps.Parse(IVFSExplorer_cdUpRequestMsg.typecode)
        return request,IVFSExplorer_cdUpResultMsg()

    soapAction[''] = 'soap_IVFSExplorer_cdUp'
    root[(IVFSExplorer_cdUpRequestMsg.typecode.nspname,IVFSExplorer_cdUpRequestMsg.typecode.pname)] = 'soap_IVFSExplorer_cdUp'

    def soap_IVFSExplorer_entryList(self, ps, **kw):
        request = ps.Parse(IVFSExplorer_entryListRequestMsg.typecode)
        return request,IVFSExplorer_entryListResultMsg()

    soapAction[''] = 'soap_IVFSExplorer_entryList'
    root[(IVFSExplorer_entryListRequestMsg.typecode.nspname,IVFSExplorer_entryListRequestMsg.typecode.pname)] = 'soap_IVFSExplorer_entryList'

    def soap_IVFSExplorer_exists(self, ps, **kw):
        request = ps.Parse(IVFSExplorer_existsRequestMsg.typecode)
        return request,IVFSExplorer_existsResultMsg()

    soapAction[''] = 'soap_IVFSExplorer_exists'
    root[(IVFSExplorer_existsRequestMsg.typecode.nspname,IVFSExplorer_existsRequestMsg.typecode.pname)] = 'soap_IVFSExplorer_exists'

    def soap_IVFSExplorer_remove(self, ps, **kw):
        request = ps.Parse(IVFSExplorer_removeRequestMsg.typecode)
        return request,IVFSExplorer_removeResultMsg()

    soapAction[''] = 'soap_IVFSExplorer_remove'
    root[(IVFSExplorer_removeRequestMsg.typecode.nspname,IVFSExplorer_removeRequestMsg.typecode.pname)] = 'soap_IVFSExplorer_remove'

    def soap_IAppliance_getPath(self, ps, **kw):
        request = ps.Parse(IAppliance_getPathRequestMsg.typecode)
        return request,IAppliance_getPathResultMsg()

    soapAction[''] = 'soap_IAppliance_getPath'
    root[(IAppliance_getPathRequestMsg.typecode.nspname,IAppliance_getPathRequestMsg.typecode.pname)] = 'soap_IAppliance_getPath'

    def soap_IAppliance_getDisks(self, ps, **kw):
        request = ps.Parse(IAppliance_getDisksRequestMsg.typecode)
        return request,IAppliance_getDisksResultMsg()

    soapAction[''] = 'soap_IAppliance_getDisks'
    root[(IAppliance_getDisksRequestMsg.typecode.nspname,IAppliance_getDisksRequestMsg.typecode.pname)] = 'soap_IAppliance_getDisks'

    def soap_IAppliance_getVirtualSystemDescriptions(self, ps, **kw):
        request = ps.Parse(IAppliance_getVirtualSystemDescriptionsRequestMsg.typecode)
        return request,IAppliance_getVirtualSystemDescriptionsResultMsg()

    soapAction[''] = 'soap_IAppliance_getVirtualSystemDescriptions'
    root[(IAppliance_getVirtualSystemDescriptionsRequestMsg.typecode.nspname,IAppliance_getVirtualSystemDescriptionsRequestMsg.typecode.pname)] = 'soap_IAppliance_getVirtualSystemDescriptions'

    def soap_IAppliance_getMachines(self, ps, **kw):
        request = ps.Parse(IAppliance_getMachinesRequestMsg.typecode)
        return request,IAppliance_getMachinesResultMsg()

    soapAction[''] = 'soap_IAppliance_getMachines'
    root[(IAppliance_getMachinesRequestMsg.typecode.nspname,IAppliance_getMachinesRequestMsg.typecode.pname)] = 'soap_IAppliance_getMachines'

    def soap_IAppliance_read(self, ps, **kw):
        request = ps.Parse(IAppliance_readRequestMsg.typecode)
        return request,IAppliance_readResultMsg()

    soapAction[''] = 'soap_IAppliance_read'
    root[(IAppliance_readRequestMsg.typecode.nspname,IAppliance_readRequestMsg.typecode.pname)] = 'soap_IAppliance_read'

    def soap_IAppliance_interpret(self, ps, **kw):
        request = ps.Parse(IAppliance_interpretRequestMsg.typecode)
        return request,IAppliance_interpretResultMsg()

    soapAction[''] = 'soap_IAppliance_interpret'
    root[(IAppliance_interpretRequestMsg.typecode.nspname,IAppliance_interpretRequestMsg.typecode.pname)] = 'soap_IAppliance_interpret'

    def soap_IAppliance_importMachines(self, ps, **kw):
        request = ps.Parse(IAppliance_importMachinesRequestMsg.typecode)
        return request,IAppliance_importMachinesResultMsg()

    soapAction[''] = 'soap_IAppliance_importMachines'
    root[(IAppliance_importMachinesRequestMsg.typecode.nspname,IAppliance_importMachinesRequestMsg.typecode.pname)] = 'soap_IAppliance_importMachines'

    def soap_IAppliance_createVFSExplorer(self, ps, **kw):
        request = ps.Parse(IAppliance_createVFSExplorerRequestMsg.typecode)
        return request,IAppliance_createVFSExplorerResultMsg()

    soapAction[''] = 'soap_IAppliance_createVFSExplorer'
    root[(IAppliance_createVFSExplorerRequestMsg.typecode.nspname,IAppliance_createVFSExplorerRequestMsg.typecode.pname)] = 'soap_IAppliance_createVFSExplorer'

    def soap_IAppliance_write(self, ps, **kw):
        request = ps.Parse(IAppliance_writeRequestMsg.typecode)
        return request,IAppliance_writeResultMsg()

    soapAction[''] = 'soap_IAppliance_write'
    root[(IAppliance_writeRequestMsg.typecode.nspname,IAppliance_writeRequestMsg.typecode.pname)] = 'soap_IAppliance_write'

    def soap_IAppliance_getWarnings(self, ps, **kw):
        request = ps.Parse(IAppliance_getWarningsRequestMsg.typecode)
        return request,IAppliance_getWarningsResultMsg()

    soapAction[''] = 'soap_IAppliance_getWarnings'
    root[(IAppliance_getWarningsRequestMsg.typecode.nspname,IAppliance_getWarningsRequestMsg.typecode.pname)] = 'soap_IAppliance_getWarnings'

    def soap_IAppliance_getPasswordIds(self, ps, **kw):
        request = ps.Parse(IAppliance_getPasswordIdsRequestMsg.typecode)
        return request,IAppliance_getPasswordIdsResultMsg()

    soapAction[''] = 'soap_IAppliance_getPasswordIds'
    root[(IAppliance_getPasswordIdsRequestMsg.typecode.nspname,IAppliance_getPasswordIdsRequestMsg.typecode.pname)] = 'soap_IAppliance_getPasswordIds'

    def soap_IAppliance_getMediumIdsForPasswordId(self, ps, **kw):
        request = ps.Parse(IAppliance_getMediumIdsForPasswordIdRequestMsg.typecode)
        return request,IAppliance_getMediumIdsForPasswordIdResultMsg()

    soapAction[''] = 'soap_IAppliance_getMediumIdsForPasswordId'
    root[(IAppliance_getMediumIdsForPasswordIdRequestMsg.typecode.nspname,IAppliance_getMediumIdsForPasswordIdRequestMsg.typecode.pname)] = 'soap_IAppliance_getMediumIdsForPasswordId'

    def soap_IAppliance_addPasswords(self, ps, **kw):
        request = ps.Parse(IAppliance_addPasswordsRequestMsg.typecode)
        return request,IAppliance_addPasswordsResultMsg()

    soapAction[''] = 'soap_IAppliance_addPasswords'
    root[(IAppliance_addPasswordsRequestMsg.typecode.nspname,IAppliance_addPasswordsRequestMsg.typecode.pname)] = 'soap_IAppliance_addPasswords'

    def soap_IVirtualSystemDescription_getCount(self, ps, **kw):
        request = ps.Parse(IVirtualSystemDescription_getCountRequestMsg.typecode)
        return request,IVirtualSystemDescription_getCountResultMsg()

    soapAction[''] = 'soap_IVirtualSystemDescription_getCount'
    root[(IVirtualSystemDescription_getCountRequestMsg.typecode.nspname,IVirtualSystemDescription_getCountRequestMsg.typecode.pname)] = 'soap_IVirtualSystemDescription_getCount'

    def soap_IVirtualSystemDescription_getDescription(self, ps, **kw):
        request = ps.Parse(IVirtualSystemDescription_getDescriptionRequestMsg.typecode)
        return request,IVirtualSystemDescription_getDescriptionResultMsg()

    soapAction[''] = 'soap_IVirtualSystemDescription_getDescription'
    root[(IVirtualSystemDescription_getDescriptionRequestMsg.typecode.nspname,IVirtualSystemDescription_getDescriptionRequestMsg.typecode.pname)] = 'soap_IVirtualSystemDescription_getDescription'

    def soap_IVirtualSystemDescription_getDescriptionByType(self, ps, **kw):
        request = ps.Parse(IVirtualSystemDescription_getDescriptionByTypeRequestMsg.typecode)
        return request,IVirtualSystemDescription_getDescriptionByTypeResultMsg()

    soapAction[''] = 'soap_IVirtualSystemDescription_getDescriptionByType'
    root[(IVirtualSystemDescription_getDescriptionByTypeRequestMsg.typecode.nspname,IVirtualSystemDescription_getDescriptionByTypeRequestMsg.typecode.pname)] = 'soap_IVirtualSystemDescription_getDescriptionByType'

    def soap_IVirtualSystemDescription_getValuesByType(self, ps, **kw):
        request = ps.Parse(IVirtualSystemDescription_getValuesByTypeRequestMsg.typecode)
        return request,IVirtualSystemDescription_getValuesByTypeResultMsg()

    soapAction[''] = 'soap_IVirtualSystemDescription_getValuesByType'
    root[(IVirtualSystemDescription_getValuesByTypeRequestMsg.typecode.nspname,IVirtualSystemDescription_getValuesByTypeRequestMsg.typecode.pname)] = 'soap_IVirtualSystemDescription_getValuesByType'

    def soap_IVirtualSystemDescription_setFinalValues(self, ps, **kw):
        request = ps.Parse(IVirtualSystemDescription_setFinalValuesRequestMsg.typecode)
        return request,IVirtualSystemDescription_setFinalValuesResultMsg()

    soapAction[''] = 'soap_IVirtualSystemDescription_setFinalValues'
    root[(IVirtualSystemDescription_setFinalValuesRequestMsg.typecode.nspname,IVirtualSystemDescription_setFinalValuesRequestMsg.typecode.pname)] = 'soap_IVirtualSystemDescription_setFinalValues'

    def soap_IVirtualSystemDescription_addDescription(self, ps, **kw):
        request = ps.Parse(IVirtualSystemDescription_addDescriptionRequestMsg.typecode)
        return request,IVirtualSystemDescription_addDescriptionResultMsg()

    soapAction[''] = 'soap_IVirtualSystemDescription_addDescription'
    root[(IVirtualSystemDescription_addDescriptionRequestMsg.typecode.nspname,IVirtualSystemDescription_addDescriptionRequestMsg.typecode.pname)] = 'soap_IVirtualSystemDescription_addDescription'

    def soap_IBIOSSettings_getLogoFadeIn(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_getLogoFadeInRequestMsg.typecode)
        return request,IBIOSSettings_getLogoFadeInResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_getLogoFadeIn'
    root[(IBIOSSettings_getLogoFadeInRequestMsg.typecode.nspname,IBIOSSettings_getLogoFadeInRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_getLogoFadeIn'

    def soap_IBIOSSettings_setLogoFadeIn(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_setLogoFadeInRequestMsg.typecode)
        return request,IBIOSSettings_setLogoFadeInResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_setLogoFadeIn'
    root[(IBIOSSettings_setLogoFadeInRequestMsg.typecode.nspname,IBIOSSettings_setLogoFadeInRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_setLogoFadeIn'

    def soap_IBIOSSettings_getLogoFadeOut(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_getLogoFadeOutRequestMsg.typecode)
        return request,IBIOSSettings_getLogoFadeOutResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_getLogoFadeOut'
    root[(IBIOSSettings_getLogoFadeOutRequestMsg.typecode.nspname,IBIOSSettings_getLogoFadeOutRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_getLogoFadeOut'

    def soap_IBIOSSettings_setLogoFadeOut(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_setLogoFadeOutRequestMsg.typecode)
        return request,IBIOSSettings_setLogoFadeOutResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_setLogoFadeOut'
    root[(IBIOSSettings_setLogoFadeOutRequestMsg.typecode.nspname,IBIOSSettings_setLogoFadeOutRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_setLogoFadeOut'

    def soap_IBIOSSettings_getLogoDisplayTime(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_getLogoDisplayTimeRequestMsg.typecode)
        return request,IBIOSSettings_getLogoDisplayTimeResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_getLogoDisplayTime'
    root[(IBIOSSettings_getLogoDisplayTimeRequestMsg.typecode.nspname,IBIOSSettings_getLogoDisplayTimeRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_getLogoDisplayTime'

    def soap_IBIOSSettings_setLogoDisplayTime(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_setLogoDisplayTimeRequestMsg.typecode)
        return request,IBIOSSettings_setLogoDisplayTimeResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_setLogoDisplayTime'
    root[(IBIOSSettings_setLogoDisplayTimeRequestMsg.typecode.nspname,IBIOSSettings_setLogoDisplayTimeRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_setLogoDisplayTime'

    def soap_IBIOSSettings_getLogoImagePath(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_getLogoImagePathRequestMsg.typecode)
        return request,IBIOSSettings_getLogoImagePathResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_getLogoImagePath'
    root[(IBIOSSettings_getLogoImagePathRequestMsg.typecode.nspname,IBIOSSettings_getLogoImagePathRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_getLogoImagePath'

    def soap_IBIOSSettings_setLogoImagePath(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_setLogoImagePathRequestMsg.typecode)
        return request,IBIOSSettings_setLogoImagePathResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_setLogoImagePath'
    root[(IBIOSSettings_setLogoImagePathRequestMsg.typecode.nspname,IBIOSSettings_setLogoImagePathRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_setLogoImagePath'

    def soap_IBIOSSettings_getBootMenuMode(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_getBootMenuModeRequestMsg.typecode)
        return request,IBIOSSettings_getBootMenuModeResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_getBootMenuMode'
    root[(IBIOSSettings_getBootMenuModeRequestMsg.typecode.nspname,IBIOSSettings_getBootMenuModeRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_getBootMenuMode'

    def soap_IBIOSSettings_setBootMenuMode(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_setBootMenuModeRequestMsg.typecode)
        return request,IBIOSSettings_setBootMenuModeResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_setBootMenuMode'
    root[(IBIOSSettings_setBootMenuModeRequestMsg.typecode.nspname,IBIOSSettings_setBootMenuModeRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_setBootMenuMode'

    def soap_IBIOSSettings_getACPIEnabled(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_getACPIEnabledRequestMsg.typecode)
        return request,IBIOSSettings_getACPIEnabledResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_getACPIEnabled'
    root[(IBIOSSettings_getACPIEnabledRequestMsg.typecode.nspname,IBIOSSettings_getACPIEnabledRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_getACPIEnabled'

    def soap_IBIOSSettings_setACPIEnabled(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_setACPIEnabledRequestMsg.typecode)
        return request,IBIOSSettings_setACPIEnabledResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_setACPIEnabled'
    root[(IBIOSSettings_setACPIEnabledRequestMsg.typecode.nspname,IBIOSSettings_setACPIEnabledRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_setACPIEnabled'

    def soap_IBIOSSettings_getIOAPICEnabled(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_getIOAPICEnabledRequestMsg.typecode)
        return request,IBIOSSettings_getIOAPICEnabledResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_getIOAPICEnabled'
    root[(IBIOSSettings_getIOAPICEnabledRequestMsg.typecode.nspname,IBIOSSettings_getIOAPICEnabledRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_getIOAPICEnabled'

    def soap_IBIOSSettings_setIOAPICEnabled(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_setIOAPICEnabledRequestMsg.typecode)
        return request,IBIOSSettings_setIOAPICEnabledResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_setIOAPICEnabled'
    root[(IBIOSSettings_setIOAPICEnabledRequestMsg.typecode.nspname,IBIOSSettings_setIOAPICEnabledRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_setIOAPICEnabled'

    def soap_IBIOSSettings_getTimeOffset(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_getTimeOffsetRequestMsg.typecode)
        return request,IBIOSSettings_getTimeOffsetResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_getTimeOffset'
    root[(IBIOSSettings_getTimeOffsetRequestMsg.typecode.nspname,IBIOSSettings_getTimeOffsetRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_getTimeOffset'

    def soap_IBIOSSettings_setTimeOffset(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_setTimeOffsetRequestMsg.typecode)
        return request,IBIOSSettings_setTimeOffsetResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_setTimeOffset'
    root[(IBIOSSettings_setTimeOffsetRequestMsg.typecode.nspname,IBIOSSettings_setTimeOffsetRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_setTimeOffset'

    def soap_IBIOSSettings_getPXEDebugEnabled(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_getPXEDebugEnabledRequestMsg.typecode)
        return request,IBIOSSettings_getPXEDebugEnabledResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_getPXEDebugEnabled'
    root[(IBIOSSettings_getPXEDebugEnabledRequestMsg.typecode.nspname,IBIOSSettings_getPXEDebugEnabledRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_getPXEDebugEnabled'

    def soap_IBIOSSettings_setPXEDebugEnabled(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_setPXEDebugEnabledRequestMsg.typecode)
        return request,IBIOSSettings_setPXEDebugEnabledResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_setPXEDebugEnabled'
    root[(IBIOSSettings_setPXEDebugEnabledRequestMsg.typecode.nspname,IBIOSSettings_setPXEDebugEnabledRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_setPXEDebugEnabled'

    def soap_IBIOSSettings_getNonVolatileStorageFile(self, ps, **kw):
        request = ps.Parse(IBIOSSettings_getNonVolatileStorageFileRequestMsg.typecode)
        return request,IBIOSSettings_getNonVolatileStorageFileResultMsg()

    soapAction[''] = 'soap_IBIOSSettings_getNonVolatileStorageFile'
    root[(IBIOSSettings_getNonVolatileStorageFileRequestMsg.typecode.nspname,IBIOSSettings_getNonVolatileStorageFileRequestMsg.typecode.pname)] = 'soap_IBIOSSettings_getNonVolatileStorageFile'

    def soap_IPCIAddress_getBus(self, ps, **kw):
        request = ps.Parse(IPCIAddress_getBusRequestMsg.typecode)
        return request,IPCIAddress_getBusResultMsg()

    soapAction[''] = 'soap_IPCIAddress_getBus'
    root[(IPCIAddress_getBusRequestMsg.typecode.nspname,IPCIAddress_getBusRequestMsg.typecode.pname)] = 'soap_IPCIAddress_getBus'

    def soap_IPCIAddress_setBus(self, ps, **kw):
        request = ps.Parse(IPCIAddress_setBusRequestMsg.typecode)
        return request,IPCIAddress_setBusResultMsg()

    soapAction[''] = 'soap_IPCIAddress_setBus'
    root[(IPCIAddress_setBusRequestMsg.typecode.nspname,IPCIAddress_setBusRequestMsg.typecode.pname)] = 'soap_IPCIAddress_setBus'

    def soap_IPCIAddress_getDevice(self, ps, **kw):
        request = ps.Parse(IPCIAddress_getDeviceRequestMsg.typecode)
        return request,IPCIAddress_getDeviceResultMsg()

    soapAction[''] = 'soap_IPCIAddress_getDevice'
    root[(IPCIAddress_getDeviceRequestMsg.typecode.nspname,IPCIAddress_getDeviceRequestMsg.typecode.pname)] = 'soap_IPCIAddress_getDevice'

    def soap_IPCIAddress_setDevice(self, ps, **kw):
        request = ps.Parse(IPCIAddress_setDeviceRequestMsg.typecode)
        return request,IPCIAddress_setDeviceResultMsg()

    soapAction[''] = 'soap_IPCIAddress_setDevice'
    root[(IPCIAddress_setDeviceRequestMsg.typecode.nspname,IPCIAddress_setDeviceRequestMsg.typecode.pname)] = 'soap_IPCIAddress_setDevice'

    def soap_IPCIAddress_getDevFunction(self, ps, **kw):
        request = ps.Parse(IPCIAddress_getDevFunctionRequestMsg.typecode)
        return request,IPCIAddress_getDevFunctionResultMsg()

    soapAction[''] = 'soap_IPCIAddress_getDevFunction'
    root[(IPCIAddress_getDevFunctionRequestMsg.typecode.nspname,IPCIAddress_getDevFunctionRequestMsg.typecode.pname)] = 'soap_IPCIAddress_getDevFunction'

    def soap_IPCIAddress_setDevFunction(self, ps, **kw):
        request = ps.Parse(IPCIAddress_setDevFunctionRequestMsg.typecode)
        return request,IPCIAddress_setDevFunctionResultMsg()

    soapAction[''] = 'soap_IPCIAddress_setDevFunction'
    root[(IPCIAddress_setDevFunctionRequestMsg.typecode.nspname,IPCIAddress_setDevFunctionRequestMsg.typecode.pname)] = 'soap_IPCIAddress_setDevFunction'

    def soap_IPCIAddress_asLong(self, ps, **kw):
        request = ps.Parse(IPCIAddress_asLongRequestMsg.typecode)
        return request,IPCIAddress_asLongResultMsg()

    soapAction[''] = 'soap_IPCIAddress_asLong'
    root[(IPCIAddress_asLongRequestMsg.typecode.nspname,IPCIAddress_asLongRequestMsg.typecode.pname)] = 'soap_IPCIAddress_asLong'

    def soap_IPCIAddress_fromLong(self, ps, **kw):
        request = ps.Parse(IPCIAddress_fromLongRequestMsg.typecode)
        return request,IPCIAddress_fromLongResultMsg()

    soapAction[''] = 'soap_IPCIAddress_fromLong'
    root[(IPCIAddress_fromLongRequestMsg.typecode.nspname,IPCIAddress_fromLongRequestMsg.typecode.pname)] = 'soap_IPCIAddress_fromLong'

    def soap_IMachine_getParent(self, ps, **kw):
        request = ps.Parse(IMachine_getParentRequestMsg.typecode)
        return request,IMachine_getParentResultMsg()

    soapAction[''] = 'soap_IMachine_getParent'
    root[(IMachine_getParentRequestMsg.typecode.nspname,IMachine_getParentRequestMsg.typecode.pname)] = 'soap_IMachine_getParent'

    def soap_IMachine_getIcon(self, ps, **kw):
        request = ps.Parse(IMachine_getIconRequestMsg.typecode)
        return request,IMachine_getIconResultMsg()

    soapAction[''] = 'soap_IMachine_getIcon'
    root[(IMachine_getIconRequestMsg.typecode.nspname,IMachine_getIconRequestMsg.typecode.pname)] = 'soap_IMachine_getIcon'

    def soap_IMachine_setIcon(self, ps, **kw):
        request = ps.Parse(IMachine_setIconRequestMsg.typecode)
        return request,IMachine_setIconResultMsg()

    soapAction[''] = 'soap_IMachine_setIcon'
    root[(IMachine_setIconRequestMsg.typecode.nspname,IMachine_setIconRequestMsg.typecode.pname)] = 'soap_IMachine_setIcon'

    def soap_IMachine_getAccessible(self, ps, **kw):
        request = ps.Parse(IMachine_getAccessibleRequestMsg.typecode)
        return request,IMachine_getAccessibleResultMsg()

    soapAction[''] = 'soap_IMachine_getAccessible'
    root[(IMachine_getAccessibleRequestMsg.typecode.nspname,IMachine_getAccessibleRequestMsg.typecode.pname)] = 'soap_IMachine_getAccessible'

    def soap_IMachine_getAccessError(self, ps, **kw):
        request = ps.Parse(IMachine_getAccessErrorRequestMsg.typecode)
        return request,IMachine_getAccessErrorResultMsg()

    soapAction[''] = 'soap_IMachine_getAccessError'
    root[(IMachine_getAccessErrorRequestMsg.typecode.nspname,IMachine_getAccessErrorRequestMsg.typecode.pname)] = 'soap_IMachine_getAccessError'

    def soap_IMachine_getName(self, ps, **kw):
        request = ps.Parse(IMachine_getNameRequestMsg.typecode)
        return request,IMachine_getNameResultMsg()

    soapAction[''] = 'soap_IMachine_getName'
    root[(IMachine_getNameRequestMsg.typecode.nspname,IMachine_getNameRequestMsg.typecode.pname)] = 'soap_IMachine_getName'

    def soap_IMachine_setName(self, ps, **kw):
        request = ps.Parse(IMachine_setNameRequestMsg.typecode)
        return request,IMachine_setNameResultMsg()

    soapAction[''] = 'soap_IMachine_setName'
    root[(IMachine_setNameRequestMsg.typecode.nspname,IMachine_setNameRequestMsg.typecode.pname)] = 'soap_IMachine_setName'

    def soap_IMachine_getDescription(self, ps, **kw):
        request = ps.Parse(IMachine_getDescriptionRequestMsg.typecode)
        return request,IMachine_getDescriptionResultMsg()

    soapAction[''] = 'soap_IMachine_getDescription'
    root[(IMachine_getDescriptionRequestMsg.typecode.nspname,IMachine_getDescriptionRequestMsg.typecode.pname)] = 'soap_IMachine_getDescription'

    def soap_IMachine_setDescription(self, ps, **kw):
        request = ps.Parse(IMachine_setDescriptionRequestMsg.typecode)
        return request,IMachine_setDescriptionResultMsg()

    soapAction[''] = 'soap_IMachine_setDescription'
    root[(IMachine_setDescriptionRequestMsg.typecode.nspname,IMachine_setDescriptionRequestMsg.typecode.pname)] = 'soap_IMachine_setDescription'

    def soap_IMachine_getId(self, ps, **kw):
        request = ps.Parse(IMachine_getIdRequestMsg.typecode)
        return request,IMachine_getIdResultMsg()

    soapAction[''] = 'soap_IMachine_getId'
    root[(IMachine_getIdRequestMsg.typecode.nspname,IMachine_getIdRequestMsg.typecode.pname)] = 'soap_IMachine_getId'

    def soap_IMachine_getGroups(self, ps, **kw):
        request = ps.Parse(IMachine_getGroupsRequestMsg.typecode)
        return request,IMachine_getGroupsResultMsg()

    soapAction[''] = 'soap_IMachine_getGroups'
    root[(IMachine_getGroupsRequestMsg.typecode.nspname,IMachine_getGroupsRequestMsg.typecode.pname)] = 'soap_IMachine_getGroups'

    def soap_IMachine_setGroups(self, ps, **kw):
        request = ps.Parse(IMachine_setGroupsRequestMsg.typecode)
        return request,IMachine_setGroupsResultMsg()

    soapAction[''] = 'soap_IMachine_setGroups'
    root[(IMachine_setGroupsRequestMsg.typecode.nspname,IMachine_setGroupsRequestMsg.typecode.pname)] = 'soap_IMachine_setGroups'

    def soap_IMachine_getOSTypeId(self, ps, **kw):
        request = ps.Parse(IMachine_getOSTypeIdRequestMsg.typecode)
        return request,IMachine_getOSTypeIdResultMsg()

    soapAction[''] = 'soap_IMachine_getOSTypeId'
    root[(IMachine_getOSTypeIdRequestMsg.typecode.nspname,IMachine_getOSTypeIdRequestMsg.typecode.pname)] = 'soap_IMachine_getOSTypeId'

    def soap_IMachine_setOSTypeId(self, ps, **kw):
        request = ps.Parse(IMachine_setOSTypeIdRequestMsg.typecode)
        return request,IMachine_setOSTypeIdResultMsg()

    soapAction[''] = 'soap_IMachine_setOSTypeId'
    root[(IMachine_setOSTypeIdRequestMsg.typecode.nspname,IMachine_setOSTypeIdRequestMsg.typecode.pname)] = 'soap_IMachine_setOSTypeId'

    def soap_IMachine_getHardwareVersion(self, ps, **kw):
        request = ps.Parse(IMachine_getHardwareVersionRequestMsg.typecode)
        return request,IMachine_getHardwareVersionResultMsg()

    soapAction[''] = 'soap_IMachine_getHardwareVersion'
    root[(IMachine_getHardwareVersionRequestMsg.typecode.nspname,IMachine_getHardwareVersionRequestMsg.typecode.pname)] = 'soap_IMachine_getHardwareVersion'

    def soap_IMachine_setHardwareVersion(self, ps, **kw):
        request = ps.Parse(IMachine_setHardwareVersionRequestMsg.typecode)
        return request,IMachine_setHardwareVersionResultMsg()

    soapAction[''] = 'soap_IMachine_setHardwareVersion'
    root[(IMachine_setHardwareVersionRequestMsg.typecode.nspname,IMachine_setHardwareVersionRequestMsg.typecode.pname)] = 'soap_IMachine_setHardwareVersion'

    def soap_IMachine_getHardwareUUID(self, ps, **kw):
        request = ps.Parse(IMachine_getHardwareUUIDRequestMsg.typecode)
        return request,IMachine_getHardwareUUIDResultMsg()

    soapAction[''] = 'soap_IMachine_getHardwareUUID'
    root[(IMachine_getHardwareUUIDRequestMsg.typecode.nspname,IMachine_getHardwareUUIDRequestMsg.typecode.pname)] = 'soap_IMachine_getHardwareUUID'

    def soap_IMachine_setHardwareUUID(self, ps, **kw):
        request = ps.Parse(IMachine_setHardwareUUIDRequestMsg.typecode)
        return request,IMachine_setHardwareUUIDResultMsg()

    soapAction[''] = 'soap_IMachine_setHardwareUUID'
    root[(IMachine_setHardwareUUIDRequestMsg.typecode.nspname,IMachine_setHardwareUUIDRequestMsg.typecode.pname)] = 'soap_IMachine_setHardwareUUID'

    def soap_IMachine_getCPUCount(self, ps, **kw):
        request = ps.Parse(IMachine_getCPUCountRequestMsg.typecode)
        return request,IMachine_getCPUCountResultMsg()

    soapAction[''] = 'soap_IMachine_getCPUCount'
    root[(IMachine_getCPUCountRequestMsg.typecode.nspname,IMachine_getCPUCountRequestMsg.typecode.pname)] = 'soap_IMachine_getCPUCount'

    def soap_IMachine_setCPUCount(self, ps, **kw):
        request = ps.Parse(IMachine_setCPUCountRequestMsg.typecode)
        return request,IMachine_setCPUCountResultMsg()

    soapAction[''] = 'soap_IMachine_setCPUCount'
    root[(IMachine_setCPUCountRequestMsg.typecode.nspname,IMachine_setCPUCountRequestMsg.typecode.pname)] = 'soap_IMachine_setCPUCount'

    def soap_IMachine_getCPUHotPlugEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_getCPUHotPlugEnabledRequestMsg.typecode)
        return request,IMachine_getCPUHotPlugEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_getCPUHotPlugEnabled'
    root[(IMachine_getCPUHotPlugEnabledRequestMsg.typecode.nspname,IMachine_getCPUHotPlugEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_getCPUHotPlugEnabled'

    def soap_IMachine_setCPUHotPlugEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_setCPUHotPlugEnabledRequestMsg.typecode)
        return request,IMachine_setCPUHotPlugEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_setCPUHotPlugEnabled'
    root[(IMachine_setCPUHotPlugEnabledRequestMsg.typecode.nspname,IMachine_setCPUHotPlugEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_setCPUHotPlugEnabled'

    def soap_IMachine_getCPUExecutionCap(self, ps, **kw):
        request = ps.Parse(IMachine_getCPUExecutionCapRequestMsg.typecode)
        return request,IMachine_getCPUExecutionCapResultMsg()

    soapAction[''] = 'soap_IMachine_getCPUExecutionCap'
    root[(IMachine_getCPUExecutionCapRequestMsg.typecode.nspname,IMachine_getCPUExecutionCapRequestMsg.typecode.pname)] = 'soap_IMachine_getCPUExecutionCap'

    def soap_IMachine_setCPUExecutionCap(self, ps, **kw):
        request = ps.Parse(IMachine_setCPUExecutionCapRequestMsg.typecode)
        return request,IMachine_setCPUExecutionCapResultMsg()

    soapAction[''] = 'soap_IMachine_setCPUExecutionCap'
    root[(IMachine_setCPUExecutionCapRequestMsg.typecode.nspname,IMachine_setCPUExecutionCapRequestMsg.typecode.pname)] = 'soap_IMachine_setCPUExecutionCap'

    def soap_IMachine_getCPUIDPortabilityLevel(self, ps, **kw):
        request = ps.Parse(IMachine_getCPUIDPortabilityLevelRequestMsg.typecode)
        return request,IMachine_getCPUIDPortabilityLevelResultMsg()

    soapAction[''] = 'soap_IMachine_getCPUIDPortabilityLevel'
    root[(IMachine_getCPUIDPortabilityLevelRequestMsg.typecode.nspname,IMachine_getCPUIDPortabilityLevelRequestMsg.typecode.pname)] = 'soap_IMachine_getCPUIDPortabilityLevel'

    def soap_IMachine_setCPUIDPortabilityLevel(self, ps, **kw):
        request = ps.Parse(IMachine_setCPUIDPortabilityLevelRequestMsg.typecode)
        return request,IMachine_setCPUIDPortabilityLevelResultMsg()

    soapAction[''] = 'soap_IMachine_setCPUIDPortabilityLevel'
    root[(IMachine_setCPUIDPortabilityLevelRequestMsg.typecode.nspname,IMachine_setCPUIDPortabilityLevelRequestMsg.typecode.pname)] = 'soap_IMachine_setCPUIDPortabilityLevel'

    def soap_IMachine_getMemorySize(self, ps, **kw):
        request = ps.Parse(IMachine_getMemorySizeRequestMsg.typecode)
        return request,IMachine_getMemorySizeResultMsg()

    soapAction[''] = 'soap_IMachine_getMemorySize'
    root[(IMachine_getMemorySizeRequestMsg.typecode.nspname,IMachine_getMemorySizeRequestMsg.typecode.pname)] = 'soap_IMachine_getMemorySize'

    def soap_IMachine_setMemorySize(self, ps, **kw):
        request = ps.Parse(IMachine_setMemorySizeRequestMsg.typecode)
        return request,IMachine_setMemorySizeResultMsg()

    soapAction[''] = 'soap_IMachine_setMemorySize'
    root[(IMachine_setMemorySizeRequestMsg.typecode.nspname,IMachine_setMemorySizeRequestMsg.typecode.pname)] = 'soap_IMachine_setMemorySize'

    def soap_IMachine_getMemoryBalloonSize(self, ps, **kw):
        request = ps.Parse(IMachine_getMemoryBalloonSizeRequestMsg.typecode)
        return request,IMachine_getMemoryBalloonSizeResultMsg()

    soapAction[''] = 'soap_IMachine_getMemoryBalloonSize'
    root[(IMachine_getMemoryBalloonSizeRequestMsg.typecode.nspname,IMachine_getMemoryBalloonSizeRequestMsg.typecode.pname)] = 'soap_IMachine_getMemoryBalloonSize'

    def soap_IMachine_setMemoryBalloonSize(self, ps, **kw):
        request = ps.Parse(IMachine_setMemoryBalloonSizeRequestMsg.typecode)
        return request,IMachine_setMemoryBalloonSizeResultMsg()

    soapAction[''] = 'soap_IMachine_setMemoryBalloonSize'
    root[(IMachine_setMemoryBalloonSizeRequestMsg.typecode.nspname,IMachine_setMemoryBalloonSizeRequestMsg.typecode.pname)] = 'soap_IMachine_setMemoryBalloonSize'

    def soap_IMachine_getPageFusionEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_getPageFusionEnabledRequestMsg.typecode)
        return request,IMachine_getPageFusionEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_getPageFusionEnabled'
    root[(IMachine_getPageFusionEnabledRequestMsg.typecode.nspname,IMachine_getPageFusionEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_getPageFusionEnabled'

    def soap_IMachine_setPageFusionEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_setPageFusionEnabledRequestMsg.typecode)
        return request,IMachine_setPageFusionEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_setPageFusionEnabled'
    root[(IMachine_setPageFusionEnabledRequestMsg.typecode.nspname,IMachine_setPageFusionEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_setPageFusionEnabled'

    def soap_IMachine_getGraphicsControllerType(self, ps, **kw):
        request = ps.Parse(IMachine_getGraphicsControllerTypeRequestMsg.typecode)
        return request,IMachine_getGraphicsControllerTypeResultMsg()

    soapAction[''] = 'soap_IMachine_getGraphicsControllerType'
    root[(IMachine_getGraphicsControllerTypeRequestMsg.typecode.nspname,IMachine_getGraphicsControllerTypeRequestMsg.typecode.pname)] = 'soap_IMachine_getGraphicsControllerType'

    def soap_IMachine_setGraphicsControllerType(self, ps, **kw):
        request = ps.Parse(IMachine_setGraphicsControllerTypeRequestMsg.typecode)
        return request,IMachine_setGraphicsControllerTypeResultMsg()

    soapAction[''] = 'soap_IMachine_setGraphicsControllerType'
    root[(IMachine_setGraphicsControllerTypeRequestMsg.typecode.nspname,IMachine_setGraphicsControllerTypeRequestMsg.typecode.pname)] = 'soap_IMachine_setGraphicsControllerType'

    def soap_IMachine_getVRAMSize(self, ps, **kw):
        request = ps.Parse(IMachine_getVRAMSizeRequestMsg.typecode)
        return request,IMachine_getVRAMSizeResultMsg()

    soapAction[''] = 'soap_IMachine_getVRAMSize'
    root[(IMachine_getVRAMSizeRequestMsg.typecode.nspname,IMachine_getVRAMSizeRequestMsg.typecode.pname)] = 'soap_IMachine_getVRAMSize'

    def soap_IMachine_setVRAMSize(self, ps, **kw):
        request = ps.Parse(IMachine_setVRAMSizeRequestMsg.typecode)
        return request,IMachine_setVRAMSizeResultMsg()

    soapAction[''] = 'soap_IMachine_setVRAMSize'
    root[(IMachine_setVRAMSizeRequestMsg.typecode.nspname,IMachine_setVRAMSizeRequestMsg.typecode.pname)] = 'soap_IMachine_setVRAMSize'

    def soap_IMachine_getAccelerate3DEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_getAccelerate3DEnabledRequestMsg.typecode)
        return request,IMachine_getAccelerate3DEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_getAccelerate3DEnabled'
    root[(IMachine_getAccelerate3DEnabledRequestMsg.typecode.nspname,IMachine_getAccelerate3DEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_getAccelerate3DEnabled'

    def soap_IMachine_setAccelerate3DEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_setAccelerate3DEnabledRequestMsg.typecode)
        return request,IMachine_setAccelerate3DEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_setAccelerate3DEnabled'
    root[(IMachine_setAccelerate3DEnabledRequestMsg.typecode.nspname,IMachine_setAccelerate3DEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_setAccelerate3DEnabled'

    def soap_IMachine_getAccelerate2DVideoEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_getAccelerate2DVideoEnabledRequestMsg.typecode)
        return request,IMachine_getAccelerate2DVideoEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_getAccelerate2DVideoEnabled'
    root[(IMachine_getAccelerate2DVideoEnabledRequestMsg.typecode.nspname,IMachine_getAccelerate2DVideoEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_getAccelerate2DVideoEnabled'

    def soap_IMachine_setAccelerate2DVideoEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_setAccelerate2DVideoEnabledRequestMsg.typecode)
        return request,IMachine_setAccelerate2DVideoEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_setAccelerate2DVideoEnabled'
    root[(IMachine_setAccelerate2DVideoEnabledRequestMsg.typecode.nspname,IMachine_setAccelerate2DVideoEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_setAccelerate2DVideoEnabled'

    def soap_IMachine_getMonitorCount(self, ps, **kw):
        request = ps.Parse(IMachine_getMonitorCountRequestMsg.typecode)
        return request,IMachine_getMonitorCountResultMsg()

    soapAction[''] = 'soap_IMachine_getMonitorCount'
    root[(IMachine_getMonitorCountRequestMsg.typecode.nspname,IMachine_getMonitorCountRequestMsg.typecode.pname)] = 'soap_IMachine_getMonitorCount'

    def soap_IMachine_setMonitorCount(self, ps, **kw):
        request = ps.Parse(IMachine_setMonitorCountRequestMsg.typecode)
        return request,IMachine_setMonitorCountResultMsg()

    soapAction[''] = 'soap_IMachine_setMonitorCount'
    root[(IMachine_setMonitorCountRequestMsg.typecode.nspname,IMachine_setMonitorCountRequestMsg.typecode.pname)] = 'soap_IMachine_setMonitorCount'

    def soap_IMachine_getVideoCaptureEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_getVideoCaptureEnabledRequestMsg.typecode)
        return request,IMachine_getVideoCaptureEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_getVideoCaptureEnabled'
    root[(IMachine_getVideoCaptureEnabledRequestMsg.typecode.nspname,IMachine_getVideoCaptureEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_getVideoCaptureEnabled'

    def soap_IMachine_setVideoCaptureEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_setVideoCaptureEnabledRequestMsg.typecode)
        return request,IMachine_setVideoCaptureEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_setVideoCaptureEnabled'
    root[(IMachine_setVideoCaptureEnabledRequestMsg.typecode.nspname,IMachine_setVideoCaptureEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_setVideoCaptureEnabled'

    def soap_IMachine_getVideoCaptureScreens(self, ps, **kw):
        request = ps.Parse(IMachine_getVideoCaptureScreensRequestMsg.typecode)
        return request,IMachine_getVideoCaptureScreensResultMsg()

    soapAction[''] = 'soap_IMachine_getVideoCaptureScreens'
    root[(IMachine_getVideoCaptureScreensRequestMsg.typecode.nspname,IMachine_getVideoCaptureScreensRequestMsg.typecode.pname)] = 'soap_IMachine_getVideoCaptureScreens'

    def soap_IMachine_setVideoCaptureScreens(self, ps, **kw):
        request = ps.Parse(IMachine_setVideoCaptureScreensRequestMsg.typecode)
        return request,IMachine_setVideoCaptureScreensResultMsg()

    soapAction[''] = 'soap_IMachine_setVideoCaptureScreens'
    root[(IMachine_setVideoCaptureScreensRequestMsg.typecode.nspname,IMachine_setVideoCaptureScreensRequestMsg.typecode.pname)] = 'soap_IMachine_setVideoCaptureScreens'

    def soap_IMachine_getVideoCaptureFile(self, ps, **kw):
        request = ps.Parse(IMachine_getVideoCaptureFileRequestMsg.typecode)
        return request,IMachine_getVideoCaptureFileResultMsg()

    soapAction[''] = 'soap_IMachine_getVideoCaptureFile'
    root[(IMachine_getVideoCaptureFileRequestMsg.typecode.nspname,IMachine_getVideoCaptureFileRequestMsg.typecode.pname)] = 'soap_IMachine_getVideoCaptureFile'

    def soap_IMachine_setVideoCaptureFile(self, ps, **kw):
        request = ps.Parse(IMachine_setVideoCaptureFileRequestMsg.typecode)
        return request,IMachine_setVideoCaptureFileResultMsg()

    soapAction[''] = 'soap_IMachine_setVideoCaptureFile'
    root[(IMachine_setVideoCaptureFileRequestMsg.typecode.nspname,IMachine_setVideoCaptureFileRequestMsg.typecode.pname)] = 'soap_IMachine_setVideoCaptureFile'

    def soap_IMachine_getVideoCaptureWidth(self, ps, **kw):
        request = ps.Parse(IMachine_getVideoCaptureWidthRequestMsg.typecode)
        return request,IMachine_getVideoCaptureWidthResultMsg()

    soapAction[''] = 'soap_IMachine_getVideoCaptureWidth'
    root[(IMachine_getVideoCaptureWidthRequestMsg.typecode.nspname,IMachine_getVideoCaptureWidthRequestMsg.typecode.pname)] = 'soap_IMachine_getVideoCaptureWidth'

    def soap_IMachine_setVideoCaptureWidth(self, ps, **kw):
        request = ps.Parse(IMachine_setVideoCaptureWidthRequestMsg.typecode)
        return request,IMachine_setVideoCaptureWidthResultMsg()

    soapAction[''] = 'soap_IMachine_setVideoCaptureWidth'
    root[(IMachine_setVideoCaptureWidthRequestMsg.typecode.nspname,IMachine_setVideoCaptureWidthRequestMsg.typecode.pname)] = 'soap_IMachine_setVideoCaptureWidth'

    def soap_IMachine_getVideoCaptureHeight(self, ps, **kw):
        request = ps.Parse(IMachine_getVideoCaptureHeightRequestMsg.typecode)
        return request,IMachine_getVideoCaptureHeightResultMsg()

    soapAction[''] = 'soap_IMachine_getVideoCaptureHeight'
    root[(IMachine_getVideoCaptureHeightRequestMsg.typecode.nspname,IMachine_getVideoCaptureHeightRequestMsg.typecode.pname)] = 'soap_IMachine_getVideoCaptureHeight'

    def soap_IMachine_setVideoCaptureHeight(self, ps, **kw):
        request = ps.Parse(IMachine_setVideoCaptureHeightRequestMsg.typecode)
        return request,IMachine_setVideoCaptureHeightResultMsg()

    soapAction[''] = 'soap_IMachine_setVideoCaptureHeight'
    root[(IMachine_setVideoCaptureHeightRequestMsg.typecode.nspname,IMachine_setVideoCaptureHeightRequestMsg.typecode.pname)] = 'soap_IMachine_setVideoCaptureHeight'

    def soap_IMachine_getVideoCaptureRate(self, ps, **kw):
        request = ps.Parse(IMachine_getVideoCaptureRateRequestMsg.typecode)
        return request,IMachine_getVideoCaptureRateResultMsg()

    soapAction[''] = 'soap_IMachine_getVideoCaptureRate'
    root[(IMachine_getVideoCaptureRateRequestMsg.typecode.nspname,IMachine_getVideoCaptureRateRequestMsg.typecode.pname)] = 'soap_IMachine_getVideoCaptureRate'

    def soap_IMachine_setVideoCaptureRate(self, ps, **kw):
        request = ps.Parse(IMachine_setVideoCaptureRateRequestMsg.typecode)
        return request,IMachine_setVideoCaptureRateResultMsg()

    soapAction[''] = 'soap_IMachine_setVideoCaptureRate'
    root[(IMachine_setVideoCaptureRateRequestMsg.typecode.nspname,IMachine_setVideoCaptureRateRequestMsg.typecode.pname)] = 'soap_IMachine_setVideoCaptureRate'

    def soap_IMachine_getVideoCaptureFPS(self, ps, **kw):
        request = ps.Parse(IMachine_getVideoCaptureFPSRequestMsg.typecode)
        return request,IMachine_getVideoCaptureFPSResultMsg()

    soapAction[''] = 'soap_IMachine_getVideoCaptureFPS'
    root[(IMachine_getVideoCaptureFPSRequestMsg.typecode.nspname,IMachine_getVideoCaptureFPSRequestMsg.typecode.pname)] = 'soap_IMachine_getVideoCaptureFPS'

    def soap_IMachine_setVideoCaptureFPS(self, ps, **kw):
        request = ps.Parse(IMachine_setVideoCaptureFPSRequestMsg.typecode)
        return request,IMachine_setVideoCaptureFPSResultMsg()

    soapAction[''] = 'soap_IMachine_setVideoCaptureFPS'
    root[(IMachine_setVideoCaptureFPSRequestMsg.typecode.nspname,IMachine_setVideoCaptureFPSRequestMsg.typecode.pname)] = 'soap_IMachine_setVideoCaptureFPS'

    def soap_IMachine_getVideoCaptureMaxTime(self, ps, **kw):
        request = ps.Parse(IMachine_getVideoCaptureMaxTimeRequestMsg.typecode)
        return request,IMachine_getVideoCaptureMaxTimeResultMsg()

    soapAction[''] = 'soap_IMachine_getVideoCaptureMaxTime'
    root[(IMachine_getVideoCaptureMaxTimeRequestMsg.typecode.nspname,IMachine_getVideoCaptureMaxTimeRequestMsg.typecode.pname)] = 'soap_IMachine_getVideoCaptureMaxTime'

    def soap_IMachine_setVideoCaptureMaxTime(self, ps, **kw):
        request = ps.Parse(IMachine_setVideoCaptureMaxTimeRequestMsg.typecode)
        return request,IMachine_setVideoCaptureMaxTimeResultMsg()

    soapAction[''] = 'soap_IMachine_setVideoCaptureMaxTime'
    root[(IMachine_setVideoCaptureMaxTimeRequestMsg.typecode.nspname,IMachine_setVideoCaptureMaxTimeRequestMsg.typecode.pname)] = 'soap_IMachine_setVideoCaptureMaxTime'

    def soap_IMachine_getVideoCaptureMaxFileSize(self, ps, **kw):
        request = ps.Parse(IMachine_getVideoCaptureMaxFileSizeRequestMsg.typecode)
        return request,IMachine_getVideoCaptureMaxFileSizeResultMsg()

    soapAction[''] = 'soap_IMachine_getVideoCaptureMaxFileSize'
    root[(IMachine_getVideoCaptureMaxFileSizeRequestMsg.typecode.nspname,IMachine_getVideoCaptureMaxFileSizeRequestMsg.typecode.pname)] = 'soap_IMachine_getVideoCaptureMaxFileSize'

    def soap_IMachine_setVideoCaptureMaxFileSize(self, ps, **kw):
        request = ps.Parse(IMachine_setVideoCaptureMaxFileSizeRequestMsg.typecode)
        return request,IMachine_setVideoCaptureMaxFileSizeResultMsg()

    soapAction[''] = 'soap_IMachine_setVideoCaptureMaxFileSize'
    root[(IMachine_setVideoCaptureMaxFileSizeRequestMsg.typecode.nspname,IMachine_setVideoCaptureMaxFileSizeRequestMsg.typecode.pname)] = 'soap_IMachine_setVideoCaptureMaxFileSize'

    def soap_IMachine_getVideoCaptureOptions(self, ps, **kw):
        request = ps.Parse(IMachine_getVideoCaptureOptionsRequestMsg.typecode)
        return request,IMachine_getVideoCaptureOptionsResultMsg()

    soapAction[''] = 'soap_IMachine_getVideoCaptureOptions'
    root[(IMachine_getVideoCaptureOptionsRequestMsg.typecode.nspname,IMachine_getVideoCaptureOptionsRequestMsg.typecode.pname)] = 'soap_IMachine_getVideoCaptureOptions'

    def soap_IMachine_setVideoCaptureOptions(self, ps, **kw):
        request = ps.Parse(IMachine_setVideoCaptureOptionsRequestMsg.typecode)
        return request,IMachine_setVideoCaptureOptionsResultMsg()

    soapAction[''] = 'soap_IMachine_setVideoCaptureOptions'
    root[(IMachine_setVideoCaptureOptionsRequestMsg.typecode.nspname,IMachine_setVideoCaptureOptionsRequestMsg.typecode.pname)] = 'soap_IMachine_setVideoCaptureOptions'

    def soap_IMachine_getBIOSSettings(self, ps, **kw):
        request = ps.Parse(IMachine_getBIOSSettingsRequestMsg.typecode)
        return request,IMachine_getBIOSSettingsResultMsg()

    soapAction[''] = 'soap_IMachine_getBIOSSettings'
    root[(IMachine_getBIOSSettingsRequestMsg.typecode.nspname,IMachine_getBIOSSettingsRequestMsg.typecode.pname)] = 'soap_IMachine_getBIOSSettings'

    def soap_IMachine_getFirmwareType(self, ps, **kw):
        request = ps.Parse(IMachine_getFirmwareTypeRequestMsg.typecode)
        return request,IMachine_getFirmwareTypeResultMsg()

    soapAction[''] = 'soap_IMachine_getFirmwareType'
    root[(IMachine_getFirmwareTypeRequestMsg.typecode.nspname,IMachine_getFirmwareTypeRequestMsg.typecode.pname)] = 'soap_IMachine_getFirmwareType'

    def soap_IMachine_setFirmwareType(self, ps, **kw):
        request = ps.Parse(IMachine_setFirmwareTypeRequestMsg.typecode)
        return request,IMachine_setFirmwareTypeResultMsg()

    soapAction[''] = 'soap_IMachine_setFirmwareType'
    root[(IMachine_setFirmwareTypeRequestMsg.typecode.nspname,IMachine_setFirmwareTypeRequestMsg.typecode.pname)] = 'soap_IMachine_setFirmwareType'

    def soap_IMachine_getPointingHIDType(self, ps, **kw):
        request = ps.Parse(IMachine_getPointingHIDTypeRequestMsg.typecode)
        return request,IMachine_getPointingHIDTypeResultMsg()

    soapAction[''] = 'soap_IMachine_getPointingHIDType'
    root[(IMachine_getPointingHIDTypeRequestMsg.typecode.nspname,IMachine_getPointingHIDTypeRequestMsg.typecode.pname)] = 'soap_IMachine_getPointingHIDType'

    def soap_IMachine_setPointingHIDType(self, ps, **kw):
        request = ps.Parse(IMachine_setPointingHIDTypeRequestMsg.typecode)
        return request,IMachine_setPointingHIDTypeResultMsg()

    soapAction[''] = 'soap_IMachine_setPointingHIDType'
    root[(IMachine_setPointingHIDTypeRequestMsg.typecode.nspname,IMachine_setPointingHIDTypeRequestMsg.typecode.pname)] = 'soap_IMachine_setPointingHIDType'

    def soap_IMachine_getKeyboardHIDType(self, ps, **kw):
        request = ps.Parse(IMachine_getKeyboardHIDTypeRequestMsg.typecode)
        return request,IMachine_getKeyboardHIDTypeResultMsg()

    soapAction[''] = 'soap_IMachine_getKeyboardHIDType'
    root[(IMachine_getKeyboardHIDTypeRequestMsg.typecode.nspname,IMachine_getKeyboardHIDTypeRequestMsg.typecode.pname)] = 'soap_IMachine_getKeyboardHIDType'

    def soap_IMachine_setKeyboardHIDType(self, ps, **kw):
        request = ps.Parse(IMachine_setKeyboardHIDTypeRequestMsg.typecode)
        return request,IMachine_setKeyboardHIDTypeResultMsg()

    soapAction[''] = 'soap_IMachine_setKeyboardHIDType'
    root[(IMachine_setKeyboardHIDTypeRequestMsg.typecode.nspname,IMachine_setKeyboardHIDTypeRequestMsg.typecode.pname)] = 'soap_IMachine_setKeyboardHIDType'

    def soap_IMachine_getHPETEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_getHPETEnabledRequestMsg.typecode)
        return request,IMachine_getHPETEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_getHPETEnabled'
    root[(IMachine_getHPETEnabledRequestMsg.typecode.nspname,IMachine_getHPETEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_getHPETEnabled'

    def soap_IMachine_setHPETEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_setHPETEnabledRequestMsg.typecode)
        return request,IMachine_setHPETEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_setHPETEnabled'
    root[(IMachine_setHPETEnabledRequestMsg.typecode.nspname,IMachine_setHPETEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_setHPETEnabled'

    def soap_IMachine_getChipsetType(self, ps, **kw):
        request = ps.Parse(IMachine_getChipsetTypeRequestMsg.typecode)
        return request,IMachine_getChipsetTypeResultMsg()

    soapAction[''] = 'soap_IMachine_getChipsetType'
    root[(IMachine_getChipsetTypeRequestMsg.typecode.nspname,IMachine_getChipsetTypeRequestMsg.typecode.pname)] = 'soap_IMachine_getChipsetType'

    def soap_IMachine_setChipsetType(self, ps, **kw):
        request = ps.Parse(IMachine_setChipsetTypeRequestMsg.typecode)
        return request,IMachine_setChipsetTypeResultMsg()

    soapAction[''] = 'soap_IMachine_setChipsetType'
    root[(IMachine_setChipsetTypeRequestMsg.typecode.nspname,IMachine_setChipsetTypeRequestMsg.typecode.pname)] = 'soap_IMachine_setChipsetType'

    def soap_IMachine_getSnapshotFolder(self, ps, **kw):
        request = ps.Parse(IMachine_getSnapshotFolderRequestMsg.typecode)
        return request,IMachine_getSnapshotFolderResultMsg()

    soapAction[''] = 'soap_IMachine_getSnapshotFolder'
    root[(IMachine_getSnapshotFolderRequestMsg.typecode.nspname,IMachine_getSnapshotFolderRequestMsg.typecode.pname)] = 'soap_IMachine_getSnapshotFolder'

    def soap_IMachine_setSnapshotFolder(self, ps, **kw):
        request = ps.Parse(IMachine_setSnapshotFolderRequestMsg.typecode)
        return request,IMachine_setSnapshotFolderResultMsg()

    soapAction[''] = 'soap_IMachine_setSnapshotFolder'
    root[(IMachine_setSnapshotFolderRequestMsg.typecode.nspname,IMachine_setSnapshotFolderRequestMsg.typecode.pname)] = 'soap_IMachine_setSnapshotFolder'

    def soap_IMachine_getVRDEServer(self, ps, **kw):
        request = ps.Parse(IMachine_getVRDEServerRequestMsg.typecode)
        return request,IMachine_getVRDEServerResultMsg()

    soapAction[''] = 'soap_IMachine_getVRDEServer'
    root[(IMachine_getVRDEServerRequestMsg.typecode.nspname,IMachine_getVRDEServerRequestMsg.typecode.pname)] = 'soap_IMachine_getVRDEServer'

    def soap_IMachine_getEmulatedUSBCardReaderEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_getEmulatedUSBCardReaderEnabledRequestMsg.typecode)
        return request,IMachine_getEmulatedUSBCardReaderEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_getEmulatedUSBCardReaderEnabled'
    root[(IMachine_getEmulatedUSBCardReaderEnabledRequestMsg.typecode.nspname,IMachine_getEmulatedUSBCardReaderEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_getEmulatedUSBCardReaderEnabled'

    def soap_IMachine_setEmulatedUSBCardReaderEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_setEmulatedUSBCardReaderEnabledRequestMsg.typecode)
        return request,IMachine_setEmulatedUSBCardReaderEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_setEmulatedUSBCardReaderEnabled'
    root[(IMachine_setEmulatedUSBCardReaderEnabledRequestMsg.typecode.nspname,IMachine_setEmulatedUSBCardReaderEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_setEmulatedUSBCardReaderEnabled'

    def soap_IMachine_getMediumAttachments(self, ps, **kw):
        request = ps.Parse(IMachine_getMediumAttachmentsRequestMsg.typecode)
        return request,IMachine_getMediumAttachmentsResultMsg()

    soapAction[''] = 'soap_IMachine_getMediumAttachments'
    root[(IMachine_getMediumAttachmentsRequestMsg.typecode.nspname,IMachine_getMediumAttachmentsRequestMsg.typecode.pname)] = 'soap_IMachine_getMediumAttachments'

    def soap_IMachine_getUSBControllers(self, ps, **kw):
        request = ps.Parse(IMachine_getUSBControllersRequestMsg.typecode)
        return request,IMachine_getUSBControllersResultMsg()

    soapAction[''] = 'soap_IMachine_getUSBControllers'
    root[(IMachine_getUSBControllersRequestMsg.typecode.nspname,IMachine_getUSBControllersRequestMsg.typecode.pname)] = 'soap_IMachine_getUSBControllers'

    def soap_IMachine_getUSBDeviceFilters(self, ps, **kw):
        request = ps.Parse(IMachine_getUSBDeviceFiltersRequestMsg.typecode)
        return request,IMachine_getUSBDeviceFiltersResultMsg()

    soapAction[''] = 'soap_IMachine_getUSBDeviceFilters'
    root[(IMachine_getUSBDeviceFiltersRequestMsg.typecode.nspname,IMachine_getUSBDeviceFiltersRequestMsg.typecode.pname)] = 'soap_IMachine_getUSBDeviceFilters'

    def soap_IMachine_getAudioAdapter(self, ps, **kw):
        request = ps.Parse(IMachine_getAudioAdapterRequestMsg.typecode)
        return request,IMachine_getAudioAdapterResultMsg()

    soapAction[''] = 'soap_IMachine_getAudioAdapter'
    root[(IMachine_getAudioAdapterRequestMsg.typecode.nspname,IMachine_getAudioAdapterRequestMsg.typecode.pname)] = 'soap_IMachine_getAudioAdapter'

    def soap_IMachine_getStorageControllers(self, ps, **kw):
        request = ps.Parse(IMachine_getStorageControllersRequestMsg.typecode)
        return request,IMachine_getStorageControllersResultMsg()

    soapAction[''] = 'soap_IMachine_getStorageControllers'
    root[(IMachine_getStorageControllersRequestMsg.typecode.nspname,IMachine_getStorageControllersRequestMsg.typecode.pname)] = 'soap_IMachine_getStorageControllers'

    def soap_IMachine_getSettingsFilePath(self, ps, **kw):
        request = ps.Parse(IMachine_getSettingsFilePathRequestMsg.typecode)
        return request,IMachine_getSettingsFilePathResultMsg()

    soapAction[''] = 'soap_IMachine_getSettingsFilePath'
    root[(IMachine_getSettingsFilePathRequestMsg.typecode.nspname,IMachine_getSettingsFilePathRequestMsg.typecode.pname)] = 'soap_IMachine_getSettingsFilePath'

    def soap_IMachine_getSettingsModified(self, ps, **kw):
        request = ps.Parse(IMachine_getSettingsModifiedRequestMsg.typecode)
        return request,IMachine_getSettingsModifiedResultMsg()

    soapAction[''] = 'soap_IMachine_getSettingsModified'
    root[(IMachine_getSettingsModifiedRequestMsg.typecode.nspname,IMachine_getSettingsModifiedRequestMsg.typecode.pname)] = 'soap_IMachine_getSettingsModified'

    def soap_IMachine_getSessionState(self, ps, **kw):
        request = ps.Parse(IMachine_getSessionStateRequestMsg.typecode)
        return request,IMachine_getSessionStateResultMsg()

    soapAction[''] = 'soap_IMachine_getSessionState'
    root[(IMachine_getSessionStateRequestMsg.typecode.nspname,IMachine_getSessionStateRequestMsg.typecode.pname)] = 'soap_IMachine_getSessionState'

    def soap_IMachine_getSessionName(self, ps, **kw):
        request = ps.Parse(IMachine_getSessionNameRequestMsg.typecode)
        return request,IMachine_getSessionNameResultMsg()

    soapAction[''] = 'soap_IMachine_getSessionName'
    root[(IMachine_getSessionNameRequestMsg.typecode.nspname,IMachine_getSessionNameRequestMsg.typecode.pname)] = 'soap_IMachine_getSessionName'

    def soap_IMachine_getSessionPID(self, ps, **kw):
        request = ps.Parse(IMachine_getSessionPIDRequestMsg.typecode)
        return request,IMachine_getSessionPIDResultMsg()

    soapAction[''] = 'soap_IMachine_getSessionPID'
    root[(IMachine_getSessionPIDRequestMsg.typecode.nspname,IMachine_getSessionPIDRequestMsg.typecode.pname)] = 'soap_IMachine_getSessionPID'

    def soap_IMachine_getState(self, ps, **kw):
        request = ps.Parse(IMachine_getStateRequestMsg.typecode)
        return request,IMachine_getStateResultMsg()

    soapAction[''] = 'soap_IMachine_getState'
    root[(IMachine_getStateRequestMsg.typecode.nspname,IMachine_getStateRequestMsg.typecode.pname)] = 'soap_IMachine_getState'

    def soap_IMachine_getLastStateChange(self, ps, **kw):
        request = ps.Parse(IMachine_getLastStateChangeRequestMsg.typecode)
        return request,IMachine_getLastStateChangeResultMsg()

    soapAction[''] = 'soap_IMachine_getLastStateChange'
    root[(IMachine_getLastStateChangeRequestMsg.typecode.nspname,IMachine_getLastStateChangeRequestMsg.typecode.pname)] = 'soap_IMachine_getLastStateChange'

    def soap_IMachine_getStateFilePath(self, ps, **kw):
        request = ps.Parse(IMachine_getStateFilePathRequestMsg.typecode)
        return request,IMachine_getStateFilePathResultMsg()

    soapAction[''] = 'soap_IMachine_getStateFilePath'
    root[(IMachine_getStateFilePathRequestMsg.typecode.nspname,IMachine_getStateFilePathRequestMsg.typecode.pname)] = 'soap_IMachine_getStateFilePath'

    def soap_IMachine_getLogFolder(self, ps, **kw):
        request = ps.Parse(IMachine_getLogFolderRequestMsg.typecode)
        return request,IMachine_getLogFolderResultMsg()

    soapAction[''] = 'soap_IMachine_getLogFolder'
    root[(IMachine_getLogFolderRequestMsg.typecode.nspname,IMachine_getLogFolderRequestMsg.typecode.pname)] = 'soap_IMachine_getLogFolder'

    def soap_IMachine_getCurrentSnapshot(self, ps, **kw):
        request = ps.Parse(IMachine_getCurrentSnapshotRequestMsg.typecode)
        return request,IMachine_getCurrentSnapshotResultMsg()

    soapAction[''] = 'soap_IMachine_getCurrentSnapshot'
    root[(IMachine_getCurrentSnapshotRequestMsg.typecode.nspname,IMachine_getCurrentSnapshotRequestMsg.typecode.pname)] = 'soap_IMachine_getCurrentSnapshot'

    def soap_IMachine_getSnapshotCount(self, ps, **kw):
        request = ps.Parse(IMachine_getSnapshotCountRequestMsg.typecode)
        return request,IMachine_getSnapshotCountResultMsg()

    soapAction[''] = 'soap_IMachine_getSnapshotCount'
    root[(IMachine_getSnapshotCountRequestMsg.typecode.nspname,IMachine_getSnapshotCountRequestMsg.typecode.pname)] = 'soap_IMachine_getSnapshotCount'

    def soap_IMachine_getCurrentStateModified(self, ps, **kw):
        request = ps.Parse(IMachine_getCurrentStateModifiedRequestMsg.typecode)
        return request,IMachine_getCurrentStateModifiedResultMsg()

    soapAction[''] = 'soap_IMachine_getCurrentStateModified'
    root[(IMachine_getCurrentStateModifiedRequestMsg.typecode.nspname,IMachine_getCurrentStateModifiedRequestMsg.typecode.pname)] = 'soap_IMachine_getCurrentStateModified'

    def soap_IMachine_getSharedFolders(self, ps, **kw):
        request = ps.Parse(IMachine_getSharedFoldersRequestMsg.typecode)
        return request,IMachine_getSharedFoldersResultMsg()

    soapAction[''] = 'soap_IMachine_getSharedFolders'
    root[(IMachine_getSharedFoldersRequestMsg.typecode.nspname,IMachine_getSharedFoldersRequestMsg.typecode.pname)] = 'soap_IMachine_getSharedFolders'

    def soap_IMachine_getClipboardMode(self, ps, **kw):
        request = ps.Parse(IMachine_getClipboardModeRequestMsg.typecode)
        return request,IMachine_getClipboardModeResultMsg()

    soapAction[''] = 'soap_IMachine_getClipboardMode'
    root[(IMachine_getClipboardModeRequestMsg.typecode.nspname,IMachine_getClipboardModeRequestMsg.typecode.pname)] = 'soap_IMachine_getClipboardMode'

    def soap_IMachine_setClipboardMode(self, ps, **kw):
        request = ps.Parse(IMachine_setClipboardModeRequestMsg.typecode)
        return request,IMachine_setClipboardModeResultMsg()

    soapAction[''] = 'soap_IMachine_setClipboardMode'
    root[(IMachine_setClipboardModeRequestMsg.typecode.nspname,IMachine_setClipboardModeRequestMsg.typecode.pname)] = 'soap_IMachine_setClipboardMode'

    def soap_IMachine_getDnDMode(self, ps, **kw):
        request = ps.Parse(IMachine_getDnDModeRequestMsg.typecode)
        return request,IMachine_getDnDModeResultMsg()

    soapAction[''] = 'soap_IMachine_getDnDMode'
    root[(IMachine_getDnDModeRequestMsg.typecode.nspname,IMachine_getDnDModeRequestMsg.typecode.pname)] = 'soap_IMachine_getDnDMode'

    def soap_IMachine_setDnDMode(self, ps, **kw):
        request = ps.Parse(IMachine_setDnDModeRequestMsg.typecode)
        return request,IMachine_setDnDModeResultMsg()

    soapAction[''] = 'soap_IMachine_setDnDMode'
    root[(IMachine_setDnDModeRequestMsg.typecode.nspname,IMachine_setDnDModeRequestMsg.typecode.pname)] = 'soap_IMachine_setDnDMode'

    def soap_IMachine_getTeleporterEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_getTeleporterEnabledRequestMsg.typecode)
        return request,IMachine_getTeleporterEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_getTeleporterEnabled'
    root[(IMachine_getTeleporterEnabledRequestMsg.typecode.nspname,IMachine_getTeleporterEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_getTeleporterEnabled'

    def soap_IMachine_setTeleporterEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_setTeleporterEnabledRequestMsg.typecode)
        return request,IMachine_setTeleporterEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_setTeleporterEnabled'
    root[(IMachine_setTeleporterEnabledRequestMsg.typecode.nspname,IMachine_setTeleporterEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_setTeleporterEnabled'

    def soap_IMachine_getTeleporterPort(self, ps, **kw):
        request = ps.Parse(IMachine_getTeleporterPortRequestMsg.typecode)
        return request,IMachine_getTeleporterPortResultMsg()

    soapAction[''] = 'soap_IMachine_getTeleporterPort'
    root[(IMachine_getTeleporterPortRequestMsg.typecode.nspname,IMachine_getTeleporterPortRequestMsg.typecode.pname)] = 'soap_IMachine_getTeleporterPort'

    def soap_IMachine_setTeleporterPort(self, ps, **kw):
        request = ps.Parse(IMachine_setTeleporterPortRequestMsg.typecode)
        return request,IMachine_setTeleporterPortResultMsg()

    soapAction[''] = 'soap_IMachine_setTeleporterPort'
    root[(IMachine_setTeleporterPortRequestMsg.typecode.nspname,IMachine_setTeleporterPortRequestMsg.typecode.pname)] = 'soap_IMachine_setTeleporterPort'

    def soap_IMachine_getTeleporterAddress(self, ps, **kw):
        request = ps.Parse(IMachine_getTeleporterAddressRequestMsg.typecode)
        return request,IMachine_getTeleporterAddressResultMsg()

    soapAction[''] = 'soap_IMachine_getTeleporterAddress'
    root[(IMachine_getTeleporterAddressRequestMsg.typecode.nspname,IMachine_getTeleporterAddressRequestMsg.typecode.pname)] = 'soap_IMachine_getTeleporterAddress'

    def soap_IMachine_setTeleporterAddress(self, ps, **kw):
        request = ps.Parse(IMachine_setTeleporterAddressRequestMsg.typecode)
        return request,IMachine_setTeleporterAddressResultMsg()

    soapAction[''] = 'soap_IMachine_setTeleporterAddress'
    root[(IMachine_setTeleporterAddressRequestMsg.typecode.nspname,IMachine_setTeleporterAddressRequestMsg.typecode.pname)] = 'soap_IMachine_setTeleporterAddress'

    def soap_IMachine_getTeleporterPassword(self, ps, **kw):
        request = ps.Parse(IMachine_getTeleporterPasswordRequestMsg.typecode)
        return request,IMachine_getTeleporterPasswordResultMsg()

    soapAction[''] = 'soap_IMachine_getTeleporterPassword'
    root[(IMachine_getTeleporterPasswordRequestMsg.typecode.nspname,IMachine_getTeleporterPasswordRequestMsg.typecode.pname)] = 'soap_IMachine_getTeleporterPassword'

    def soap_IMachine_setTeleporterPassword(self, ps, **kw):
        request = ps.Parse(IMachine_setTeleporterPasswordRequestMsg.typecode)
        return request,IMachine_setTeleporterPasswordResultMsg()

    soapAction[''] = 'soap_IMachine_setTeleporterPassword'
    root[(IMachine_setTeleporterPasswordRequestMsg.typecode.nspname,IMachine_setTeleporterPasswordRequestMsg.typecode.pname)] = 'soap_IMachine_setTeleporterPassword'

    def soap_IMachine_getParavirtProvider(self, ps, **kw):
        request = ps.Parse(IMachine_getParavirtProviderRequestMsg.typecode)
        return request,IMachine_getParavirtProviderResultMsg()

    soapAction[''] = 'soap_IMachine_getParavirtProvider'
    root[(IMachine_getParavirtProviderRequestMsg.typecode.nspname,IMachine_getParavirtProviderRequestMsg.typecode.pname)] = 'soap_IMachine_getParavirtProvider'

    def soap_IMachine_setParavirtProvider(self, ps, **kw):
        request = ps.Parse(IMachine_setParavirtProviderRequestMsg.typecode)
        return request,IMachine_setParavirtProviderResultMsg()

    soapAction[''] = 'soap_IMachine_setParavirtProvider'
    root[(IMachine_setParavirtProviderRequestMsg.typecode.nspname,IMachine_setParavirtProviderRequestMsg.typecode.pname)] = 'soap_IMachine_setParavirtProvider'

    def soap_IMachine_getFaultToleranceState(self, ps, **kw):
        request = ps.Parse(IMachine_getFaultToleranceStateRequestMsg.typecode)
        return request,IMachine_getFaultToleranceStateResultMsg()

    soapAction[''] = 'soap_IMachine_getFaultToleranceState'
    root[(IMachine_getFaultToleranceStateRequestMsg.typecode.nspname,IMachine_getFaultToleranceStateRequestMsg.typecode.pname)] = 'soap_IMachine_getFaultToleranceState'

    def soap_IMachine_setFaultToleranceState(self, ps, **kw):
        request = ps.Parse(IMachine_setFaultToleranceStateRequestMsg.typecode)
        return request,IMachine_setFaultToleranceStateResultMsg()

    soapAction[''] = 'soap_IMachine_setFaultToleranceState'
    root[(IMachine_setFaultToleranceStateRequestMsg.typecode.nspname,IMachine_setFaultToleranceStateRequestMsg.typecode.pname)] = 'soap_IMachine_setFaultToleranceState'

    def soap_IMachine_getFaultTolerancePort(self, ps, **kw):
        request = ps.Parse(IMachine_getFaultTolerancePortRequestMsg.typecode)
        return request,IMachine_getFaultTolerancePortResultMsg()

    soapAction[''] = 'soap_IMachine_getFaultTolerancePort'
    root[(IMachine_getFaultTolerancePortRequestMsg.typecode.nspname,IMachine_getFaultTolerancePortRequestMsg.typecode.pname)] = 'soap_IMachine_getFaultTolerancePort'

    def soap_IMachine_setFaultTolerancePort(self, ps, **kw):
        request = ps.Parse(IMachine_setFaultTolerancePortRequestMsg.typecode)
        return request,IMachine_setFaultTolerancePortResultMsg()

    soapAction[''] = 'soap_IMachine_setFaultTolerancePort'
    root[(IMachine_setFaultTolerancePortRequestMsg.typecode.nspname,IMachine_setFaultTolerancePortRequestMsg.typecode.pname)] = 'soap_IMachine_setFaultTolerancePort'

    def soap_IMachine_getFaultToleranceAddress(self, ps, **kw):
        request = ps.Parse(IMachine_getFaultToleranceAddressRequestMsg.typecode)
        return request,IMachine_getFaultToleranceAddressResultMsg()

    soapAction[''] = 'soap_IMachine_getFaultToleranceAddress'
    root[(IMachine_getFaultToleranceAddressRequestMsg.typecode.nspname,IMachine_getFaultToleranceAddressRequestMsg.typecode.pname)] = 'soap_IMachine_getFaultToleranceAddress'

    def soap_IMachine_setFaultToleranceAddress(self, ps, **kw):
        request = ps.Parse(IMachine_setFaultToleranceAddressRequestMsg.typecode)
        return request,IMachine_setFaultToleranceAddressResultMsg()

    soapAction[''] = 'soap_IMachine_setFaultToleranceAddress'
    root[(IMachine_setFaultToleranceAddressRequestMsg.typecode.nspname,IMachine_setFaultToleranceAddressRequestMsg.typecode.pname)] = 'soap_IMachine_setFaultToleranceAddress'

    def soap_IMachine_getFaultTolerancePassword(self, ps, **kw):
        request = ps.Parse(IMachine_getFaultTolerancePasswordRequestMsg.typecode)
        return request,IMachine_getFaultTolerancePasswordResultMsg()

    soapAction[''] = 'soap_IMachine_getFaultTolerancePassword'
    root[(IMachine_getFaultTolerancePasswordRequestMsg.typecode.nspname,IMachine_getFaultTolerancePasswordRequestMsg.typecode.pname)] = 'soap_IMachine_getFaultTolerancePassword'

    def soap_IMachine_setFaultTolerancePassword(self, ps, **kw):
        request = ps.Parse(IMachine_setFaultTolerancePasswordRequestMsg.typecode)
        return request,IMachine_setFaultTolerancePasswordResultMsg()

    soapAction[''] = 'soap_IMachine_setFaultTolerancePassword'
    root[(IMachine_setFaultTolerancePasswordRequestMsg.typecode.nspname,IMachine_setFaultTolerancePasswordRequestMsg.typecode.pname)] = 'soap_IMachine_setFaultTolerancePassword'

    def soap_IMachine_getFaultToleranceSyncInterval(self, ps, **kw):
        request = ps.Parse(IMachine_getFaultToleranceSyncIntervalRequestMsg.typecode)
        return request,IMachine_getFaultToleranceSyncIntervalResultMsg()

    soapAction[''] = 'soap_IMachine_getFaultToleranceSyncInterval'
    root[(IMachine_getFaultToleranceSyncIntervalRequestMsg.typecode.nspname,IMachine_getFaultToleranceSyncIntervalRequestMsg.typecode.pname)] = 'soap_IMachine_getFaultToleranceSyncInterval'

    def soap_IMachine_setFaultToleranceSyncInterval(self, ps, **kw):
        request = ps.Parse(IMachine_setFaultToleranceSyncIntervalRequestMsg.typecode)
        return request,IMachine_setFaultToleranceSyncIntervalResultMsg()

    soapAction[''] = 'soap_IMachine_setFaultToleranceSyncInterval'
    root[(IMachine_setFaultToleranceSyncIntervalRequestMsg.typecode.nspname,IMachine_setFaultToleranceSyncIntervalRequestMsg.typecode.pname)] = 'soap_IMachine_setFaultToleranceSyncInterval'

    def soap_IMachine_getRTCUseUTC(self, ps, **kw):
        request = ps.Parse(IMachine_getRTCUseUTCRequestMsg.typecode)
        return request,IMachine_getRTCUseUTCResultMsg()

    soapAction[''] = 'soap_IMachine_getRTCUseUTC'
    root[(IMachine_getRTCUseUTCRequestMsg.typecode.nspname,IMachine_getRTCUseUTCRequestMsg.typecode.pname)] = 'soap_IMachine_getRTCUseUTC'

    def soap_IMachine_setRTCUseUTC(self, ps, **kw):
        request = ps.Parse(IMachine_setRTCUseUTCRequestMsg.typecode)
        return request,IMachine_setRTCUseUTCResultMsg()

    soapAction[''] = 'soap_IMachine_setRTCUseUTC'
    root[(IMachine_setRTCUseUTCRequestMsg.typecode.nspname,IMachine_setRTCUseUTCRequestMsg.typecode.pname)] = 'soap_IMachine_setRTCUseUTC'

    def soap_IMachine_getIOCacheEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_getIOCacheEnabledRequestMsg.typecode)
        return request,IMachine_getIOCacheEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_getIOCacheEnabled'
    root[(IMachine_getIOCacheEnabledRequestMsg.typecode.nspname,IMachine_getIOCacheEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_getIOCacheEnabled'

    def soap_IMachine_setIOCacheEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_setIOCacheEnabledRequestMsg.typecode)
        return request,IMachine_setIOCacheEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_setIOCacheEnabled'
    root[(IMachine_setIOCacheEnabledRequestMsg.typecode.nspname,IMachine_setIOCacheEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_setIOCacheEnabled'

    def soap_IMachine_getIOCacheSize(self, ps, **kw):
        request = ps.Parse(IMachine_getIOCacheSizeRequestMsg.typecode)
        return request,IMachine_getIOCacheSizeResultMsg()

    soapAction[''] = 'soap_IMachine_getIOCacheSize'
    root[(IMachine_getIOCacheSizeRequestMsg.typecode.nspname,IMachine_getIOCacheSizeRequestMsg.typecode.pname)] = 'soap_IMachine_getIOCacheSize'

    def soap_IMachine_setIOCacheSize(self, ps, **kw):
        request = ps.Parse(IMachine_setIOCacheSizeRequestMsg.typecode)
        return request,IMachine_setIOCacheSizeResultMsg()

    soapAction[''] = 'soap_IMachine_setIOCacheSize'
    root[(IMachine_setIOCacheSizeRequestMsg.typecode.nspname,IMachine_setIOCacheSizeRequestMsg.typecode.pname)] = 'soap_IMachine_setIOCacheSize'

    def soap_IMachine_getPCIDeviceAssignments(self, ps, **kw):
        request = ps.Parse(IMachine_getPCIDeviceAssignmentsRequestMsg.typecode)
        return request,IMachine_getPCIDeviceAssignmentsResultMsg()

    soapAction[''] = 'soap_IMachine_getPCIDeviceAssignments'
    root[(IMachine_getPCIDeviceAssignmentsRequestMsg.typecode.nspname,IMachine_getPCIDeviceAssignmentsRequestMsg.typecode.pname)] = 'soap_IMachine_getPCIDeviceAssignments'

    def soap_IMachine_getBandwidthControl(self, ps, **kw):
        request = ps.Parse(IMachine_getBandwidthControlRequestMsg.typecode)
        return request,IMachine_getBandwidthControlResultMsg()

    soapAction[''] = 'soap_IMachine_getBandwidthControl'
    root[(IMachine_getBandwidthControlRequestMsg.typecode.nspname,IMachine_getBandwidthControlRequestMsg.typecode.pname)] = 'soap_IMachine_getBandwidthControl'

    def soap_IMachine_getTracingEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_getTracingEnabledRequestMsg.typecode)
        return request,IMachine_getTracingEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_getTracingEnabled'
    root[(IMachine_getTracingEnabledRequestMsg.typecode.nspname,IMachine_getTracingEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_getTracingEnabled'

    def soap_IMachine_setTracingEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_setTracingEnabledRequestMsg.typecode)
        return request,IMachine_setTracingEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_setTracingEnabled'
    root[(IMachine_setTracingEnabledRequestMsg.typecode.nspname,IMachine_setTracingEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_setTracingEnabled'

    def soap_IMachine_getTracingConfig(self, ps, **kw):
        request = ps.Parse(IMachine_getTracingConfigRequestMsg.typecode)
        return request,IMachine_getTracingConfigResultMsg()

    soapAction[''] = 'soap_IMachine_getTracingConfig'
    root[(IMachine_getTracingConfigRequestMsg.typecode.nspname,IMachine_getTracingConfigRequestMsg.typecode.pname)] = 'soap_IMachine_getTracingConfig'

    def soap_IMachine_setTracingConfig(self, ps, **kw):
        request = ps.Parse(IMachine_setTracingConfigRequestMsg.typecode)
        return request,IMachine_setTracingConfigResultMsg()

    soapAction[''] = 'soap_IMachine_setTracingConfig'
    root[(IMachine_setTracingConfigRequestMsg.typecode.nspname,IMachine_setTracingConfigRequestMsg.typecode.pname)] = 'soap_IMachine_setTracingConfig'

    def soap_IMachine_getAllowTracingToAccessVM(self, ps, **kw):
        request = ps.Parse(IMachine_getAllowTracingToAccessVMRequestMsg.typecode)
        return request,IMachine_getAllowTracingToAccessVMResultMsg()

    soapAction[''] = 'soap_IMachine_getAllowTracingToAccessVM'
    root[(IMachine_getAllowTracingToAccessVMRequestMsg.typecode.nspname,IMachine_getAllowTracingToAccessVMRequestMsg.typecode.pname)] = 'soap_IMachine_getAllowTracingToAccessVM'

    def soap_IMachine_setAllowTracingToAccessVM(self, ps, **kw):
        request = ps.Parse(IMachine_setAllowTracingToAccessVMRequestMsg.typecode)
        return request,IMachine_setAllowTracingToAccessVMResultMsg()

    soapAction[''] = 'soap_IMachine_setAllowTracingToAccessVM'
    root[(IMachine_setAllowTracingToAccessVMRequestMsg.typecode.nspname,IMachine_setAllowTracingToAccessVMRequestMsg.typecode.pname)] = 'soap_IMachine_setAllowTracingToAccessVM'

    def soap_IMachine_getAutostartEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_getAutostartEnabledRequestMsg.typecode)
        return request,IMachine_getAutostartEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_getAutostartEnabled'
    root[(IMachine_getAutostartEnabledRequestMsg.typecode.nspname,IMachine_getAutostartEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_getAutostartEnabled'

    def soap_IMachine_setAutostartEnabled(self, ps, **kw):
        request = ps.Parse(IMachine_setAutostartEnabledRequestMsg.typecode)
        return request,IMachine_setAutostartEnabledResultMsg()

    soapAction[''] = 'soap_IMachine_setAutostartEnabled'
    root[(IMachine_setAutostartEnabledRequestMsg.typecode.nspname,IMachine_setAutostartEnabledRequestMsg.typecode.pname)] = 'soap_IMachine_setAutostartEnabled'

    def soap_IMachine_getAutostartDelay(self, ps, **kw):
        request = ps.Parse(IMachine_getAutostartDelayRequestMsg.typecode)
        return request,IMachine_getAutostartDelayResultMsg()

    soapAction[''] = 'soap_IMachine_getAutostartDelay'
    root[(IMachine_getAutostartDelayRequestMsg.typecode.nspname,IMachine_getAutostartDelayRequestMsg.typecode.pname)] = 'soap_IMachine_getAutostartDelay'

    def soap_IMachine_setAutostartDelay(self, ps, **kw):
        request = ps.Parse(IMachine_setAutostartDelayRequestMsg.typecode)
        return request,IMachine_setAutostartDelayResultMsg()

    soapAction[''] = 'soap_IMachine_setAutostartDelay'
    root[(IMachine_setAutostartDelayRequestMsg.typecode.nspname,IMachine_setAutostartDelayRequestMsg.typecode.pname)] = 'soap_IMachine_setAutostartDelay'

    def soap_IMachine_getAutostopType(self, ps, **kw):
        request = ps.Parse(IMachine_getAutostopTypeRequestMsg.typecode)
        return request,IMachine_getAutostopTypeResultMsg()

    soapAction[''] = 'soap_IMachine_getAutostopType'
    root[(IMachine_getAutostopTypeRequestMsg.typecode.nspname,IMachine_getAutostopTypeRequestMsg.typecode.pname)] = 'soap_IMachine_getAutostopType'

    def soap_IMachine_setAutostopType(self, ps, **kw):
        request = ps.Parse(IMachine_setAutostopTypeRequestMsg.typecode)
        return request,IMachine_setAutostopTypeResultMsg()

    soapAction[''] = 'soap_IMachine_setAutostopType'
    root[(IMachine_setAutostopTypeRequestMsg.typecode.nspname,IMachine_setAutostopTypeRequestMsg.typecode.pname)] = 'soap_IMachine_setAutostopType'

    def soap_IMachine_getDefaultFrontend(self, ps, **kw):
        request = ps.Parse(IMachine_getDefaultFrontendRequestMsg.typecode)
        return request,IMachine_getDefaultFrontendResultMsg()

    soapAction[''] = 'soap_IMachine_getDefaultFrontend'
    root[(IMachine_getDefaultFrontendRequestMsg.typecode.nspname,IMachine_getDefaultFrontendRequestMsg.typecode.pname)] = 'soap_IMachine_getDefaultFrontend'

    def soap_IMachine_setDefaultFrontend(self, ps, **kw):
        request = ps.Parse(IMachine_setDefaultFrontendRequestMsg.typecode)
        return request,IMachine_setDefaultFrontendResultMsg()

    soapAction[''] = 'soap_IMachine_setDefaultFrontend'
    root[(IMachine_setDefaultFrontendRequestMsg.typecode.nspname,IMachine_setDefaultFrontendRequestMsg.typecode.pname)] = 'soap_IMachine_setDefaultFrontend'

    def soap_IMachine_getUSBProxyAvailable(self, ps, **kw):
        request = ps.Parse(IMachine_getUSBProxyAvailableRequestMsg.typecode)
        return request,IMachine_getUSBProxyAvailableResultMsg()

    soapAction[''] = 'soap_IMachine_getUSBProxyAvailable'
    root[(IMachine_getUSBProxyAvailableRequestMsg.typecode.nspname,IMachine_getUSBProxyAvailableRequestMsg.typecode.pname)] = 'soap_IMachine_getUSBProxyAvailable'

    def soap_IMachine_getVMProcessPriority(self, ps, **kw):
        request = ps.Parse(IMachine_getVMProcessPriorityRequestMsg.typecode)
        return request,IMachine_getVMProcessPriorityResultMsg()

    soapAction[''] = 'soap_IMachine_getVMProcessPriority'
    root[(IMachine_getVMProcessPriorityRequestMsg.typecode.nspname,IMachine_getVMProcessPriorityRequestMsg.typecode.pname)] = 'soap_IMachine_getVMProcessPriority'

    def soap_IMachine_setVMProcessPriority(self, ps, **kw):
        request = ps.Parse(IMachine_setVMProcessPriorityRequestMsg.typecode)
        return request,IMachine_setVMProcessPriorityResultMsg()

    soapAction[''] = 'soap_IMachine_setVMProcessPriority'
    root[(IMachine_setVMProcessPriorityRequestMsg.typecode.nspname,IMachine_setVMProcessPriorityRequestMsg.typecode.pname)] = 'soap_IMachine_setVMProcessPriority'

    def soap_IMachine_lockMachine(self, ps, **kw):
        request = ps.Parse(IMachine_lockMachineRequestMsg.typecode)
        return request,IMachine_lockMachineResultMsg()

    soapAction[''] = 'soap_IMachine_lockMachine'
    root[(IMachine_lockMachineRequestMsg.typecode.nspname,IMachine_lockMachineRequestMsg.typecode.pname)] = 'soap_IMachine_lockMachine'

    def soap_IMachine_launchVMProcess(self, ps, **kw):
        request = ps.Parse(IMachine_launchVMProcessRequestMsg.typecode)
        return request,IMachine_launchVMProcessResultMsg()

    soapAction[''] = 'soap_IMachine_launchVMProcess'
    root[(IMachine_launchVMProcessRequestMsg.typecode.nspname,IMachine_launchVMProcessRequestMsg.typecode.pname)] = 'soap_IMachine_launchVMProcess'

    def soap_IMachine_setBootOrder(self, ps, **kw):
        request = ps.Parse(IMachine_setBootOrderRequestMsg.typecode)
        return request,IMachine_setBootOrderResultMsg()

    soapAction[''] = 'soap_IMachine_setBootOrder'
    root[(IMachine_setBootOrderRequestMsg.typecode.nspname,IMachine_setBootOrderRequestMsg.typecode.pname)] = 'soap_IMachine_setBootOrder'

    def soap_IMachine_getBootOrder(self, ps, **kw):
        request = ps.Parse(IMachine_getBootOrderRequestMsg.typecode)
        return request,IMachine_getBootOrderResultMsg()

    soapAction[''] = 'soap_IMachine_getBootOrder'
    root[(IMachine_getBootOrderRequestMsg.typecode.nspname,IMachine_getBootOrderRequestMsg.typecode.pname)] = 'soap_IMachine_getBootOrder'

    def soap_IMachine_attachDevice(self, ps, **kw):
        request = ps.Parse(IMachine_attachDeviceRequestMsg.typecode)
        return request,IMachine_attachDeviceResultMsg()

    soapAction[''] = 'soap_IMachine_attachDevice'
    root[(IMachine_attachDeviceRequestMsg.typecode.nspname,IMachine_attachDeviceRequestMsg.typecode.pname)] = 'soap_IMachine_attachDevice'

    def soap_IMachine_attachDeviceWithoutMedium(self, ps, **kw):
        request = ps.Parse(IMachine_attachDeviceWithoutMediumRequestMsg.typecode)
        return request,IMachine_attachDeviceWithoutMediumResultMsg()

    soapAction[''] = 'soap_IMachine_attachDeviceWithoutMedium'
    root[(IMachine_attachDeviceWithoutMediumRequestMsg.typecode.nspname,IMachine_attachDeviceWithoutMediumRequestMsg.typecode.pname)] = 'soap_IMachine_attachDeviceWithoutMedium'

    def soap_IMachine_detachDevice(self, ps, **kw):
        request = ps.Parse(IMachine_detachDeviceRequestMsg.typecode)
        return request,IMachine_detachDeviceResultMsg()

    soapAction[''] = 'soap_IMachine_detachDevice'
    root[(IMachine_detachDeviceRequestMsg.typecode.nspname,IMachine_detachDeviceRequestMsg.typecode.pname)] = 'soap_IMachine_detachDevice'

    def soap_IMachine_passthroughDevice(self, ps, **kw):
        request = ps.Parse(IMachine_passthroughDeviceRequestMsg.typecode)
        return request,IMachine_passthroughDeviceResultMsg()

    soapAction[''] = 'soap_IMachine_passthroughDevice'
    root[(IMachine_passthroughDeviceRequestMsg.typecode.nspname,IMachine_passthroughDeviceRequestMsg.typecode.pname)] = 'soap_IMachine_passthroughDevice'

    def soap_IMachine_temporaryEjectDevice(self, ps, **kw):
        request = ps.Parse(IMachine_temporaryEjectDeviceRequestMsg.typecode)
        return request,IMachine_temporaryEjectDeviceResultMsg()

    soapAction[''] = 'soap_IMachine_temporaryEjectDevice'
    root[(IMachine_temporaryEjectDeviceRequestMsg.typecode.nspname,IMachine_temporaryEjectDeviceRequestMsg.typecode.pname)] = 'soap_IMachine_temporaryEjectDevice'

    def soap_IMachine_nonRotationalDevice(self, ps, **kw):
        request = ps.Parse(IMachine_nonRotationalDeviceRequestMsg.typecode)
        return request,IMachine_nonRotationalDeviceResultMsg()

    soapAction[''] = 'soap_IMachine_nonRotationalDevice'
    root[(IMachine_nonRotationalDeviceRequestMsg.typecode.nspname,IMachine_nonRotationalDeviceRequestMsg.typecode.pname)] = 'soap_IMachine_nonRotationalDevice'

    def soap_IMachine_setAutoDiscardForDevice(self, ps, **kw):
        request = ps.Parse(IMachine_setAutoDiscardForDeviceRequestMsg.typecode)
        return request,IMachine_setAutoDiscardForDeviceResultMsg()

    soapAction[''] = 'soap_IMachine_setAutoDiscardForDevice'
    root[(IMachine_setAutoDiscardForDeviceRequestMsg.typecode.nspname,IMachine_setAutoDiscardForDeviceRequestMsg.typecode.pname)] = 'soap_IMachine_setAutoDiscardForDevice'

    def soap_IMachine_setHotPluggableForDevice(self, ps, **kw):
        request = ps.Parse(IMachine_setHotPluggableForDeviceRequestMsg.typecode)
        return request,IMachine_setHotPluggableForDeviceResultMsg()

    soapAction[''] = 'soap_IMachine_setHotPluggableForDevice'
    root[(IMachine_setHotPluggableForDeviceRequestMsg.typecode.nspname,IMachine_setHotPluggableForDeviceRequestMsg.typecode.pname)] = 'soap_IMachine_setHotPluggableForDevice'

    def soap_IMachine_setBandwidthGroupForDevice(self, ps, **kw):
        request = ps.Parse(IMachine_setBandwidthGroupForDeviceRequestMsg.typecode)
        return request,IMachine_setBandwidthGroupForDeviceResultMsg()

    soapAction[''] = 'soap_IMachine_setBandwidthGroupForDevice'
    root[(IMachine_setBandwidthGroupForDeviceRequestMsg.typecode.nspname,IMachine_setBandwidthGroupForDeviceRequestMsg.typecode.pname)] = 'soap_IMachine_setBandwidthGroupForDevice'

    def soap_IMachine_setNoBandwidthGroupForDevice(self, ps, **kw):
        request = ps.Parse(IMachine_setNoBandwidthGroupForDeviceRequestMsg.typecode)
        return request,IMachine_setNoBandwidthGroupForDeviceResultMsg()

    soapAction[''] = 'soap_IMachine_setNoBandwidthGroupForDevice'
    root[(IMachine_setNoBandwidthGroupForDeviceRequestMsg.typecode.nspname,IMachine_setNoBandwidthGroupForDeviceRequestMsg.typecode.pname)] = 'soap_IMachine_setNoBandwidthGroupForDevice'

    def soap_IMachine_unmountMedium(self, ps, **kw):
        request = ps.Parse(IMachine_unmountMediumRequestMsg.typecode)
        return request,IMachine_unmountMediumResultMsg()

    soapAction[''] = 'soap_IMachine_unmountMedium'
    root[(IMachine_unmountMediumRequestMsg.typecode.nspname,IMachine_unmountMediumRequestMsg.typecode.pname)] = 'soap_IMachine_unmountMedium'

    def soap_IMachine_mountMedium(self, ps, **kw):
        request = ps.Parse(IMachine_mountMediumRequestMsg.typecode)
        return request,IMachine_mountMediumResultMsg()

    soapAction[''] = 'soap_IMachine_mountMedium'
    root[(IMachine_mountMediumRequestMsg.typecode.nspname,IMachine_mountMediumRequestMsg.typecode.pname)] = 'soap_IMachine_mountMedium'

    def soap_IMachine_getMedium(self, ps, **kw):
        request = ps.Parse(IMachine_getMediumRequestMsg.typecode)
        return request,IMachine_getMediumResultMsg()

    soapAction[''] = 'soap_IMachine_getMedium'
    root[(IMachine_getMediumRequestMsg.typecode.nspname,IMachine_getMediumRequestMsg.typecode.pname)] = 'soap_IMachine_getMedium'

    def soap_IMachine_getMediumAttachmentsOfController(self, ps, **kw):
        request = ps.Parse(IMachine_getMediumAttachmentsOfControllerRequestMsg.typecode)
        return request,IMachine_getMediumAttachmentsOfControllerResultMsg()

    soapAction[''] = 'soap_IMachine_getMediumAttachmentsOfController'
    root[(IMachine_getMediumAttachmentsOfControllerRequestMsg.typecode.nspname,IMachine_getMediumAttachmentsOfControllerRequestMsg.typecode.pname)] = 'soap_IMachine_getMediumAttachmentsOfController'

    def soap_IMachine_getMediumAttachment(self, ps, **kw):
        request = ps.Parse(IMachine_getMediumAttachmentRequestMsg.typecode)
        return request,IMachine_getMediumAttachmentResultMsg()

    soapAction[''] = 'soap_IMachine_getMediumAttachment'
    root[(IMachine_getMediumAttachmentRequestMsg.typecode.nspname,IMachine_getMediumAttachmentRequestMsg.typecode.pname)] = 'soap_IMachine_getMediumAttachment'

    def soap_IMachine_attachHostPCIDevice(self, ps, **kw):
        request = ps.Parse(IMachine_attachHostPCIDeviceRequestMsg.typecode)
        return request,IMachine_attachHostPCIDeviceResultMsg()

    soapAction[''] = 'soap_IMachine_attachHostPCIDevice'
    root[(IMachine_attachHostPCIDeviceRequestMsg.typecode.nspname,IMachine_attachHostPCIDeviceRequestMsg.typecode.pname)] = 'soap_IMachine_attachHostPCIDevice'

    def soap_IMachine_detachHostPCIDevice(self, ps, **kw):
        request = ps.Parse(IMachine_detachHostPCIDeviceRequestMsg.typecode)
        return request,IMachine_detachHostPCIDeviceResultMsg()

    soapAction[''] = 'soap_IMachine_detachHostPCIDevice'
    root[(IMachine_detachHostPCIDeviceRequestMsg.typecode.nspname,IMachine_detachHostPCIDeviceRequestMsg.typecode.pname)] = 'soap_IMachine_detachHostPCIDevice'

    def soap_IMachine_getNetworkAdapter(self, ps, **kw):
        request = ps.Parse(IMachine_getNetworkAdapterRequestMsg.typecode)
        return request,IMachine_getNetworkAdapterResultMsg()

    soapAction[''] = 'soap_IMachine_getNetworkAdapter'
    root[(IMachine_getNetworkAdapterRequestMsg.typecode.nspname,IMachine_getNetworkAdapterRequestMsg.typecode.pname)] = 'soap_IMachine_getNetworkAdapter'

    def soap_IMachine_addStorageController(self, ps, **kw):
        request = ps.Parse(IMachine_addStorageControllerRequestMsg.typecode)
        return request,IMachine_addStorageControllerResultMsg()

    soapAction[''] = 'soap_IMachine_addStorageController'
    root[(IMachine_addStorageControllerRequestMsg.typecode.nspname,IMachine_addStorageControllerRequestMsg.typecode.pname)] = 'soap_IMachine_addStorageController'

    def soap_IMachine_getStorageControllerByName(self, ps, **kw):
        request = ps.Parse(IMachine_getStorageControllerByNameRequestMsg.typecode)
        return request,IMachine_getStorageControllerByNameResultMsg()

    soapAction[''] = 'soap_IMachine_getStorageControllerByName'
    root[(IMachine_getStorageControllerByNameRequestMsg.typecode.nspname,IMachine_getStorageControllerByNameRequestMsg.typecode.pname)] = 'soap_IMachine_getStorageControllerByName'

    def soap_IMachine_getStorageControllerByInstance(self, ps, **kw):
        request = ps.Parse(IMachine_getStorageControllerByInstanceRequestMsg.typecode)
        return request,IMachine_getStorageControllerByInstanceResultMsg()

    soapAction[''] = 'soap_IMachine_getStorageControllerByInstance'
    root[(IMachine_getStorageControllerByInstanceRequestMsg.typecode.nspname,IMachine_getStorageControllerByInstanceRequestMsg.typecode.pname)] = 'soap_IMachine_getStorageControllerByInstance'

    def soap_IMachine_removeStorageController(self, ps, **kw):
        request = ps.Parse(IMachine_removeStorageControllerRequestMsg.typecode)
        return request,IMachine_removeStorageControllerResultMsg()

    soapAction[''] = 'soap_IMachine_removeStorageController'
    root[(IMachine_removeStorageControllerRequestMsg.typecode.nspname,IMachine_removeStorageControllerRequestMsg.typecode.pname)] = 'soap_IMachine_removeStorageController'

    def soap_IMachine_setStorageControllerBootable(self, ps, **kw):
        request = ps.Parse(IMachine_setStorageControllerBootableRequestMsg.typecode)
        return request,IMachine_setStorageControllerBootableResultMsg()

    soapAction[''] = 'soap_IMachine_setStorageControllerBootable'
    root[(IMachine_setStorageControllerBootableRequestMsg.typecode.nspname,IMachine_setStorageControllerBootableRequestMsg.typecode.pname)] = 'soap_IMachine_setStorageControllerBootable'

    def soap_IMachine_addUSBController(self, ps, **kw):
        request = ps.Parse(IMachine_addUSBControllerRequestMsg.typecode)
        return request,IMachine_addUSBControllerResultMsg()

    soapAction[''] = 'soap_IMachine_addUSBController'
    root[(IMachine_addUSBControllerRequestMsg.typecode.nspname,IMachine_addUSBControllerRequestMsg.typecode.pname)] = 'soap_IMachine_addUSBController'

    def soap_IMachine_removeUSBController(self, ps, **kw):
        request = ps.Parse(IMachine_removeUSBControllerRequestMsg.typecode)
        return request,IMachine_removeUSBControllerResultMsg()

    soapAction[''] = 'soap_IMachine_removeUSBController'
    root[(IMachine_removeUSBControllerRequestMsg.typecode.nspname,IMachine_removeUSBControllerRequestMsg.typecode.pname)] = 'soap_IMachine_removeUSBController'

    def soap_IMachine_getUSBControllerByName(self, ps, **kw):
        request = ps.Parse(IMachine_getUSBControllerByNameRequestMsg.typecode)
        return request,IMachine_getUSBControllerByNameResultMsg()

    soapAction[''] = 'soap_IMachine_getUSBControllerByName'
    root[(IMachine_getUSBControllerByNameRequestMsg.typecode.nspname,IMachine_getUSBControllerByNameRequestMsg.typecode.pname)] = 'soap_IMachine_getUSBControllerByName'

    def soap_IMachine_getUSBControllerCountByType(self, ps, **kw):
        request = ps.Parse(IMachine_getUSBControllerCountByTypeRequestMsg.typecode)
        return request,IMachine_getUSBControllerCountByTypeResultMsg()

    soapAction[''] = 'soap_IMachine_getUSBControllerCountByType'
    root[(IMachine_getUSBControllerCountByTypeRequestMsg.typecode.nspname,IMachine_getUSBControllerCountByTypeRequestMsg.typecode.pname)] = 'soap_IMachine_getUSBControllerCountByType'

    def soap_IMachine_getSerialPort(self, ps, **kw):
        request = ps.Parse(IMachine_getSerialPortRequestMsg.typecode)
        return request,IMachine_getSerialPortResultMsg()

    soapAction[''] = 'soap_IMachine_getSerialPort'
    root[(IMachine_getSerialPortRequestMsg.typecode.nspname,IMachine_getSerialPortRequestMsg.typecode.pname)] = 'soap_IMachine_getSerialPort'

    def soap_IMachine_getParallelPort(self, ps, **kw):
        request = ps.Parse(IMachine_getParallelPortRequestMsg.typecode)
        return request,IMachine_getParallelPortResultMsg()

    soapAction[''] = 'soap_IMachine_getParallelPort'
    root[(IMachine_getParallelPortRequestMsg.typecode.nspname,IMachine_getParallelPortRequestMsg.typecode.pname)] = 'soap_IMachine_getParallelPort'

    def soap_IMachine_getExtraDataKeys(self, ps, **kw):
        request = ps.Parse(IMachine_getExtraDataKeysRequestMsg.typecode)
        return request,IMachine_getExtraDataKeysResultMsg()

    soapAction[''] = 'soap_IMachine_getExtraDataKeys'
    root[(IMachine_getExtraDataKeysRequestMsg.typecode.nspname,IMachine_getExtraDataKeysRequestMsg.typecode.pname)] = 'soap_IMachine_getExtraDataKeys'

    def soap_IMachine_getExtraData(self, ps, **kw):
        request = ps.Parse(IMachine_getExtraDataRequestMsg.typecode)
        return request,IMachine_getExtraDataResultMsg()

    soapAction[''] = 'soap_IMachine_getExtraData'
    root[(IMachine_getExtraDataRequestMsg.typecode.nspname,IMachine_getExtraDataRequestMsg.typecode.pname)] = 'soap_IMachine_getExtraData'

    def soap_IMachine_setExtraData(self, ps, **kw):
        request = ps.Parse(IMachine_setExtraDataRequestMsg.typecode)
        return request,IMachine_setExtraDataResultMsg()

    soapAction[''] = 'soap_IMachine_setExtraData'
    root[(IMachine_setExtraDataRequestMsg.typecode.nspname,IMachine_setExtraDataRequestMsg.typecode.pname)] = 'soap_IMachine_setExtraData'

    def soap_IMachine_getCPUProperty(self, ps, **kw):
        request = ps.Parse(IMachine_getCPUPropertyRequestMsg.typecode)
        return request,IMachine_getCPUPropertyResultMsg()

    soapAction[''] = 'soap_IMachine_getCPUProperty'
    root[(IMachine_getCPUPropertyRequestMsg.typecode.nspname,IMachine_getCPUPropertyRequestMsg.typecode.pname)] = 'soap_IMachine_getCPUProperty'

    def soap_IMachine_setCPUProperty(self, ps, **kw):
        request = ps.Parse(IMachine_setCPUPropertyRequestMsg.typecode)
        return request,IMachine_setCPUPropertyResultMsg()

    soapAction[''] = 'soap_IMachine_setCPUProperty'
    root[(IMachine_setCPUPropertyRequestMsg.typecode.nspname,IMachine_setCPUPropertyRequestMsg.typecode.pname)] = 'soap_IMachine_setCPUProperty'

    def soap_IMachine_getCPUIDLeaf(self, ps, **kw):
        request = ps.Parse(IMachine_getCPUIDLeafRequestMsg.typecode)
        return request,IMachine_getCPUIDLeafResultMsg()

    soapAction[''] = 'soap_IMachine_getCPUIDLeaf'
    root[(IMachine_getCPUIDLeafRequestMsg.typecode.nspname,IMachine_getCPUIDLeafRequestMsg.typecode.pname)] = 'soap_IMachine_getCPUIDLeaf'

    def soap_IMachine_setCPUIDLeaf(self, ps, **kw):
        request = ps.Parse(IMachine_setCPUIDLeafRequestMsg.typecode)
        return request,IMachine_setCPUIDLeafResultMsg()

    soapAction[''] = 'soap_IMachine_setCPUIDLeaf'
    root[(IMachine_setCPUIDLeafRequestMsg.typecode.nspname,IMachine_setCPUIDLeafRequestMsg.typecode.pname)] = 'soap_IMachine_setCPUIDLeaf'

    def soap_IMachine_removeCPUIDLeaf(self, ps, **kw):
        request = ps.Parse(IMachine_removeCPUIDLeafRequestMsg.typecode)
        return request,IMachine_removeCPUIDLeafResultMsg()

    soapAction[''] = 'soap_IMachine_removeCPUIDLeaf'
    root[(IMachine_removeCPUIDLeafRequestMsg.typecode.nspname,IMachine_removeCPUIDLeafRequestMsg.typecode.pname)] = 'soap_IMachine_removeCPUIDLeaf'

    def soap_IMachine_removeAllCPUIDLeaves(self, ps, **kw):
        request = ps.Parse(IMachine_removeAllCPUIDLeavesRequestMsg.typecode)
        return request,IMachine_removeAllCPUIDLeavesResultMsg()

    soapAction[''] = 'soap_IMachine_removeAllCPUIDLeaves'
    root[(IMachine_removeAllCPUIDLeavesRequestMsg.typecode.nspname,IMachine_removeAllCPUIDLeavesRequestMsg.typecode.pname)] = 'soap_IMachine_removeAllCPUIDLeaves'

    def soap_IMachine_getHWVirtExProperty(self, ps, **kw):
        request = ps.Parse(IMachine_getHWVirtExPropertyRequestMsg.typecode)
        return request,IMachine_getHWVirtExPropertyResultMsg()

    soapAction[''] = 'soap_IMachine_getHWVirtExProperty'
    root[(IMachine_getHWVirtExPropertyRequestMsg.typecode.nspname,IMachine_getHWVirtExPropertyRequestMsg.typecode.pname)] = 'soap_IMachine_getHWVirtExProperty'

    def soap_IMachine_setHWVirtExProperty(self, ps, **kw):
        request = ps.Parse(IMachine_setHWVirtExPropertyRequestMsg.typecode)
        return request,IMachine_setHWVirtExPropertyResultMsg()

    soapAction[''] = 'soap_IMachine_setHWVirtExProperty'
    root[(IMachine_setHWVirtExPropertyRequestMsg.typecode.nspname,IMachine_setHWVirtExPropertyRequestMsg.typecode.pname)] = 'soap_IMachine_setHWVirtExProperty'

    def soap_IMachine_setSettingsFilePath(self, ps, **kw):
        request = ps.Parse(IMachine_setSettingsFilePathRequestMsg.typecode)
        return request,IMachine_setSettingsFilePathResultMsg()

    soapAction[''] = 'soap_IMachine_setSettingsFilePath'
    root[(IMachine_setSettingsFilePathRequestMsg.typecode.nspname,IMachine_setSettingsFilePathRequestMsg.typecode.pname)] = 'soap_IMachine_setSettingsFilePath'

    def soap_IMachine_saveSettings(self, ps, **kw):
        request = ps.Parse(IMachine_saveSettingsRequestMsg.typecode)
        return request,IMachine_saveSettingsResultMsg()

    soapAction[''] = 'soap_IMachine_saveSettings'
    root[(IMachine_saveSettingsRequestMsg.typecode.nspname,IMachine_saveSettingsRequestMsg.typecode.pname)] = 'soap_IMachine_saveSettings'

    def soap_IMachine_discardSettings(self, ps, **kw):
        request = ps.Parse(IMachine_discardSettingsRequestMsg.typecode)
        return request,IMachine_discardSettingsResultMsg()

    soapAction[''] = 'soap_IMachine_discardSettings'
    root[(IMachine_discardSettingsRequestMsg.typecode.nspname,IMachine_discardSettingsRequestMsg.typecode.pname)] = 'soap_IMachine_discardSettings'

    def soap_IMachine_unregister(self, ps, **kw):
        request = ps.Parse(IMachine_unregisterRequestMsg.typecode)
        return request,IMachine_unregisterResultMsg()

    soapAction[''] = 'soap_IMachine_unregister'
    root[(IMachine_unregisterRequestMsg.typecode.nspname,IMachine_unregisterRequestMsg.typecode.pname)] = 'soap_IMachine_unregister'

    def soap_IMachine_deleteConfig(self, ps, **kw):
        request = ps.Parse(IMachine_deleteConfigRequestMsg.typecode)
        return request,IMachine_deleteConfigResultMsg()

    soapAction[''] = 'soap_IMachine_deleteConfig'
    root[(IMachine_deleteConfigRequestMsg.typecode.nspname,IMachine_deleteConfigRequestMsg.typecode.pname)] = 'soap_IMachine_deleteConfig'

    def soap_IMachine_exportTo(self, ps, **kw):
        request = ps.Parse(IMachine_exportToRequestMsg.typecode)
        return request,IMachine_exportToResultMsg()

    soapAction[''] = 'soap_IMachine_exportTo'
    root[(IMachine_exportToRequestMsg.typecode.nspname,IMachine_exportToRequestMsg.typecode.pname)] = 'soap_IMachine_exportTo'

    def soap_IMachine_findSnapshot(self, ps, **kw):
        request = ps.Parse(IMachine_findSnapshotRequestMsg.typecode)
        return request,IMachine_findSnapshotResultMsg()

    soapAction[''] = 'soap_IMachine_findSnapshot'
    root[(IMachine_findSnapshotRequestMsg.typecode.nspname,IMachine_findSnapshotRequestMsg.typecode.pname)] = 'soap_IMachine_findSnapshot'

    def soap_IMachine_createSharedFolder(self, ps, **kw):
        request = ps.Parse(IMachine_createSharedFolderRequestMsg.typecode)
        return request,IMachine_createSharedFolderResultMsg()

    soapAction[''] = 'soap_IMachine_createSharedFolder'
    root[(IMachine_createSharedFolderRequestMsg.typecode.nspname,IMachine_createSharedFolderRequestMsg.typecode.pname)] = 'soap_IMachine_createSharedFolder'

    def soap_IMachine_removeSharedFolder(self, ps, **kw):
        request = ps.Parse(IMachine_removeSharedFolderRequestMsg.typecode)
        return request,IMachine_removeSharedFolderResultMsg()

    soapAction[''] = 'soap_IMachine_removeSharedFolder'
    root[(IMachine_removeSharedFolderRequestMsg.typecode.nspname,IMachine_removeSharedFolderRequestMsg.typecode.pname)] = 'soap_IMachine_removeSharedFolder'

    def soap_IMachine_canShowConsoleWindow(self, ps, **kw):
        request = ps.Parse(IMachine_canShowConsoleWindowRequestMsg.typecode)
        return request,IMachine_canShowConsoleWindowResultMsg()

    soapAction[''] = 'soap_IMachine_canShowConsoleWindow'
    root[(IMachine_canShowConsoleWindowRequestMsg.typecode.nspname,IMachine_canShowConsoleWindowRequestMsg.typecode.pname)] = 'soap_IMachine_canShowConsoleWindow'

    def soap_IMachine_showConsoleWindow(self, ps, **kw):
        request = ps.Parse(IMachine_showConsoleWindowRequestMsg.typecode)
        return request,IMachine_showConsoleWindowResultMsg()

    soapAction[''] = 'soap_IMachine_showConsoleWindow'
    root[(IMachine_showConsoleWindowRequestMsg.typecode.nspname,IMachine_showConsoleWindowRequestMsg.typecode.pname)] = 'soap_IMachine_showConsoleWindow'

    def soap_IMachine_getGuestProperty(self, ps, **kw):
        request = ps.Parse(IMachine_getGuestPropertyRequestMsg.typecode)
        return request,IMachine_getGuestPropertyResultMsg()

    soapAction[''] = 'soap_IMachine_getGuestProperty'
    root[(IMachine_getGuestPropertyRequestMsg.typecode.nspname,IMachine_getGuestPropertyRequestMsg.typecode.pname)] = 'soap_IMachine_getGuestProperty'

    def soap_IMachine_getGuestPropertyValue(self, ps, **kw):
        request = ps.Parse(IMachine_getGuestPropertyValueRequestMsg.typecode)
        return request,IMachine_getGuestPropertyValueResultMsg()

    soapAction[''] = 'soap_IMachine_getGuestPropertyValue'
    root[(IMachine_getGuestPropertyValueRequestMsg.typecode.nspname,IMachine_getGuestPropertyValueRequestMsg.typecode.pname)] = 'soap_IMachine_getGuestPropertyValue'

    def soap_IMachine_getGuestPropertyTimestamp(self, ps, **kw):
        request = ps.Parse(IMachine_getGuestPropertyTimestampRequestMsg.typecode)
        return request,IMachine_getGuestPropertyTimestampResultMsg()

    soapAction[''] = 'soap_IMachine_getGuestPropertyTimestamp'
    root[(IMachine_getGuestPropertyTimestampRequestMsg.typecode.nspname,IMachine_getGuestPropertyTimestampRequestMsg.typecode.pname)] = 'soap_IMachine_getGuestPropertyTimestamp'

    def soap_IMachine_setGuestProperty(self, ps, **kw):
        request = ps.Parse(IMachine_setGuestPropertyRequestMsg.typecode)
        return request,IMachine_setGuestPropertyResultMsg()

    soapAction[''] = 'soap_IMachine_setGuestProperty'
    root[(IMachine_setGuestPropertyRequestMsg.typecode.nspname,IMachine_setGuestPropertyRequestMsg.typecode.pname)] = 'soap_IMachine_setGuestProperty'

    def soap_IMachine_setGuestPropertyValue(self, ps, **kw):
        request = ps.Parse(IMachine_setGuestPropertyValueRequestMsg.typecode)
        return request,IMachine_setGuestPropertyValueResultMsg()

    soapAction[''] = 'soap_IMachine_setGuestPropertyValue'
    root[(IMachine_setGuestPropertyValueRequestMsg.typecode.nspname,IMachine_setGuestPropertyValueRequestMsg.typecode.pname)] = 'soap_IMachine_setGuestPropertyValue'

    def soap_IMachine_deleteGuestProperty(self, ps, **kw):
        request = ps.Parse(IMachine_deleteGuestPropertyRequestMsg.typecode)
        return request,IMachine_deleteGuestPropertyResultMsg()

    soapAction[''] = 'soap_IMachine_deleteGuestProperty'
    root[(IMachine_deleteGuestPropertyRequestMsg.typecode.nspname,IMachine_deleteGuestPropertyRequestMsg.typecode.pname)] = 'soap_IMachine_deleteGuestProperty'

    def soap_IMachine_enumerateGuestProperties(self, ps, **kw):
        request = ps.Parse(IMachine_enumerateGuestPropertiesRequestMsg.typecode)
        return request,IMachine_enumerateGuestPropertiesResultMsg()

    soapAction[''] = 'soap_IMachine_enumerateGuestProperties'
    root[(IMachine_enumerateGuestPropertiesRequestMsg.typecode.nspname,IMachine_enumerateGuestPropertiesRequestMsg.typecode.pname)] = 'soap_IMachine_enumerateGuestProperties'

    def soap_IMachine_querySavedGuestScreenInfo(self, ps, **kw):
        request = ps.Parse(IMachine_querySavedGuestScreenInfoRequestMsg.typecode)
        return request,IMachine_querySavedGuestScreenInfoResultMsg()

    soapAction[''] = 'soap_IMachine_querySavedGuestScreenInfo'
    root[(IMachine_querySavedGuestScreenInfoRequestMsg.typecode.nspname,IMachine_querySavedGuestScreenInfoRequestMsg.typecode.pname)] = 'soap_IMachine_querySavedGuestScreenInfo'

    def soap_IMachine_readSavedThumbnailToArray(self, ps, **kw):
        request = ps.Parse(IMachine_readSavedThumbnailToArrayRequestMsg.typecode)
        return request,IMachine_readSavedThumbnailToArrayResultMsg()

    soapAction[''] = 'soap_IMachine_readSavedThumbnailToArray'
    root[(IMachine_readSavedThumbnailToArrayRequestMsg.typecode.nspname,IMachine_readSavedThumbnailToArrayRequestMsg.typecode.pname)] = 'soap_IMachine_readSavedThumbnailToArray'

    def soap_IMachine_querySavedScreenshotInfo(self, ps, **kw):
        request = ps.Parse(IMachine_querySavedScreenshotInfoRequestMsg.typecode)
        return request,IMachine_querySavedScreenshotInfoResultMsg()

    soapAction[''] = 'soap_IMachine_querySavedScreenshotInfo'
    root[(IMachine_querySavedScreenshotInfoRequestMsg.typecode.nspname,IMachine_querySavedScreenshotInfoRequestMsg.typecode.pname)] = 'soap_IMachine_querySavedScreenshotInfo'

    def soap_IMachine_readSavedScreenshotToArray(self, ps, **kw):
        request = ps.Parse(IMachine_readSavedScreenshotToArrayRequestMsg.typecode)
        return request,IMachine_readSavedScreenshotToArrayResultMsg()

    soapAction[''] = 'soap_IMachine_readSavedScreenshotToArray'
    root[(IMachine_readSavedScreenshotToArrayRequestMsg.typecode.nspname,IMachine_readSavedScreenshotToArrayRequestMsg.typecode.pname)] = 'soap_IMachine_readSavedScreenshotToArray'

    def soap_IMachine_hotPlugCPU(self, ps, **kw):
        request = ps.Parse(IMachine_hotPlugCPURequestMsg.typecode)
        return request,IMachine_hotPlugCPUResultMsg()

    soapAction[''] = 'soap_IMachine_hotPlugCPU'
    root[(IMachine_hotPlugCPURequestMsg.typecode.nspname,IMachine_hotPlugCPURequestMsg.typecode.pname)] = 'soap_IMachine_hotPlugCPU'

    def soap_IMachine_hotUnplugCPU(self, ps, **kw):
        request = ps.Parse(IMachine_hotUnplugCPURequestMsg.typecode)
        return request,IMachine_hotUnplugCPUResultMsg()

    soapAction[''] = 'soap_IMachine_hotUnplugCPU'
    root[(IMachine_hotUnplugCPURequestMsg.typecode.nspname,IMachine_hotUnplugCPURequestMsg.typecode.pname)] = 'soap_IMachine_hotUnplugCPU'

    def soap_IMachine_getCPUStatus(self, ps, **kw):
        request = ps.Parse(IMachine_getCPUStatusRequestMsg.typecode)
        return request,IMachine_getCPUStatusResultMsg()

    soapAction[''] = 'soap_IMachine_getCPUStatus'
    root[(IMachine_getCPUStatusRequestMsg.typecode.nspname,IMachine_getCPUStatusRequestMsg.typecode.pname)] = 'soap_IMachine_getCPUStatus'

    def soap_IMachine_getEffectiveParavirtProvider(self, ps, **kw):
        request = ps.Parse(IMachine_getEffectiveParavirtProviderRequestMsg.typecode)
        return request,IMachine_getEffectiveParavirtProviderResultMsg()

    soapAction[''] = 'soap_IMachine_getEffectiveParavirtProvider'
    root[(IMachine_getEffectiveParavirtProviderRequestMsg.typecode.nspname,IMachine_getEffectiveParavirtProviderRequestMsg.typecode.pname)] = 'soap_IMachine_getEffectiveParavirtProvider'

    def soap_IMachine_queryLogFilename(self, ps, **kw):
        request = ps.Parse(IMachine_queryLogFilenameRequestMsg.typecode)
        return request,IMachine_queryLogFilenameResultMsg()

    soapAction[''] = 'soap_IMachine_queryLogFilename'
    root[(IMachine_queryLogFilenameRequestMsg.typecode.nspname,IMachine_queryLogFilenameRequestMsg.typecode.pname)] = 'soap_IMachine_queryLogFilename'

    def soap_IMachine_readLog(self, ps, **kw):
        request = ps.Parse(IMachine_readLogRequestMsg.typecode)
        return request,IMachine_readLogResultMsg()

    soapAction[''] = 'soap_IMachine_readLog'
    root[(IMachine_readLogRequestMsg.typecode.nspname,IMachine_readLogRequestMsg.typecode.pname)] = 'soap_IMachine_readLog'

    def soap_IMachine_cloneTo(self, ps, **kw):
        request = ps.Parse(IMachine_cloneToRequestMsg.typecode)
        return request,IMachine_cloneToResultMsg()

    soapAction[''] = 'soap_IMachine_cloneTo'
    root[(IMachine_cloneToRequestMsg.typecode.nspname,IMachine_cloneToRequestMsg.typecode.pname)] = 'soap_IMachine_cloneTo'

    def soap_IMachine_saveState(self, ps, **kw):
        request = ps.Parse(IMachine_saveStateRequestMsg.typecode)
        return request,IMachine_saveStateResultMsg()

    soapAction[''] = 'soap_IMachine_saveState'
    root[(IMachine_saveStateRequestMsg.typecode.nspname,IMachine_saveStateRequestMsg.typecode.pname)] = 'soap_IMachine_saveState'

    def soap_IMachine_adoptSavedState(self, ps, **kw):
        request = ps.Parse(IMachine_adoptSavedStateRequestMsg.typecode)
        return request,IMachine_adoptSavedStateResultMsg()

    soapAction[''] = 'soap_IMachine_adoptSavedState'
    root[(IMachine_adoptSavedStateRequestMsg.typecode.nspname,IMachine_adoptSavedStateRequestMsg.typecode.pname)] = 'soap_IMachine_adoptSavedState'

    def soap_IMachine_discardSavedState(self, ps, **kw):
        request = ps.Parse(IMachine_discardSavedStateRequestMsg.typecode)
        return request,IMachine_discardSavedStateResultMsg()

    soapAction[''] = 'soap_IMachine_discardSavedState'
    root[(IMachine_discardSavedStateRequestMsg.typecode.nspname,IMachine_discardSavedStateRequestMsg.typecode.pname)] = 'soap_IMachine_discardSavedState'

    def soap_IMachine_takeSnapshot(self, ps, **kw):
        request = ps.Parse(IMachine_takeSnapshotRequestMsg.typecode)
        return request,IMachine_takeSnapshotResultMsg()

    soapAction[''] = 'soap_IMachine_takeSnapshot'
    root[(IMachine_takeSnapshotRequestMsg.typecode.nspname,IMachine_takeSnapshotRequestMsg.typecode.pname)] = 'soap_IMachine_takeSnapshot'

    def soap_IMachine_deleteSnapshot(self, ps, **kw):
        request = ps.Parse(IMachine_deleteSnapshotRequestMsg.typecode)
        return request,IMachine_deleteSnapshotResultMsg()

    soapAction[''] = 'soap_IMachine_deleteSnapshot'
    root[(IMachine_deleteSnapshotRequestMsg.typecode.nspname,IMachine_deleteSnapshotRequestMsg.typecode.pname)] = 'soap_IMachine_deleteSnapshot'

    def soap_IMachine_deleteSnapshotAndAllChildren(self, ps, **kw):
        request = ps.Parse(IMachine_deleteSnapshotAndAllChildrenRequestMsg.typecode)
        return request,IMachine_deleteSnapshotAndAllChildrenResultMsg()

    soapAction[''] = 'soap_IMachine_deleteSnapshotAndAllChildren'
    root[(IMachine_deleteSnapshotAndAllChildrenRequestMsg.typecode.nspname,IMachine_deleteSnapshotAndAllChildrenRequestMsg.typecode.pname)] = 'soap_IMachine_deleteSnapshotAndAllChildren'

    def soap_IMachine_deleteSnapshotRange(self, ps, **kw):
        request = ps.Parse(IMachine_deleteSnapshotRangeRequestMsg.typecode)
        return request,IMachine_deleteSnapshotRangeResultMsg()

    soapAction[''] = 'soap_IMachine_deleteSnapshotRange'
    root[(IMachine_deleteSnapshotRangeRequestMsg.typecode.nspname,IMachine_deleteSnapshotRangeRequestMsg.typecode.pname)] = 'soap_IMachine_deleteSnapshotRange'

    def soap_IMachine_restoreSnapshot(self, ps, **kw):
        request = ps.Parse(IMachine_restoreSnapshotRequestMsg.typecode)
        return request,IMachine_restoreSnapshotResultMsg()

    soapAction[''] = 'soap_IMachine_restoreSnapshot'
    root[(IMachine_restoreSnapshotRequestMsg.typecode.nspname,IMachine_restoreSnapshotRequestMsg.typecode.pname)] = 'soap_IMachine_restoreSnapshot'

    def soap_IMachine_applyDefaults(self, ps, **kw):
        request = ps.Parse(IMachine_applyDefaultsRequestMsg.typecode)
        return request,IMachine_applyDefaultsResultMsg()

    soapAction[''] = 'soap_IMachine_applyDefaults'
    root[(IMachine_applyDefaultsRequestMsg.typecode.nspname,IMachine_applyDefaultsRequestMsg.typecode.pname)] = 'soap_IMachine_applyDefaults'

    def soap_IEmulatedUSB_getWebcams(self, ps, **kw):
        request = ps.Parse(IEmulatedUSB_getWebcamsRequestMsg.typecode)
        return request,IEmulatedUSB_getWebcamsResultMsg()

    soapAction[''] = 'soap_IEmulatedUSB_getWebcams'
    root[(IEmulatedUSB_getWebcamsRequestMsg.typecode.nspname,IEmulatedUSB_getWebcamsRequestMsg.typecode.pname)] = 'soap_IEmulatedUSB_getWebcams'

    def soap_IEmulatedUSB_webcamAttach(self, ps, **kw):
        request = ps.Parse(IEmulatedUSB_webcamAttachRequestMsg.typecode)
        return request,IEmulatedUSB_webcamAttachResultMsg()

    soapAction[''] = 'soap_IEmulatedUSB_webcamAttach'
    root[(IEmulatedUSB_webcamAttachRequestMsg.typecode.nspname,IEmulatedUSB_webcamAttachRequestMsg.typecode.pname)] = 'soap_IEmulatedUSB_webcamAttach'

    def soap_IEmulatedUSB_webcamDetach(self, ps, **kw):
        request = ps.Parse(IEmulatedUSB_webcamDetachRequestMsg.typecode)
        return request,IEmulatedUSB_webcamDetachResultMsg()

    soapAction[''] = 'soap_IEmulatedUSB_webcamDetach'
    root[(IEmulatedUSB_webcamDetachRequestMsg.typecode.nspname,IEmulatedUSB_webcamDetachRequestMsg.typecode.pname)] = 'soap_IEmulatedUSB_webcamDetach'

    def soap_IConsole_getMachine(self, ps, **kw):
        request = ps.Parse(IConsole_getMachineRequestMsg.typecode)
        return request,IConsole_getMachineResultMsg()

    soapAction[''] = 'soap_IConsole_getMachine'
    root[(IConsole_getMachineRequestMsg.typecode.nspname,IConsole_getMachineRequestMsg.typecode.pname)] = 'soap_IConsole_getMachine'

    def soap_IConsole_getState(self, ps, **kw):
        request = ps.Parse(IConsole_getStateRequestMsg.typecode)
        return request,IConsole_getStateResultMsg()

    soapAction[''] = 'soap_IConsole_getState'
    root[(IConsole_getStateRequestMsg.typecode.nspname,IConsole_getStateRequestMsg.typecode.pname)] = 'soap_IConsole_getState'

    def soap_IConsole_getGuest(self, ps, **kw):
        request = ps.Parse(IConsole_getGuestRequestMsg.typecode)
        return request,IConsole_getGuestResultMsg()

    soapAction[''] = 'soap_IConsole_getGuest'
    root[(IConsole_getGuestRequestMsg.typecode.nspname,IConsole_getGuestRequestMsg.typecode.pname)] = 'soap_IConsole_getGuest'

    def soap_IConsole_getKeyboard(self, ps, **kw):
        request = ps.Parse(IConsole_getKeyboardRequestMsg.typecode)
        return request,IConsole_getKeyboardResultMsg()

    soapAction[''] = 'soap_IConsole_getKeyboard'
    root[(IConsole_getKeyboardRequestMsg.typecode.nspname,IConsole_getKeyboardRequestMsg.typecode.pname)] = 'soap_IConsole_getKeyboard'

    def soap_IConsole_getMouse(self, ps, **kw):
        request = ps.Parse(IConsole_getMouseRequestMsg.typecode)
        return request,IConsole_getMouseResultMsg()

    soapAction[''] = 'soap_IConsole_getMouse'
    root[(IConsole_getMouseRequestMsg.typecode.nspname,IConsole_getMouseRequestMsg.typecode.pname)] = 'soap_IConsole_getMouse'

    def soap_IConsole_getDisplay(self, ps, **kw):
        request = ps.Parse(IConsole_getDisplayRequestMsg.typecode)
        return request,IConsole_getDisplayResultMsg()

    soapAction[''] = 'soap_IConsole_getDisplay'
    root[(IConsole_getDisplayRequestMsg.typecode.nspname,IConsole_getDisplayRequestMsg.typecode.pname)] = 'soap_IConsole_getDisplay'

    def soap_IConsole_getDebugger(self, ps, **kw):
        request = ps.Parse(IConsole_getDebuggerRequestMsg.typecode)
        return request,IConsole_getDebuggerResultMsg()

    soapAction[''] = 'soap_IConsole_getDebugger'
    root[(IConsole_getDebuggerRequestMsg.typecode.nspname,IConsole_getDebuggerRequestMsg.typecode.pname)] = 'soap_IConsole_getDebugger'

    def soap_IConsole_getUSBDevices(self, ps, **kw):
        request = ps.Parse(IConsole_getUSBDevicesRequestMsg.typecode)
        return request,IConsole_getUSBDevicesResultMsg()

    soapAction[''] = 'soap_IConsole_getUSBDevices'
    root[(IConsole_getUSBDevicesRequestMsg.typecode.nspname,IConsole_getUSBDevicesRequestMsg.typecode.pname)] = 'soap_IConsole_getUSBDevices'

    def soap_IConsole_getRemoteUSBDevices(self, ps, **kw):
        request = ps.Parse(IConsole_getRemoteUSBDevicesRequestMsg.typecode)
        return request,IConsole_getRemoteUSBDevicesResultMsg()

    soapAction[''] = 'soap_IConsole_getRemoteUSBDevices'
    root[(IConsole_getRemoteUSBDevicesRequestMsg.typecode.nspname,IConsole_getRemoteUSBDevicesRequestMsg.typecode.pname)] = 'soap_IConsole_getRemoteUSBDevices'

    def soap_IConsole_getSharedFolders(self, ps, **kw):
        request = ps.Parse(IConsole_getSharedFoldersRequestMsg.typecode)
        return request,IConsole_getSharedFoldersResultMsg()

    soapAction[''] = 'soap_IConsole_getSharedFolders'
    root[(IConsole_getSharedFoldersRequestMsg.typecode.nspname,IConsole_getSharedFoldersRequestMsg.typecode.pname)] = 'soap_IConsole_getSharedFolders'

    def soap_IConsole_getVRDEServerInfo(self, ps, **kw):
        request = ps.Parse(IConsole_getVRDEServerInfoRequestMsg.typecode)
        return request,IConsole_getVRDEServerInfoResultMsg()

    soapAction[''] = 'soap_IConsole_getVRDEServerInfo'
    root[(IConsole_getVRDEServerInfoRequestMsg.typecode.nspname,IConsole_getVRDEServerInfoRequestMsg.typecode.pname)] = 'soap_IConsole_getVRDEServerInfo'

    def soap_IConsole_getEventSource(self, ps, **kw):
        request = ps.Parse(IConsole_getEventSourceRequestMsg.typecode)
        return request,IConsole_getEventSourceResultMsg()

    soapAction[''] = 'soap_IConsole_getEventSource'
    root[(IConsole_getEventSourceRequestMsg.typecode.nspname,IConsole_getEventSourceRequestMsg.typecode.pname)] = 'soap_IConsole_getEventSource'

    def soap_IConsole_getAttachedPCIDevices(self, ps, **kw):
        request = ps.Parse(IConsole_getAttachedPCIDevicesRequestMsg.typecode)
        return request,IConsole_getAttachedPCIDevicesResultMsg()

    soapAction[''] = 'soap_IConsole_getAttachedPCIDevices'
    root[(IConsole_getAttachedPCIDevicesRequestMsg.typecode.nspname,IConsole_getAttachedPCIDevicesRequestMsg.typecode.pname)] = 'soap_IConsole_getAttachedPCIDevices'

    def soap_IConsole_getUseHostClipboard(self, ps, **kw):
        request = ps.Parse(IConsole_getUseHostClipboardRequestMsg.typecode)
        return request,IConsole_getUseHostClipboardResultMsg()

    soapAction[''] = 'soap_IConsole_getUseHostClipboard'
    root[(IConsole_getUseHostClipboardRequestMsg.typecode.nspname,IConsole_getUseHostClipboardRequestMsg.typecode.pname)] = 'soap_IConsole_getUseHostClipboard'

    def soap_IConsole_setUseHostClipboard(self, ps, **kw):
        request = ps.Parse(IConsole_setUseHostClipboardRequestMsg.typecode)
        return request,IConsole_setUseHostClipboardResultMsg()

    soapAction[''] = 'soap_IConsole_setUseHostClipboard'
    root[(IConsole_setUseHostClipboardRequestMsg.typecode.nspname,IConsole_setUseHostClipboardRequestMsg.typecode.pname)] = 'soap_IConsole_setUseHostClipboard'

    def soap_IConsole_getEmulatedUSB(self, ps, **kw):
        request = ps.Parse(IConsole_getEmulatedUSBRequestMsg.typecode)
        return request,IConsole_getEmulatedUSBResultMsg()

    soapAction[''] = 'soap_IConsole_getEmulatedUSB'
    root[(IConsole_getEmulatedUSBRequestMsg.typecode.nspname,IConsole_getEmulatedUSBRequestMsg.typecode.pname)] = 'soap_IConsole_getEmulatedUSB'

    def soap_IConsole_powerUp(self, ps, **kw):
        request = ps.Parse(IConsole_powerUpRequestMsg.typecode)
        return request,IConsole_powerUpResultMsg()

    soapAction[''] = 'soap_IConsole_powerUp'
    root[(IConsole_powerUpRequestMsg.typecode.nspname,IConsole_powerUpRequestMsg.typecode.pname)] = 'soap_IConsole_powerUp'

    def soap_IConsole_powerUpPaused(self, ps, **kw):
        request = ps.Parse(IConsole_powerUpPausedRequestMsg.typecode)
        return request,IConsole_powerUpPausedResultMsg()

    soapAction[''] = 'soap_IConsole_powerUpPaused'
    root[(IConsole_powerUpPausedRequestMsg.typecode.nspname,IConsole_powerUpPausedRequestMsg.typecode.pname)] = 'soap_IConsole_powerUpPaused'

    def soap_IConsole_powerDown(self, ps, **kw):
        request = ps.Parse(IConsole_powerDownRequestMsg.typecode)
        return request,IConsole_powerDownResultMsg()

    soapAction[''] = 'soap_IConsole_powerDown'
    root[(IConsole_powerDownRequestMsg.typecode.nspname,IConsole_powerDownRequestMsg.typecode.pname)] = 'soap_IConsole_powerDown'

    def soap_IConsole_reset(self, ps, **kw):
        request = ps.Parse(IConsole_resetRequestMsg.typecode)
        return request,IConsole_resetResultMsg()

    soapAction[''] = 'soap_IConsole_reset'
    root[(IConsole_resetRequestMsg.typecode.nspname,IConsole_resetRequestMsg.typecode.pname)] = 'soap_IConsole_reset'

    def soap_IConsole_pause(self, ps, **kw):
        request = ps.Parse(IConsole_pauseRequestMsg.typecode)
        return request,IConsole_pauseResultMsg()

    soapAction[''] = 'soap_IConsole_pause'
    root[(IConsole_pauseRequestMsg.typecode.nspname,IConsole_pauseRequestMsg.typecode.pname)] = 'soap_IConsole_pause'

    def soap_IConsole_resume(self, ps, **kw):
        request = ps.Parse(IConsole_resumeRequestMsg.typecode)
        return request,IConsole_resumeResultMsg()

    soapAction[''] = 'soap_IConsole_resume'
    root[(IConsole_resumeRequestMsg.typecode.nspname,IConsole_resumeRequestMsg.typecode.pname)] = 'soap_IConsole_resume'

    def soap_IConsole_powerButton(self, ps, **kw):
        request = ps.Parse(IConsole_powerButtonRequestMsg.typecode)
        return request,IConsole_powerButtonResultMsg()

    soapAction[''] = 'soap_IConsole_powerButton'
    root[(IConsole_powerButtonRequestMsg.typecode.nspname,IConsole_powerButtonRequestMsg.typecode.pname)] = 'soap_IConsole_powerButton'

    def soap_IConsole_sleepButton(self, ps, **kw):
        request = ps.Parse(IConsole_sleepButtonRequestMsg.typecode)
        return request,IConsole_sleepButtonResultMsg()

    soapAction[''] = 'soap_IConsole_sleepButton'
    root[(IConsole_sleepButtonRequestMsg.typecode.nspname,IConsole_sleepButtonRequestMsg.typecode.pname)] = 'soap_IConsole_sleepButton'

    def soap_IConsole_getPowerButtonHandled(self, ps, **kw):
        request = ps.Parse(IConsole_getPowerButtonHandledRequestMsg.typecode)
        return request,IConsole_getPowerButtonHandledResultMsg()

    soapAction[''] = 'soap_IConsole_getPowerButtonHandled'
    root[(IConsole_getPowerButtonHandledRequestMsg.typecode.nspname,IConsole_getPowerButtonHandledRequestMsg.typecode.pname)] = 'soap_IConsole_getPowerButtonHandled'

    def soap_IConsole_getGuestEnteredACPIMode(self, ps, **kw):
        request = ps.Parse(IConsole_getGuestEnteredACPIModeRequestMsg.typecode)
        return request,IConsole_getGuestEnteredACPIModeResultMsg()

    soapAction[''] = 'soap_IConsole_getGuestEnteredACPIMode'
    root[(IConsole_getGuestEnteredACPIModeRequestMsg.typecode.nspname,IConsole_getGuestEnteredACPIModeRequestMsg.typecode.pname)] = 'soap_IConsole_getGuestEnteredACPIMode'

    def soap_IConsole_getDeviceActivity(self, ps, **kw):
        request = ps.Parse(IConsole_getDeviceActivityRequestMsg.typecode)
        return request,IConsole_getDeviceActivityResultMsg()

    soapAction[''] = 'soap_IConsole_getDeviceActivity'
    root[(IConsole_getDeviceActivityRequestMsg.typecode.nspname,IConsole_getDeviceActivityRequestMsg.typecode.pname)] = 'soap_IConsole_getDeviceActivity'

    def soap_IConsole_attachUSBDevice(self, ps, **kw):
        request = ps.Parse(IConsole_attachUSBDeviceRequestMsg.typecode)
        return request,IConsole_attachUSBDeviceResultMsg()

    soapAction[''] = 'soap_IConsole_attachUSBDevice'
    root[(IConsole_attachUSBDeviceRequestMsg.typecode.nspname,IConsole_attachUSBDeviceRequestMsg.typecode.pname)] = 'soap_IConsole_attachUSBDevice'

    def soap_IConsole_detachUSBDevice(self, ps, **kw):
        request = ps.Parse(IConsole_detachUSBDeviceRequestMsg.typecode)
        return request,IConsole_detachUSBDeviceResultMsg()

    soapAction[''] = 'soap_IConsole_detachUSBDevice'
    root[(IConsole_detachUSBDeviceRequestMsg.typecode.nspname,IConsole_detachUSBDeviceRequestMsg.typecode.pname)] = 'soap_IConsole_detachUSBDevice'

    def soap_IConsole_findUSBDeviceByAddress(self, ps, **kw):
        request = ps.Parse(IConsole_findUSBDeviceByAddressRequestMsg.typecode)
        return request,IConsole_findUSBDeviceByAddressResultMsg()

    soapAction[''] = 'soap_IConsole_findUSBDeviceByAddress'
    root[(IConsole_findUSBDeviceByAddressRequestMsg.typecode.nspname,IConsole_findUSBDeviceByAddressRequestMsg.typecode.pname)] = 'soap_IConsole_findUSBDeviceByAddress'

    def soap_IConsole_findUSBDeviceById(self, ps, **kw):
        request = ps.Parse(IConsole_findUSBDeviceByIdRequestMsg.typecode)
        return request,IConsole_findUSBDeviceByIdResultMsg()

    soapAction[''] = 'soap_IConsole_findUSBDeviceById'
    root[(IConsole_findUSBDeviceByIdRequestMsg.typecode.nspname,IConsole_findUSBDeviceByIdRequestMsg.typecode.pname)] = 'soap_IConsole_findUSBDeviceById'

    def soap_IConsole_createSharedFolder(self, ps, **kw):
        request = ps.Parse(IConsole_createSharedFolderRequestMsg.typecode)
        return request,IConsole_createSharedFolderResultMsg()

    soapAction[''] = 'soap_IConsole_createSharedFolder'
    root[(IConsole_createSharedFolderRequestMsg.typecode.nspname,IConsole_createSharedFolderRequestMsg.typecode.pname)] = 'soap_IConsole_createSharedFolder'

    def soap_IConsole_removeSharedFolder(self, ps, **kw):
        request = ps.Parse(IConsole_removeSharedFolderRequestMsg.typecode)
        return request,IConsole_removeSharedFolderResultMsg()

    soapAction[''] = 'soap_IConsole_removeSharedFolder'
    root[(IConsole_removeSharedFolderRequestMsg.typecode.nspname,IConsole_removeSharedFolderRequestMsg.typecode.pname)] = 'soap_IConsole_removeSharedFolder'

    def soap_IConsole_teleport(self, ps, **kw):
        request = ps.Parse(IConsole_teleportRequestMsg.typecode)
        return request,IConsole_teleportResultMsg()

    soapAction[''] = 'soap_IConsole_teleport'
    root[(IConsole_teleportRequestMsg.typecode.nspname,IConsole_teleportRequestMsg.typecode.pname)] = 'soap_IConsole_teleport'

    def soap_IConsole_addDiskEncryptionPassword(self, ps, **kw):
        request = ps.Parse(IConsole_addDiskEncryptionPasswordRequestMsg.typecode)
        return request,IConsole_addDiskEncryptionPasswordResultMsg()

    soapAction[''] = 'soap_IConsole_addDiskEncryptionPassword'
    root[(IConsole_addDiskEncryptionPasswordRequestMsg.typecode.nspname,IConsole_addDiskEncryptionPasswordRequestMsg.typecode.pname)] = 'soap_IConsole_addDiskEncryptionPassword'

    def soap_IConsole_addDiskEncryptionPasswords(self, ps, **kw):
        request = ps.Parse(IConsole_addDiskEncryptionPasswordsRequestMsg.typecode)
        return request,IConsole_addDiskEncryptionPasswordsResultMsg()

    soapAction[''] = 'soap_IConsole_addDiskEncryptionPasswords'
    root[(IConsole_addDiskEncryptionPasswordsRequestMsg.typecode.nspname,IConsole_addDiskEncryptionPasswordsRequestMsg.typecode.pname)] = 'soap_IConsole_addDiskEncryptionPasswords'

    def soap_IConsole_removeDiskEncryptionPassword(self, ps, **kw):
        request = ps.Parse(IConsole_removeDiskEncryptionPasswordRequestMsg.typecode)
        return request,IConsole_removeDiskEncryptionPasswordResultMsg()

    soapAction[''] = 'soap_IConsole_removeDiskEncryptionPassword'
    root[(IConsole_removeDiskEncryptionPasswordRequestMsg.typecode.nspname,IConsole_removeDiskEncryptionPasswordRequestMsg.typecode.pname)] = 'soap_IConsole_removeDiskEncryptionPassword'

    def soap_IConsole_clearAllDiskEncryptionPasswords(self, ps, **kw):
        request = ps.Parse(IConsole_clearAllDiskEncryptionPasswordsRequestMsg.typecode)
        return request,IConsole_clearAllDiskEncryptionPasswordsResultMsg()

    soapAction[''] = 'soap_IConsole_clearAllDiskEncryptionPasswords'
    root[(IConsole_clearAllDiskEncryptionPasswordsRequestMsg.typecode.nspname,IConsole_clearAllDiskEncryptionPasswordsRequestMsg.typecode.pname)] = 'soap_IConsole_clearAllDiskEncryptionPasswords'

    def soap_IHostNetworkInterface_getName(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_getNameRequestMsg.typecode)
        return request,IHostNetworkInterface_getNameResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_getName'
    root[(IHostNetworkInterface_getNameRequestMsg.typecode.nspname,IHostNetworkInterface_getNameRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_getName'

    def soap_IHostNetworkInterface_getShortName(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_getShortNameRequestMsg.typecode)
        return request,IHostNetworkInterface_getShortNameResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_getShortName'
    root[(IHostNetworkInterface_getShortNameRequestMsg.typecode.nspname,IHostNetworkInterface_getShortNameRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_getShortName'

    def soap_IHostNetworkInterface_getId(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_getIdRequestMsg.typecode)
        return request,IHostNetworkInterface_getIdResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_getId'
    root[(IHostNetworkInterface_getIdRequestMsg.typecode.nspname,IHostNetworkInterface_getIdRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_getId'

    def soap_IHostNetworkInterface_getNetworkName(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_getNetworkNameRequestMsg.typecode)
        return request,IHostNetworkInterface_getNetworkNameResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_getNetworkName'
    root[(IHostNetworkInterface_getNetworkNameRequestMsg.typecode.nspname,IHostNetworkInterface_getNetworkNameRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_getNetworkName'

    def soap_IHostNetworkInterface_getDHCPEnabled(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_getDHCPEnabledRequestMsg.typecode)
        return request,IHostNetworkInterface_getDHCPEnabledResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_getDHCPEnabled'
    root[(IHostNetworkInterface_getDHCPEnabledRequestMsg.typecode.nspname,IHostNetworkInterface_getDHCPEnabledRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_getDHCPEnabled'

    def soap_IHostNetworkInterface_getIPAddress(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_getIPAddressRequestMsg.typecode)
        return request,IHostNetworkInterface_getIPAddressResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_getIPAddress'
    root[(IHostNetworkInterface_getIPAddressRequestMsg.typecode.nspname,IHostNetworkInterface_getIPAddressRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_getIPAddress'

    def soap_IHostNetworkInterface_getNetworkMask(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_getNetworkMaskRequestMsg.typecode)
        return request,IHostNetworkInterface_getNetworkMaskResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_getNetworkMask'
    root[(IHostNetworkInterface_getNetworkMaskRequestMsg.typecode.nspname,IHostNetworkInterface_getNetworkMaskRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_getNetworkMask'

    def soap_IHostNetworkInterface_getIPV6Supported(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_getIPV6SupportedRequestMsg.typecode)
        return request,IHostNetworkInterface_getIPV6SupportedResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_getIPV6Supported'
    root[(IHostNetworkInterface_getIPV6SupportedRequestMsg.typecode.nspname,IHostNetworkInterface_getIPV6SupportedRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_getIPV6Supported'

    def soap_IHostNetworkInterface_getIPV6Address(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_getIPV6AddressRequestMsg.typecode)
        return request,IHostNetworkInterface_getIPV6AddressResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_getIPV6Address'
    root[(IHostNetworkInterface_getIPV6AddressRequestMsg.typecode.nspname,IHostNetworkInterface_getIPV6AddressRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_getIPV6Address'

    def soap_IHostNetworkInterface_getIPV6NetworkMaskPrefixLength(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_getIPV6NetworkMaskPrefixLengthRequestMsg.typecode)
        return request,IHostNetworkInterface_getIPV6NetworkMaskPrefixLengthResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_getIPV6NetworkMaskPrefixLength'
    root[(IHostNetworkInterface_getIPV6NetworkMaskPrefixLengthRequestMsg.typecode.nspname,IHostNetworkInterface_getIPV6NetworkMaskPrefixLengthRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_getIPV6NetworkMaskPrefixLength'

    def soap_IHostNetworkInterface_getHardwareAddress(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_getHardwareAddressRequestMsg.typecode)
        return request,IHostNetworkInterface_getHardwareAddressResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_getHardwareAddress'
    root[(IHostNetworkInterface_getHardwareAddressRequestMsg.typecode.nspname,IHostNetworkInterface_getHardwareAddressRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_getHardwareAddress'

    def soap_IHostNetworkInterface_getMediumType(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_getMediumTypeRequestMsg.typecode)
        return request,IHostNetworkInterface_getMediumTypeResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_getMediumType'
    root[(IHostNetworkInterface_getMediumTypeRequestMsg.typecode.nspname,IHostNetworkInterface_getMediumTypeRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_getMediumType'

    def soap_IHostNetworkInterface_getStatus(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_getStatusRequestMsg.typecode)
        return request,IHostNetworkInterface_getStatusResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_getStatus'
    root[(IHostNetworkInterface_getStatusRequestMsg.typecode.nspname,IHostNetworkInterface_getStatusRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_getStatus'

    def soap_IHostNetworkInterface_getInterfaceType(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_getInterfaceTypeRequestMsg.typecode)
        return request,IHostNetworkInterface_getInterfaceTypeResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_getInterfaceType'
    root[(IHostNetworkInterface_getInterfaceTypeRequestMsg.typecode.nspname,IHostNetworkInterface_getInterfaceTypeRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_getInterfaceType'

    def soap_IHostNetworkInterface_enableStaticIPConfig(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_enableStaticIPConfigRequestMsg.typecode)
        return request,IHostNetworkInterface_enableStaticIPConfigResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_enableStaticIPConfig'
    root[(IHostNetworkInterface_enableStaticIPConfigRequestMsg.typecode.nspname,IHostNetworkInterface_enableStaticIPConfigRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_enableStaticIPConfig'

    def soap_IHostNetworkInterface_enableStaticIPConfigV6(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_enableStaticIPConfigV6RequestMsg.typecode)
        return request,IHostNetworkInterface_enableStaticIPConfigV6ResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_enableStaticIPConfigV6'
    root[(IHostNetworkInterface_enableStaticIPConfigV6RequestMsg.typecode.nspname,IHostNetworkInterface_enableStaticIPConfigV6RequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_enableStaticIPConfigV6'

    def soap_IHostNetworkInterface_enableDynamicIPConfig(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_enableDynamicIPConfigRequestMsg.typecode)
        return request,IHostNetworkInterface_enableDynamicIPConfigResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_enableDynamicIPConfig'
    root[(IHostNetworkInterface_enableDynamicIPConfigRequestMsg.typecode.nspname,IHostNetworkInterface_enableDynamicIPConfigRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_enableDynamicIPConfig'

    def soap_IHostNetworkInterface_DHCPRediscover(self, ps, **kw):
        request = ps.Parse(IHostNetworkInterface_DHCPRediscoverRequestMsg.typecode)
        return request,IHostNetworkInterface_DHCPRediscoverResultMsg()

    soapAction[''] = 'soap_IHostNetworkInterface_DHCPRediscover'
    root[(IHostNetworkInterface_DHCPRediscoverRequestMsg.typecode.nspname,IHostNetworkInterface_DHCPRediscoverRequestMsg.typecode.pname)] = 'soap_IHostNetworkInterface_DHCPRediscover'

    def soap_IHostVideoInputDevice_getName(self, ps, **kw):
        request = ps.Parse(IHostVideoInputDevice_getNameRequestMsg.typecode)
        return request,IHostVideoInputDevice_getNameResultMsg()

    soapAction[''] = 'soap_IHostVideoInputDevice_getName'
    root[(IHostVideoInputDevice_getNameRequestMsg.typecode.nspname,IHostVideoInputDevice_getNameRequestMsg.typecode.pname)] = 'soap_IHostVideoInputDevice_getName'

    def soap_IHostVideoInputDevice_getPath(self, ps, **kw):
        request = ps.Parse(IHostVideoInputDevice_getPathRequestMsg.typecode)
        return request,IHostVideoInputDevice_getPathResultMsg()

    soapAction[''] = 'soap_IHostVideoInputDevice_getPath'
    root[(IHostVideoInputDevice_getPathRequestMsg.typecode.nspname,IHostVideoInputDevice_getPathRequestMsg.typecode.pname)] = 'soap_IHostVideoInputDevice_getPath'

    def soap_IHostVideoInputDevice_getAlias(self, ps, **kw):
        request = ps.Parse(IHostVideoInputDevice_getAliasRequestMsg.typecode)
        return request,IHostVideoInputDevice_getAliasResultMsg()

    soapAction[''] = 'soap_IHostVideoInputDevice_getAlias'
    root[(IHostVideoInputDevice_getAliasRequestMsg.typecode.nspname,IHostVideoInputDevice_getAliasRequestMsg.typecode.pname)] = 'soap_IHostVideoInputDevice_getAlias'

    def soap_IHost_getDVDDrives(self, ps, **kw):
        request = ps.Parse(IHost_getDVDDrivesRequestMsg.typecode)
        return request,IHost_getDVDDrivesResultMsg()

    soapAction[''] = 'soap_IHost_getDVDDrives'
    root[(IHost_getDVDDrivesRequestMsg.typecode.nspname,IHost_getDVDDrivesRequestMsg.typecode.pname)] = 'soap_IHost_getDVDDrives'

    def soap_IHost_getFloppyDrives(self, ps, **kw):
        request = ps.Parse(IHost_getFloppyDrivesRequestMsg.typecode)
        return request,IHost_getFloppyDrivesResultMsg()

    soapAction[''] = 'soap_IHost_getFloppyDrives'
    root[(IHost_getFloppyDrivesRequestMsg.typecode.nspname,IHost_getFloppyDrivesRequestMsg.typecode.pname)] = 'soap_IHost_getFloppyDrives'

    def soap_IHost_getUSBDevices(self, ps, **kw):
        request = ps.Parse(IHost_getUSBDevicesRequestMsg.typecode)
        return request,IHost_getUSBDevicesResultMsg()

    soapAction[''] = 'soap_IHost_getUSBDevices'
    root[(IHost_getUSBDevicesRequestMsg.typecode.nspname,IHost_getUSBDevicesRequestMsg.typecode.pname)] = 'soap_IHost_getUSBDevices'

    def soap_IHost_getUSBDeviceFilters(self, ps, **kw):
        request = ps.Parse(IHost_getUSBDeviceFiltersRequestMsg.typecode)
        return request,IHost_getUSBDeviceFiltersResultMsg()

    soapAction[''] = 'soap_IHost_getUSBDeviceFilters'
    root[(IHost_getUSBDeviceFiltersRequestMsg.typecode.nspname,IHost_getUSBDeviceFiltersRequestMsg.typecode.pname)] = 'soap_IHost_getUSBDeviceFilters'

    def soap_IHost_getNetworkInterfaces(self, ps, **kw):
        request = ps.Parse(IHost_getNetworkInterfacesRequestMsg.typecode)
        return request,IHost_getNetworkInterfacesResultMsg()

    soapAction[''] = 'soap_IHost_getNetworkInterfaces'
    root[(IHost_getNetworkInterfacesRequestMsg.typecode.nspname,IHost_getNetworkInterfacesRequestMsg.typecode.pname)] = 'soap_IHost_getNetworkInterfaces'

    def soap_IHost_getNameServers(self, ps, **kw):
        request = ps.Parse(IHost_getNameServersRequestMsg.typecode)
        return request,IHost_getNameServersResultMsg()

    soapAction[''] = 'soap_IHost_getNameServers'
    root[(IHost_getNameServersRequestMsg.typecode.nspname,IHost_getNameServersRequestMsg.typecode.pname)] = 'soap_IHost_getNameServers'

    def soap_IHost_getDomainName(self, ps, **kw):
        request = ps.Parse(IHost_getDomainNameRequestMsg.typecode)
        return request,IHost_getDomainNameResultMsg()

    soapAction[''] = 'soap_IHost_getDomainName'
    root[(IHost_getDomainNameRequestMsg.typecode.nspname,IHost_getDomainNameRequestMsg.typecode.pname)] = 'soap_IHost_getDomainName'

    def soap_IHost_getSearchStrings(self, ps, **kw):
        request = ps.Parse(IHost_getSearchStringsRequestMsg.typecode)
        return request,IHost_getSearchStringsResultMsg()

    soapAction[''] = 'soap_IHost_getSearchStrings'
    root[(IHost_getSearchStringsRequestMsg.typecode.nspname,IHost_getSearchStringsRequestMsg.typecode.pname)] = 'soap_IHost_getSearchStrings'

    def soap_IHost_getProcessorCount(self, ps, **kw):
        request = ps.Parse(IHost_getProcessorCountRequestMsg.typecode)
        return request,IHost_getProcessorCountResultMsg()

    soapAction[''] = 'soap_IHost_getProcessorCount'
    root[(IHost_getProcessorCountRequestMsg.typecode.nspname,IHost_getProcessorCountRequestMsg.typecode.pname)] = 'soap_IHost_getProcessorCount'

    def soap_IHost_getProcessorOnlineCount(self, ps, **kw):
        request = ps.Parse(IHost_getProcessorOnlineCountRequestMsg.typecode)
        return request,IHost_getProcessorOnlineCountResultMsg()

    soapAction[''] = 'soap_IHost_getProcessorOnlineCount'
    root[(IHost_getProcessorOnlineCountRequestMsg.typecode.nspname,IHost_getProcessorOnlineCountRequestMsg.typecode.pname)] = 'soap_IHost_getProcessorOnlineCount'

    def soap_IHost_getProcessorCoreCount(self, ps, **kw):
        request = ps.Parse(IHost_getProcessorCoreCountRequestMsg.typecode)
        return request,IHost_getProcessorCoreCountResultMsg()

    soapAction[''] = 'soap_IHost_getProcessorCoreCount'
    root[(IHost_getProcessorCoreCountRequestMsg.typecode.nspname,IHost_getProcessorCoreCountRequestMsg.typecode.pname)] = 'soap_IHost_getProcessorCoreCount'

    def soap_IHost_getProcessorOnlineCoreCount(self, ps, **kw):
        request = ps.Parse(IHost_getProcessorOnlineCoreCountRequestMsg.typecode)
        return request,IHost_getProcessorOnlineCoreCountResultMsg()

    soapAction[''] = 'soap_IHost_getProcessorOnlineCoreCount'
    root[(IHost_getProcessorOnlineCoreCountRequestMsg.typecode.nspname,IHost_getProcessorOnlineCoreCountRequestMsg.typecode.pname)] = 'soap_IHost_getProcessorOnlineCoreCount'

    def soap_IHost_getMemorySize(self, ps, **kw):
        request = ps.Parse(IHost_getMemorySizeRequestMsg.typecode)
        return request,IHost_getMemorySizeResultMsg()

    soapAction[''] = 'soap_IHost_getMemorySize'
    root[(IHost_getMemorySizeRequestMsg.typecode.nspname,IHost_getMemorySizeRequestMsg.typecode.pname)] = 'soap_IHost_getMemorySize'

    def soap_IHost_getMemoryAvailable(self, ps, **kw):
        request = ps.Parse(IHost_getMemoryAvailableRequestMsg.typecode)
        return request,IHost_getMemoryAvailableResultMsg()

    soapAction[''] = 'soap_IHost_getMemoryAvailable'
    root[(IHost_getMemoryAvailableRequestMsg.typecode.nspname,IHost_getMemoryAvailableRequestMsg.typecode.pname)] = 'soap_IHost_getMemoryAvailable'

    def soap_IHost_getOperatingSystem(self, ps, **kw):
        request = ps.Parse(IHost_getOperatingSystemRequestMsg.typecode)
        return request,IHost_getOperatingSystemResultMsg()

    soapAction[''] = 'soap_IHost_getOperatingSystem'
    root[(IHost_getOperatingSystemRequestMsg.typecode.nspname,IHost_getOperatingSystemRequestMsg.typecode.pname)] = 'soap_IHost_getOperatingSystem'

    def soap_IHost_getOSVersion(self, ps, **kw):
        request = ps.Parse(IHost_getOSVersionRequestMsg.typecode)
        return request,IHost_getOSVersionResultMsg()

    soapAction[''] = 'soap_IHost_getOSVersion'
    root[(IHost_getOSVersionRequestMsg.typecode.nspname,IHost_getOSVersionRequestMsg.typecode.pname)] = 'soap_IHost_getOSVersion'

    def soap_IHost_getUTCTime(self, ps, **kw):
        request = ps.Parse(IHost_getUTCTimeRequestMsg.typecode)
        return request,IHost_getUTCTimeResultMsg()

    soapAction[''] = 'soap_IHost_getUTCTime'
    root[(IHost_getUTCTimeRequestMsg.typecode.nspname,IHost_getUTCTimeRequestMsg.typecode.pname)] = 'soap_IHost_getUTCTime'

    def soap_IHost_getAcceleration3DAvailable(self, ps, **kw):
        request = ps.Parse(IHost_getAcceleration3DAvailableRequestMsg.typecode)
        return request,IHost_getAcceleration3DAvailableResultMsg()

    soapAction[''] = 'soap_IHost_getAcceleration3DAvailable'
    root[(IHost_getAcceleration3DAvailableRequestMsg.typecode.nspname,IHost_getAcceleration3DAvailableRequestMsg.typecode.pname)] = 'soap_IHost_getAcceleration3DAvailable'

    def soap_IHost_getVideoInputDevices(self, ps, **kw):
        request = ps.Parse(IHost_getVideoInputDevicesRequestMsg.typecode)
        return request,IHost_getVideoInputDevicesResultMsg()

    soapAction[''] = 'soap_IHost_getVideoInputDevices'
    root[(IHost_getVideoInputDevicesRequestMsg.typecode.nspname,IHost_getVideoInputDevicesRequestMsg.typecode.pname)] = 'soap_IHost_getVideoInputDevices'

    def soap_IHost_getProcessorSpeed(self, ps, **kw):
        request = ps.Parse(IHost_getProcessorSpeedRequestMsg.typecode)
        return request,IHost_getProcessorSpeedResultMsg()

    soapAction[''] = 'soap_IHost_getProcessorSpeed'
    root[(IHost_getProcessorSpeedRequestMsg.typecode.nspname,IHost_getProcessorSpeedRequestMsg.typecode.pname)] = 'soap_IHost_getProcessorSpeed'

    def soap_IHost_getProcessorFeature(self, ps, **kw):
        request = ps.Parse(IHost_getProcessorFeatureRequestMsg.typecode)
        return request,IHost_getProcessorFeatureResultMsg()

    soapAction[''] = 'soap_IHost_getProcessorFeature'
    root[(IHost_getProcessorFeatureRequestMsg.typecode.nspname,IHost_getProcessorFeatureRequestMsg.typecode.pname)] = 'soap_IHost_getProcessorFeature'

    def soap_IHost_getProcessorDescription(self, ps, **kw):
        request = ps.Parse(IHost_getProcessorDescriptionRequestMsg.typecode)
        return request,IHost_getProcessorDescriptionResultMsg()

    soapAction[''] = 'soap_IHost_getProcessorDescription'
    root[(IHost_getProcessorDescriptionRequestMsg.typecode.nspname,IHost_getProcessorDescriptionRequestMsg.typecode.pname)] = 'soap_IHost_getProcessorDescription'

    def soap_IHost_getProcessorCPUIDLeaf(self, ps, **kw):
        request = ps.Parse(IHost_getProcessorCPUIDLeafRequestMsg.typecode)
        return request,IHost_getProcessorCPUIDLeafResultMsg()

    soapAction[''] = 'soap_IHost_getProcessorCPUIDLeaf'
    root[(IHost_getProcessorCPUIDLeafRequestMsg.typecode.nspname,IHost_getProcessorCPUIDLeafRequestMsg.typecode.pname)] = 'soap_IHost_getProcessorCPUIDLeaf'

    def soap_IHost_createHostOnlyNetworkInterface(self, ps, **kw):
        request = ps.Parse(IHost_createHostOnlyNetworkInterfaceRequestMsg.typecode)
        return request,IHost_createHostOnlyNetworkInterfaceResultMsg()

    soapAction[''] = 'soap_IHost_createHostOnlyNetworkInterface'
    root[(IHost_createHostOnlyNetworkInterfaceRequestMsg.typecode.nspname,IHost_createHostOnlyNetworkInterfaceRequestMsg.typecode.pname)] = 'soap_IHost_createHostOnlyNetworkInterface'

    def soap_IHost_removeHostOnlyNetworkInterface(self, ps, **kw):
        request = ps.Parse(IHost_removeHostOnlyNetworkInterfaceRequestMsg.typecode)
        return request,IHost_removeHostOnlyNetworkInterfaceResultMsg()

    soapAction[''] = 'soap_IHost_removeHostOnlyNetworkInterface'
    root[(IHost_removeHostOnlyNetworkInterfaceRequestMsg.typecode.nspname,IHost_removeHostOnlyNetworkInterfaceRequestMsg.typecode.pname)] = 'soap_IHost_removeHostOnlyNetworkInterface'

    def soap_IHost_createUSBDeviceFilter(self, ps, **kw):
        request = ps.Parse(IHost_createUSBDeviceFilterRequestMsg.typecode)
        return request,IHost_createUSBDeviceFilterResultMsg()

    soapAction[''] = 'soap_IHost_createUSBDeviceFilter'
    root[(IHost_createUSBDeviceFilterRequestMsg.typecode.nspname,IHost_createUSBDeviceFilterRequestMsg.typecode.pname)] = 'soap_IHost_createUSBDeviceFilter'

    def soap_IHost_insertUSBDeviceFilter(self, ps, **kw):
        request = ps.Parse(IHost_insertUSBDeviceFilterRequestMsg.typecode)
        return request,IHost_insertUSBDeviceFilterResultMsg()

    soapAction[''] = 'soap_IHost_insertUSBDeviceFilter'
    root[(IHost_insertUSBDeviceFilterRequestMsg.typecode.nspname,IHost_insertUSBDeviceFilterRequestMsg.typecode.pname)] = 'soap_IHost_insertUSBDeviceFilter'

    def soap_IHost_removeUSBDeviceFilter(self, ps, **kw):
        request = ps.Parse(IHost_removeUSBDeviceFilterRequestMsg.typecode)
        return request,IHost_removeUSBDeviceFilterResultMsg()

    soapAction[''] = 'soap_IHost_removeUSBDeviceFilter'
    root[(IHost_removeUSBDeviceFilterRequestMsg.typecode.nspname,IHost_removeUSBDeviceFilterRequestMsg.typecode.pname)] = 'soap_IHost_removeUSBDeviceFilter'

    def soap_IHost_findHostDVDDrive(self, ps, **kw):
        request = ps.Parse(IHost_findHostDVDDriveRequestMsg.typecode)
        return request,IHost_findHostDVDDriveResultMsg()

    soapAction[''] = 'soap_IHost_findHostDVDDrive'
    root[(IHost_findHostDVDDriveRequestMsg.typecode.nspname,IHost_findHostDVDDriveRequestMsg.typecode.pname)] = 'soap_IHost_findHostDVDDrive'

    def soap_IHost_findHostFloppyDrive(self, ps, **kw):
        request = ps.Parse(IHost_findHostFloppyDriveRequestMsg.typecode)
        return request,IHost_findHostFloppyDriveResultMsg()

    soapAction[''] = 'soap_IHost_findHostFloppyDrive'
    root[(IHost_findHostFloppyDriveRequestMsg.typecode.nspname,IHost_findHostFloppyDriveRequestMsg.typecode.pname)] = 'soap_IHost_findHostFloppyDrive'

    def soap_IHost_findHostNetworkInterfaceByName(self, ps, **kw):
        request = ps.Parse(IHost_findHostNetworkInterfaceByNameRequestMsg.typecode)
        return request,IHost_findHostNetworkInterfaceByNameResultMsg()

    soapAction[''] = 'soap_IHost_findHostNetworkInterfaceByName'
    root[(IHost_findHostNetworkInterfaceByNameRequestMsg.typecode.nspname,IHost_findHostNetworkInterfaceByNameRequestMsg.typecode.pname)] = 'soap_IHost_findHostNetworkInterfaceByName'

    def soap_IHost_findHostNetworkInterfaceById(self, ps, **kw):
        request = ps.Parse(IHost_findHostNetworkInterfaceByIdRequestMsg.typecode)
        return request,IHost_findHostNetworkInterfaceByIdResultMsg()

    soapAction[''] = 'soap_IHost_findHostNetworkInterfaceById'
    root[(IHost_findHostNetworkInterfaceByIdRequestMsg.typecode.nspname,IHost_findHostNetworkInterfaceByIdRequestMsg.typecode.pname)] = 'soap_IHost_findHostNetworkInterfaceById'

    def soap_IHost_findHostNetworkInterfacesOfType(self, ps, **kw):
        request = ps.Parse(IHost_findHostNetworkInterfacesOfTypeRequestMsg.typecode)
        return request,IHost_findHostNetworkInterfacesOfTypeResultMsg()

    soapAction[''] = 'soap_IHost_findHostNetworkInterfacesOfType'
    root[(IHost_findHostNetworkInterfacesOfTypeRequestMsg.typecode.nspname,IHost_findHostNetworkInterfacesOfTypeRequestMsg.typecode.pname)] = 'soap_IHost_findHostNetworkInterfacesOfType'

    def soap_IHost_findUSBDeviceById(self, ps, **kw):
        request = ps.Parse(IHost_findUSBDeviceByIdRequestMsg.typecode)
        return request,IHost_findUSBDeviceByIdResultMsg()

    soapAction[''] = 'soap_IHost_findUSBDeviceById'
    root[(IHost_findUSBDeviceByIdRequestMsg.typecode.nspname,IHost_findUSBDeviceByIdRequestMsg.typecode.pname)] = 'soap_IHost_findUSBDeviceById'

    def soap_IHost_findUSBDeviceByAddress(self, ps, **kw):
        request = ps.Parse(IHost_findUSBDeviceByAddressRequestMsg.typecode)
        return request,IHost_findUSBDeviceByAddressResultMsg()

    soapAction[''] = 'soap_IHost_findUSBDeviceByAddress'
    root[(IHost_findUSBDeviceByAddressRequestMsg.typecode.nspname,IHost_findUSBDeviceByAddressRequestMsg.typecode.pname)] = 'soap_IHost_findUSBDeviceByAddress'

    def soap_IHost_generateMACAddress(self, ps, **kw):
        request = ps.Parse(IHost_generateMACAddressRequestMsg.typecode)
        return request,IHost_generateMACAddressResultMsg()

    soapAction[''] = 'soap_IHost_generateMACAddress'
    root[(IHost_generateMACAddressRequestMsg.typecode.nspname,IHost_generateMACAddressRequestMsg.typecode.pname)] = 'soap_IHost_generateMACAddress'

    def soap_ISystemProperties_getMinGuestRAM(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMinGuestRAMRequestMsg.typecode)
        return request,ISystemProperties_getMinGuestRAMResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMinGuestRAM'
    root[(ISystemProperties_getMinGuestRAMRequestMsg.typecode.nspname,ISystemProperties_getMinGuestRAMRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMinGuestRAM'

    def soap_ISystemProperties_getMaxGuestRAM(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMaxGuestRAMRequestMsg.typecode)
        return request,ISystemProperties_getMaxGuestRAMResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMaxGuestRAM'
    root[(ISystemProperties_getMaxGuestRAMRequestMsg.typecode.nspname,ISystemProperties_getMaxGuestRAMRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMaxGuestRAM'

    def soap_ISystemProperties_getMinGuestVRAM(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMinGuestVRAMRequestMsg.typecode)
        return request,ISystemProperties_getMinGuestVRAMResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMinGuestVRAM'
    root[(ISystemProperties_getMinGuestVRAMRequestMsg.typecode.nspname,ISystemProperties_getMinGuestVRAMRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMinGuestVRAM'

    def soap_ISystemProperties_getMaxGuestVRAM(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMaxGuestVRAMRequestMsg.typecode)
        return request,ISystemProperties_getMaxGuestVRAMResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMaxGuestVRAM'
    root[(ISystemProperties_getMaxGuestVRAMRequestMsg.typecode.nspname,ISystemProperties_getMaxGuestVRAMRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMaxGuestVRAM'

    def soap_ISystemProperties_getMinGuestCPUCount(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMinGuestCPUCountRequestMsg.typecode)
        return request,ISystemProperties_getMinGuestCPUCountResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMinGuestCPUCount'
    root[(ISystemProperties_getMinGuestCPUCountRequestMsg.typecode.nspname,ISystemProperties_getMinGuestCPUCountRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMinGuestCPUCount'

    def soap_ISystemProperties_getMaxGuestCPUCount(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMaxGuestCPUCountRequestMsg.typecode)
        return request,ISystemProperties_getMaxGuestCPUCountResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMaxGuestCPUCount'
    root[(ISystemProperties_getMaxGuestCPUCountRequestMsg.typecode.nspname,ISystemProperties_getMaxGuestCPUCountRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMaxGuestCPUCount'

    def soap_ISystemProperties_getMaxGuestMonitors(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMaxGuestMonitorsRequestMsg.typecode)
        return request,ISystemProperties_getMaxGuestMonitorsResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMaxGuestMonitors'
    root[(ISystemProperties_getMaxGuestMonitorsRequestMsg.typecode.nspname,ISystemProperties_getMaxGuestMonitorsRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMaxGuestMonitors'

    def soap_ISystemProperties_getInfoVDSize(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getInfoVDSizeRequestMsg.typecode)
        return request,ISystemProperties_getInfoVDSizeResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getInfoVDSize'
    root[(ISystemProperties_getInfoVDSizeRequestMsg.typecode.nspname,ISystemProperties_getInfoVDSizeRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getInfoVDSize'

    def soap_ISystemProperties_getSerialPortCount(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getSerialPortCountRequestMsg.typecode)
        return request,ISystemProperties_getSerialPortCountResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getSerialPortCount'
    root[(ISystemProperties_getSerialPortCountRequestMsg.typecode.nspname,ISystemProperties_getSerialPortCountRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getSerialPortCount'

    def soap_ISystemProperties_getParallelPortCount(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getParallelPortCountRequestMsg.typecode)
        return request,ISystemProperties_getParallelPortCountResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getParallelPortCount'
    root[(ISystemProperties_getParallelPortCountRequestMsg.typecode.nspname,ISystemProperties_getParallelPortCountRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getParallelPortCount'

    def soap_ISystemProperties_getMaxBootPosition(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMaxBootPositionRequestMsg.typecode)
        return request,ISystemProperties_getMaxBootPositionResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMaxBootPosition'
    root[(ISystemProperties_getMaxBootPositionRequestMsg.typecode.nspname,ISystemProperties_getMaxBootPositionRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMaxBootPosition'

    def soap_ISystemProperties_getRawModeSupported(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getRawModeSupportedRequestMsg.typecode)
        return request,ISystemProperties_getRawModeSupportedResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getRawModeSupported'
    root[(ISystemProperties_getRawModeSupportedRequestMsg.typecode.nspname,ISystemProperties_getRawModeSupportedRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getRawModeSupported'

    def soap_ISystemProperties_getExclusiveHwVirt(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getExclusiveHwVirtRequestMsg.typecode)
        return request,ISystemProperties_getExclusiveHwVirtResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getExclusiveHwVirt'
    root[(ISystemProperties_getExclusiveHwVirtRequestMsg.typecode.nspname,ISystemProperties_getExclusiveHwVirtRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getExclusiveHwVirt'

    def soap_ISystemProperties_setExclusiveHwVirt(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setExclusiveHwVirtRequestMsg.typecode)
        return request,ISystemProperties_setExclusiveHwVirtResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setExclusiveHwVirt'
    root[(ISystemProperties_setExclusiveHwVirtRequestMsg.typecode.nspname,ISystemProperties_setExclusiveHwVirtRequestMsg.typecode.pname)] = 'soap_ISystemProperties_setExclusiveHwVirt'

    def soap_ISystemProperties_getDefaultMachineFolder(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getDefaultMachineFolderRequestMsg.typecode)
        return request,ISystemProperties_getDefaultMachineFolderResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getDefaultMachineFolder'
    root[(ISystemProperties_getDefaultMachineFolderRequestMsg.typecode.nspname,ISystemProperties_getDefaultMachineFolderRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getDefaultMachineFolder'

    def soap_ISystemProperties_setDefaultMachineFolder(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setDefaultMachineFolderRequestMsg.typecode)
        return request,ISystemProperties_setDefaultMachineFolderResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setDefaultMachineFolder'
    root[(ISystemProperties_setDefaultMachineFolderRequestMsg.typecode.nspname,ISystemProperties_setDefaultMachineFolderRequestMsg.typecode.pname)] = 'soap_ISystemProperties_setDefaultMachineFolder'

    def soap_ISystemProperties_getLoggingLevel(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getLoggingLevelRequestMsg.typecode)
        return request,ISystemProperties_getLoggingLevelResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getLoggingLevel'
    root[(ISystemProperties_getLoggingLevelRequestMsg.typecode.nspname,ISystemProperties_getLoggingLevelRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getLoggingLevel'

    def soap_ISystemProperties_setLoggingLevel(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setLoggingLevelRequestMsg.typecode)
        return request,ISystemProperties_setLoggingLevelResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setLoggingLevel'
    root[(ISystemProperties_setLoggingLevelRequestMsg.typecode.nspname,ISystemProperties_setLoggingLevelRequestMsg.typecode.pname)] = 'soap_ISystemProperties_setLoggingLevel'

    def soap_ISystemProperties_getMediumFormats(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMediumFormatsRequestMsg.typecode)
        return request,ISystemProperties_getMediumFormatsResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMediumFormats'
    root[(ISystemProperties_getMediumFormatsRequestMsg.typecode.nspname,ISystemProperties_getMediumFormatsRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMediumFormats'

    def soap_ISystemProperties_getDefaultHardDiskFormat(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getDefaultHardDiskFormatRequestMsg.typecode)
        return request,ISystemProperties_getDefaultHardDiskFormatResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getDefaultHardDiskFormat'
    root[(ISystemProperties_getDefaultHardDiskFormatRequestMsg.typecode.nspname,ISystemProperties_getDefaultHardDiskFormatRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getDefaultHardDiskFormat'

    def soap_ISystemProperties_setDefaultHardDiskFormat(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setDefaultHardDiskFormatRequestMsg.typecode)
        return request,ISystemProperties_setDefaultHardDiskFormatResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setDefaultHardDiskFormat'
    root[(ISystemProperties_setDefaultHardDiskFormatRequestMsg.typecode.nspname,ISystemProperties_setDefaultHardDiskFormatRequestMsg.typecode.pname)] = 'soap_ISystemProperties_setDefaultHardDiskFormat'

    def soap_ISystemProperties_getFreeDiskSpaceWarning(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getFreeDiskSpaceWarningRequestMsg.typecode)
        return request,ISystemProperties_getFreeDiskSpaceWarningResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getFreeDiskSpaceWarning'
    root[(ISystemProperties_getFreeDiskSpaceWarningRequestMsg.typecode.nspname,ISystemProperties_getFreeDiskSpaceWarningRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getFreeDiskSpaceWarning'

    def soap_ISystemProperties_setFreeDiskSpaceWarning(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setFreeDiskSpaceWarningRequestMsg.typecode)
        return request,ISystemProperties_setFreeDiskSpaceWarningResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setFreeDiskSpaceWarning'
    root[(ISystemProperties_setFreeDiskSpaceWarningRequestMsg.typecode.nspname,ISystemProperties_setFreeDiskSpaceWarningRequestMsg.typecode.pname)] = 'soap_ISystemProperties_setFreeDiskSpaceWarning'

    def soap_ISystemProperties_getFreeDiskSpacePercentWarning(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getFreeDiskSpacePercentWarningRequestMsg.typecode)
        return request,ISystemProperties_getFreeDiskSpacePercentWarningResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getFreeDiskSpacePercentWarning'
    root[(ISystemProperties_getFreeDiskSpacePercentWarningRequestMsg.typecode.nspname,ISystemProperties_getFreeDiskSpacePercentWarningRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getFreeDiskSpacePercentWarning'

    def soap_ISystemProperties_setFreeDiskSpacePercentWarning(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setFreeDiskSpacePercentWarningRequestMsg.typecode)
        return request,ISystemProperties_setFreeDiskSpacePercentWarningResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setFreeDiskSpacePercentWarning'
    root[(ISystemProperties_setFreeDiskSpacePercentWarningRequestMsg.typecode.nspname,ISystemProperties_setFreeDiskSpacePercentWarningRequestMsg.typecode.pname)] = 'soap_ISystemProperties_setFreeDiskSpacePercentWarning'

    def soap_ISystemProperties_getFreeDiskSpaceError(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getFreeDiskSpaceErrorRequestMsg.typecode)
        return request,ISystemProperties_getFreeDiskSpaceErrorResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getFreeDiskSpaceError'
    root[(ISystemProperties_getFreeDiskSpaceErrorRequestMsg.typecode.nspname,ISystemProperties_getFreeDiskSpaceErrorRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getFreeDiskSpaceError'

    def soap_ISystemProperties_setFreeDiskSpaceError(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setFreeDiskSpaceErrorRequestMsg.typecode)
        return request,ISystemProperties_setFreeDiskSpaceErrorResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setFreeDiskSpaceError'
    root[(ISystemProperties_setFreeDiskSpaceErrorRequestMsg.typecode.nspname,ISystemProperties_setFreeDiskSpaceErrorRequestMsg.typecode.pname)] = 'soap_ISystemProperties_setFreeDiskSpaceError'

    def soap_ISystemProperties_getFreeDiskSpacePercentError(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getFreeDiskSpacePercentErrorRequestMsg.typecode)
        return request,ISystemProperties_getFreeDiskSpacePercentErrorResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getFreeDiskSpacePercentError'
    root[(ISystemProperties_getFreeDiskSpacePercentErrorRequestMsg.typecode.nspname,ISystemProperties_getFreeDiskSpacePercentErrorRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getFreeDiskSpacePercentError'

    def soap_ISystemProperties_setFreeDiskSpacePercentError(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setFreeDiskSpacePercentErrorRequestMsg.typecode)
        return request,ISystemProperties_setFreeDiskSpacePercentErrorResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setFreeDiskSpacePercentError'
    root[(ISystemProperties_setFreeDiskSpacePercentErrorRequestMsg.typecode.nspname,ISystemProperties_setFreeDiskSpacePercentErrorRequestMsg.typecode.pname)] = 'soap_ISystemProperties_setFreeDiskSpacePercentError'

    def soap_ISystemProperties_getVRDEAuthLibrary(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getVRDEAuthLibraryRequestMsg.typecode)
        return request,ISystemProperties_getVRDEAuthLibraryResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getVRDEAuthLibrary'
    root[(ISystemProperties_getVRDEAuthLibraryRequestMsg.typecode.nspname,ISystemProperties_getVRDEAuthLibraryRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getVRDEAuthLibrary'

    def soap_ISystemProperties_setVRDEAuthLibrary(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setVRDEAuthLibraryRequestMsg.typecode)
        return request,ISystemProperties_setVRDEAuthLibraryResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setVRDEAuthLibrary'
    root[(ISystemProperties_setVRDEAuthLibraryRequestMsg.typecode.nspname,ISystemProperties_setVRDEAuthLibraryRequestMsg.typecode.pname)] = 'soap_ISystemProperties_setVRDEAuthLibrary'

    def soap_ISystemProperties_getWebServiceAuthLibrary(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getWebServiceAuthLibraryRequestMsg.typecode)
        return request,ISystemProperties_getWebServiceAuthLibraryResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getWebServiceAuthLibrary'
    root[(ISystemProperties_getWebServiceAuthLibraryRequestMsg.typecode.nspname,ISystemProperties_getWebServiceAuthLibraryRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getWebServiceAuthLibrary'

    def soap_ISystemProperties_setWebServiceAuthLibrary(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setWebServiceAuthLibraryRequestMsg.typecode)
        return request,ISystemProperties_setWebServiceAuthLibraryResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setWebServiceAuthLibrary'
    root[(ISystemProperties_setWebServiceAuthLibraryRequestMsg.typecode.nspname,ISystemProperties_setWebServiceAuthLibraryRequestMsg.typecode.pname)] = 'soap_ISystemProperties_setWebServiceAuthLibrary'

    def soap_ISystemProperties_getDefaultVRDEExtPack(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getDefaultVRDEExtPackRequestMsg.typecode)
        return request,ISystemProperties_getDefaultVRDEExtPackResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getDefaultVRDEExtPack'
    root[(ISystemProperties_getDefaultVRDEExtPackRequestMsg.typecode.nspname,ISystemProperties_getDefaultVRDEExtPackRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getDefaultVRDEExtPack'

    def soap_ISystemProperties_setDefaultVRDEExtPack(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setDefaultVRDEExtPackRequestMsg.typecode)
        return request,ISystemProperties_setDefaultVRDEExtPackResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setDefaultVRDEExtPack'
    root[(ISystemProperties_setDefaultVRDEExtPackRequestMsg.typecode.nspname,ISystemProperties_setDefaultVRDEExtPackRequestMsg.typecode.pname)] = 'soap_ISystemProperties_setDefaultVRDEExtPack'

    def soap_ISystemProperties_getLogHistoryCount(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getLogHistoryCountRequestMsg.typecode)
        return request,ISystemProperties_getLogHistoryCountResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getLogHistoryCount'
    root[(ISystemProperties_getLogHistoryCountRequestMsg.typecode.nspname,ISystemProperties_getLogHistoryCountRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getLogHistoryCount'

    def soap_ISystemProperties_setLogHistoryCount(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setLogHistoryCountRequestMsg.typecode)
        return request,ISystemProperties_setLogHistoryCountResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setLogHistoryCount'
    root[(ISystemProperties_setLogHistoryCountRequestMsg.typecode.nspname,ISystemProperties_setLogHistoryCountRequestMsg.typecode.pname)] = 'soap_ISystemProperties_setLogHistoryCount'

    def soap_ISystemProperties_getDefaultAudioDriver(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getDefaultAudioDriverRequestMsg.typecode)
        return request,ISystemProperties_getDefaultAudioDriverResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getDefaultAudioDriver'
    root[(ISystemProperties_getDefaultAudioDriverRequestMsg.typecode.nspname,ISystemProperties_getDefaultAudioDriverRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getDefaultAudioDriver'

    def soap_ISystemProperties_getAutostartDatabasePath(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getAutostartDatabasePathRequestMsg.typecode)
        return request,ISystemProperties_getAutostartDatabasePathResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getAutostartDatabasePath'
    root[(ISystemProperties_getAutostartDatabasePathRequestMsg.typecode.nspname,ISystemProperties_getAutostartDatabasePathRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getAutostartDatabasePath'

    def soap_ISystemProperties_setAutostartDatabasePath(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setAutostartDatabasePathRequestMsg.typecode)
        return request,ISystemProperties_setAutostartDatabasePathResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setAutostartDatabasePath'
    root[(ISystemProperties_setAutostartDatabasePathRequestMsg.typecode.nspname,ISystemProperties_setAutostartDatabasePathRequestMsg.typecode.pname)] = 'soap_ISystemProperties_setAutostartDatabasePath'

    def soap_ISystemProperties_getDefaultAdditionsISO(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getDefaultAdditionsISORequestMsg.typecode)
        return request,ISystemProperties_getDefaultAdditionsISOResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getDefaultAdditionsISO'
    root[(ISystemProperties_getDefaultAdditionsISORequestMsg.typecode.nspname,ISystemProperties_getDefaultAdditionsISORequestMsg.typecode.pname)] = 'soap_ISystemProperties_getDefaultAdditionsISO'

    def soap_ISystemProperties_setDefaultAdditionsISO(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setDefaultAdditionsISORequestMsg.typecode)
        return request,ISystemProperties_setDefaultAdditionsISOResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setDefaultAdditionsISO'
    root[(ISystemProperties_setDefaultAdditionsISORequestMsg.typecode.nspname,ISystemProperties_setDefaultAdditionsISORequestMsg.typecode.pname)] = 'soap_ISystemProperties_setDefaultAdditionsISO'

    def soap_ISystemProperties_getDefaultFrontend(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getDefaultFrontendRequestMsg.typecode)
        return request,ISystemProperties_getDefaultFrontendResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getDefaultFrontend'
    root[(ISystemProperties_getDefaultFrontendRequestMsg.typecode.nspname,ISystemProperties_getDefaultFrontendRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getDefaultFrontend'

    def soap_ISystemProperties_setDefaultFrontend(self, ps, **kw):
        request = ps.Parse(ISystemProperties_setDefaultFrontendRequestMsg.typecode)
        return request,ISystemProperties_setDefaultFrontendResultMsg()

    soapAction[''] = 'soap_ISystemProperties_setDefaultFrontend'
    root[(ISystemProperties_setDefaultFrontendRequestMsg.typecode.nspname,ISystemProperties_setDefaultFrontendRequestMsg.typecode.pname)] = 'soap_ISystemProperties_setDefaultFrontend'

    def soap_ISystemProperties_getScreenShotFormats(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getScreenShotFormatsRequestMsg.typecode)
        return request,ISystemProperties_getScreenShotFormatsResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getScreenShotFormats'
    root[(ISystemProperties_getScreenShotFormatsRequestMsg.typecode.nspname,ISystemProperties_getScreenShotFormatsRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getScreenShotFormats'

    def soap_ISystemProperties_getMaxNetworkAdapters(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMaxNetworkAdaptersRequestMsg.typecode)
        return request,ISystemProperties_getMaxNetworkAdaptersResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMaxNetworkAdapters'
    root[(ISystemProperties_getMaxNetworkAdaptersRequestMsg.typecode.nspname,ISystemProperties_getMaxNetworkAdaptersRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMaxNetworkAdapters'

    def soap_ISystemProperties_getMaxNetworkAdaptersOfType(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMaxNetworkAdaptersOfTypeRequestMsg.typecode)
        return request,ISystemProperties_getMaxNetworkAdaptersOfTypeResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMaxNetworkAdaptersOfType'
    root[(ISystemProperties_getMaxNetworkAdaptersOfTypeRequestMsg.typecode.nspname,ISystemProperties_getMaxNetworkAdaptersOfTypeRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMaxNetworkAdaptersOfType'

    def soap_ISystemProperties_getMaxDevicesPerPortForStorageBus(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMaxDevicesPerPortForStorageBusRequestMsg.typecode)
        return request,ISystemProperties_getMaxDevicesPerPortForStorageBusResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMaxDevicesPerPortForStorageBus'
    root[(ISystemProperties_getMaxDevicesPerPortForStorageBusRequestMsg.typecode.nspname,ISystemProperties_getMaxDevicesPerPortForStorageBusRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMaxDevicesPerPortForStorageBus'

    def soap_ISystemProperties_getMinPortCountForStorageBus(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMinPortCountForStorageBusRequestMsg.typecode)
        return request,ISystemProperties_getMinPortCountForStorageBusResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMinPortCountForStorageBus'
    root[(ISystemProperties_getMinPortCountForStorageBusRequestMsg.typecode.nspname,ISystemProperties_getMinPortCountForStorageBusRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMinPortCountForStorageBus'

    def soap_ISystemProperties_getMaxPortCountForStorageBus(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMaxPortCountForStorageBusRequestMsg.typecode)
        return request,ISystemProperties_getMaxPortCountForStorageBusResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMaxPortCountForStorageBus'
    root[(ISystemProperties_getMaxPortCountForStorageBusRequestMsg.typecode.nspname,ISystemProperties_getMaxPortCountForStorageBusRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMaxPortCountForStorageBus'

    def soap_ISystemProperties_getMaxInstancesOfStorageBus(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMaxInstancesOfStorageBusRequestMsg.typecode)
        return request,ISystemProperties_getMaxInstancesOfStorageBusResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMaxInstancesOfStorageBus'
    root[(ISystemProperties_getMaxInstancesOfStorageBusRequestMsg.typecode.nspname,ISystemProperties_getMaxInstancesOfStorageBusRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMaxInstancesOfStorageBus'

    def soap_ISystemProperties_getDeviceTypesForStorageBus(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getDeviceTypesForStorageBusRequestMsg.typecode)
        return request,ISystemProperties_getDeviceTypesForStorageBusResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getDeviceTypesForStorageBus'
    root[(ISystemProperties_getDeviceTypesForStorageBusRequestMsg.typecode.nspname,ISystemProperties_getDeviceTypesForStorageBusRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getDeviceTypesForStorageBus'

    def soap_ISystemProperties_getDefaultIoCacheSettingForStorageController(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getDefaultIoCacheSettingForStorageControllerRequestMsg.typecode)
        return request,ISystemProperties_getDefaultIoCacheSettingForStorageControllerResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getDefaultIoCacheSettingForStorageController'
    root[(ISystemProperties_getDefaultIoCacheSettingForStorageControllerRequestMsg.typecode.nspname,ISystemProperties_getDefaultIoCacheSettingForStorageControllerRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getDefaultIoCacheSettingForStorageController'

    def soap_ISystemProperties_getStorageControllerHotplugCapable(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getStorageControllerHotplugCapableRequestMsg.typecode)
        return request,ISystemProperties_getStorageControllerHotplugCapableResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getStorageControllerHotplugCapable'
    root[(ISystemProperties_getStorageControllerHotplugCapableRequestMsg.typecode.nspname,ISystemProperties_getStorageControllerHotplugCapableRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getStorageControllerHotplugCapable'

    def soap_ISystemProperties_getMaxInstancesOfUSBControllerType(self, ps, **kw):
        request = ps.Parse(ISystemProperties_getMaxInstancesOfUSBControllerTypeRequestMsg.typecode)
        return request,ISystemProperties_getMaxInstancesOfUSBControllerTypeResultMsg()

    soapAction[''] = 'soap_ISystemProperties_getMaxInstancesOfUSBControllerType'
    root[(ISystemProperties_getMaxInstancesOfUSBControllerTypeRequestMsg.typecode.nspname,ISystemProperties_getMaxInstancesOfUSBControllerTypeRequestMsg.typecode.pname)] = 'soap_ISystemProperties_getMaxInstancesOfUSBControllerType'

    def soap_IDnDBase_getFormats(self, ps, **kw):
        request = ps.Parse(IDnDBase_getFormatsRequestMsg.typecode)
        return request,IDnDBase_getFormatsResultMsg()

    soapAction[''] = 'soap_IDnDBase_getFormats'
    root[(IDnDBase_getFormatsRequestMsg.typecode.nspname,IDnDBase_getFormatsRequestMsg.typecode.pname)] = 'soap_IDnDBase_getFormats'

    def soap_IDnDBase_getProtocolVersion(self, ps, **kw):
        request = ps.Parse(IDnDBase_getProtocolVersionRequestMsg.typecode)
        return request,IDnDBase_getProtocolVersionResultMsg()

    soapAction[''] = 'soap_IDnDBase_getProtocolVersion'
    root[(IDnDBase_getProtocolVersionRequestMsg.typecode.nspname,IDnDBase_getProtocolVersionRequestMsg.typecode.pname)] = 'soap_IDnDBase_getProtocolVersion'

    def soap_IDnDBase_isFormatSupported(self, ps, **kw):
        request = ps.Parse(IDnDBase_isFormatSupportedRequestMsg.typecode)
        return request,IDnDBase_isFormatSupportedResultMsg()

    soapAction[''] = 'soap_IDnDBase_isFormatSupported'
    root[(IDnDBase_isFormatSupportedRequestMsg.typecode.nspname,IDnDBase_isFormatSupportedRequestMsg.typecode.pname)] = 'soap_IDnDBase_isFormatSupported'

    def soap_IDnDBase_addFormats(self, ps, **kw):
        request = ps.Parse(IDnDBase_addFormatsRequestMsg.typecode)
        return request,IDnDBase_addFormatsResultMsg()

    soapAction[''] = 'soap_IDnDBase_addFormats'
    root[(IDnDBase_addFormatsRequestMsg.typecode.nspname,IDnDBase_addFormatsRequestMsg.typecode.pname)] = 'soap_IDnDBase_addFormats'

    def soap_IDnDBase_removeFormats(self, ps, **kw):
        request = ps.Parse(IDnDBase_removeFormatsRequestMsg.typecode)
        return request,IDnDBase_removeFormatsResultMsg()

    soapAction[''] = 'soap_IDnDBase_removeFormats'
    root[(IDnDBase_removeFormatsRequestMsg.typecode.nspname,IDnDBase_removeFormatsRequestMsg.typecode.pname)] = 'soap_IDnDBase_removeFormats'

    def soap_IDnDSource_dragIsPending(self, ps, **kw):
        request = ps.Parse(IDnDSource_dragIsPendingRequestMsg.typecode)
        return request,IDnDSource_dragIsPendingResultMsg()

    soapAction[''] = 'soap_IDnDSource_dragIsPending'
    root[(IDnDSource_dragIsPendingRequestMsg.typecode.nspname,IDnDSource_dragIsPendingRequestMsg.typecode.pname)] = 'soap_IDnDSource_dragIsPending'

    def soap_IDnDSource_drop(self, ps, **kw):
        request = ps.Parse(IDnDSource_dropRequestMsg.typecode)
        return request,IDnDSource_dropResultMsg()

    soapAction[''] = 'soap_IDnDSource_drop'
    root[(IDnDSource_dropRequestMsg.typecode.nspname,IDnDSource_dropRequestMsg.typecode.pname)] = 'soap_IDnDSource_drop'

    def soap_IDnDSource_receiveData(self, ps, **kw):
        request = ps.Parse(IDnDSource_receiveDataRequestMsg.typecode)
        return request,IDnDSource_receiveDataResultMsg()

    soapAction[''] = 'soap_IDnDSource_receiveData'
    root[(IDnDSource_receiveDataRequestMsg.typecode.nspname,IDnDSource_receiveDataRequestMsg.typecode.pname)] = 'soap_IDnDSource_receiveData'

    def soap_IGuestDnDSource_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IGuestDnDSource_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IGuestDnDSource_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IGuestDnDSource_getMidlDoesNotLikeEmptyInterfaces'
    root[(IGuestDnDSource_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IGuestDnDSource_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IGuestDnDSource_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IDnDTarget_enter(self, ps, **kw):
        request = ps.Parse(IDnDTarget_enterRequestMsg.typecode)
        return request,IDnDTarget_enterResultMsg()

    soapAction[''] = 'soap_IDnDTarget_enter'
    root[(IDnDTarget_enterRequestMsg.typecode.nspname,IDnDTarget_enterRequestMsg.typecode.pname)] = 'soap_IDnDTarget_enter'

    def soap_IDnDTarget_move(self, ps, **kw):
        request = ps.Parse(IDnDTarget_moveRequestMsg.typecode)
        return request,IDnDTarget_moveResultMsg()

    soapAction[''] = 'soap_IDnDTarget_move'
    root[(IDnDTarget_moveRequestMsg.typecode.nspname,IDnDTarget_moveRequestMsg.typecode.pname)] = 'soap_IDnDTarget_move'

    def soap_IDnDTarget_leave(self, ps, **kw):
        request = ps.Parse(IDnDTarget_leaveRequestMsg.typecode)
        return request,IDnDTarget_leaveResultMsg()

    soapAction[''] = 'soap_IDnDTarget_leave'
    root[(IDnDTarget_leaveRequestMsg.typecode.nspname,IDnDTarget_leaveRequestMsg.typecode.pname)] = 'soap_IDnDTarget_leave'

    def soap_IDnDTarget_drop(self, ps, **kw):
        request = ps.Parse(IDnDTarget_dropRequestMsg.typecode)
        return request,IDnDTarget_dropResultMsg()

    soapAction[''] = 'soap_IDnDTarget_drop'
    root[(IDnDTarget_dropRequestMsg.typecode.nspname,IDnDTarget_dropRequestMsg.typecode.pname)] = 'soap_IDnDTarget_drop'

    def soap_IDnDTarget_sendData(self, ps, **kw):
        request = ps.Parse(IDnDTarget_sendDataRequestMsg.typecode)
        return request,IDnDTarget_sendDataResultMsg()

    soapAction[''] = 'soap_IDnDTarget_sendData'
    root[(IDnDTarget_sendDataRequestMsg.typecode.nspname,IDnDTarget_sendDataRequestMsg.typecode.pname)] = 'soap_IDnDTarget_sendData'

    def soap_IDnDTarget_cancel(self, ps, **kw):
        request = ps.Parse(IDnDTarget_cancelRequestMsg.typecode)
        return request,IDnDTarget_cancelResultMsg()

    soapAction[''] = 'soap_IDnDTarget_cancel'
    root[(IDnDTarget_cancelRequestMsg.typecode.nspname,IDnDTarget_cancelRequestMsg.typecode.pname)] = 'soap_IDnDTarget_cancel'

    def soap_IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfaces'
    root[(IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IGuestSession_getUser(self, ps, **kw):
        request = ps.Parse(IGuestSession_getUserRequestMsg.typecode)
        return request,IGuestSession_getUserResultMsg()

    soapAction[''] = 'soap_IGuestSession_getUser'
    root[(IGuestSession_getUserRequestMsg.typecode.nspname,IGuestSession_getUserRequestMsg.typecode.pname)] = 'soap_IGuestSession_getUser'

    def soap_IGuestSession_getDomain(self, ps, **kw):
        request = ps.Parse(IGuestSession_getDomainRequestMsg.typecode)
        return request,IGuestSession_getDomainResultMsg()

    soapAction[''] = 'soap_IGuestSession_getDomain'
    root[(IGuestSession_getDomainRequestMsg.typecode.nspname,IGuestSession_getDomainRequestMsg.typecode.pname)] = 'soap_IGuestSession_getDomain'

    def soap_IGuestSession_getName(self, ps, **kw):
        request = ps.Parse(IGuestSession_getNameRequestMsg.typecode)
        return request,IGuestSession_getNameResultMsg()

    soapAction[''] = 'soap_IGuestSession_getName'
    root[(IGuestSession_getNameRequestMsg.typecode.nspname,IGuestSession_getNameRequestMsg.typecode.pname)] = 'soap_IGuestSession_getName'

    def soap_IGuestSession_getId(self, ps, **kw):
        request = ps.Parse(IGuestSession_getIdRequestMsg.typecode)
        return request,IGuestSession_getIdResultMsg()

    soapAction[''] = 'soap_IGuestSession_getId'
    root[(IGuestSession_getIdRequestMsg.typecode.nspname,IGuestSession_getIdRequestMsg.typecode.pname)] = 'soap_IGuestSession_getId'

    def soap_IGuestSession_getTimeout(self, ps, **kw):
        request = ps.Parse(IGuestSession_getTimeoutRequestMsg.typecode)
        return request,IGuestSession_getTimeoutResultMsg()

    soapAction[''] = 'soap_IGuestSession_getTimeout'
    root[(IGuestSession_getTimeoutRequestMsg.typecode.nspname,IGuestSession_getTimeoutRequestMsg.typecode.pname)] = 'soap_IGuestSession_getTimeout'

    def soap_IGuestSession_setTimeout(self, ps, **kw):
        request = ps.Parse(IGuestSession_setTimeoutRequestMsg.typecode)
        return request,IGuestSession_setTimeoutResultMsg()

    soapAction[''] = 'soap_IGuestSession_setTimeout'
    root[(IGuestSession_setTimeoutRequestMsg.typecode.nspname,IGuestSession_setTimeoutRequestMsg.typecode.pname)] = 'soap_IGuestSession_setTimeout'

    def soap_IGuestSession_getProtocolVersion(self, ps, **kw):
        request = ps.Parse(IGuestSession_getProtocolVersionRequestMsg.typecode)
        return request,IGuestSession_getProtocolVersionResultMsg()

    soapAction[''] = 'soap_IGuestSession_getProtocolVersion'
    root[(IGuestSession_getProtocolVersionRequestMsg.typecode.nspname,IGuestSession_getProtocolVersionRequestMsg.typecode.pname)] = 'soap_IGuestSession_getProtocolVersion'

    def soap_IGuestSession_getStatus(self, ps, **kw):
        request = ps.Parse(IGuestSession_getStatusRequestMsg.typecode)
        return request,IGuestSession_getStatusResultMsg()

    soapAction[''] = 'soap_IGuestSession_getStatus'
    root[(IGuestSession_getStatusRequestMsg.typecode.nspname,IGuestSession_getStatusRequestMsg.typecode.pname)] = 'soap_IGuestSession_getStatus'

    def soap_IGuestSession_getEnvironmentChanges(self, ps, **kw):
        request = ps.Parse(IGuestSession_getEnvironmentChangesRequestMsg.typecode)
        return request,IGuestSession_getEnvironmentChangesResultMsg()

    soapAction[''] = 'soap_IGuestSession_getEnvironmentChanges'
    root[(IGuestSession_getEnvironmentChangesRequestMsg.typecode.nspname,IGuestSession_getEnvironmentChangesRequestMsg.typecode.pname)] = 'soap_IGuestSession_getEnvironmentChanges'

    def soap_IGuestSession_setEnvironmentChanges(self, ps, **kw):
        request = ps.Parse(IGuestSession_setEnvironmentChangesRequestMsg.typecode)
        return request,IGuestSession_setEnvironmentChangesResultMsg()

    soapAction[''] = 'soap_IGuestSession_setEnvironmentChanges'
    root[(IGuestSession_setEnvironmentChangesRequestMsg.typecode.nspname,IGuestSession_setEnvironmentChangesRequestMsg.typecode.pname)] = 'soap_IGuestSession_setEnvironmentChanges'

    def soap_IGuestSession_getEnvironmentBase(self, ps, **kw):
        request = ps.Parse(IGuestSession_getEnvironmentBaseRequestMsg.typecode)
        return request,IGuestSession_getEnvironmentBaseResultMsg()

    soapAction[''] = 'soap_IGuestSession_getEnvironmentBase'
    root[(IGuestSession_getEnvironmentBaseRequestMsg.typecode.nspname,IGuestSession_getEnvironmentBaseRequestMsg.typecode.pname)] = 'soap_IGuestSession_getEnvironmentBase'

    def soap_IGuestSession_getProcesses(self, ps, **kw):
        request = ps.Parse(IGuestSession_getProcessesRequestMsg.typecode)
        return request,IGuestSession_getProcessesResultMsg()

    soapAction[''] = 'soap_IGuestSession_getProcesses'
    root[(IGuestSession_getProcessesRequestMsg.typecode.nspname,IGuestSession_getProcessesRequestMsg.typecode.pname)] = 'soap_IGuestSession_getProcesses'

    def soap_IGuestSession_getPathStyle(self, ps, **kw):
        request = ps.Parse(IGuestSession_getPathStyleRequestMsg.typecode)
        return request,IGuestSession_getPathStyleResultMsg()

    soapAction[''] = 'soap_IGuestSession_getPathStyle'
    root[(IGuestSession_getPathStyleRequestMsg.typecode.nspname,IGuestSession_getPathStyleRequestMsg.typecode.pname)] = 'soap_IGuestSession_getPathStyle'

    def soap_IGuestSession_getCurrentDirectory(self, ps, **kw):
        request = ps.Parse(IGuestSession_getCurrentDirectoryRequestMsg.typecode)
        return request,IGuestSession_getCurrentDirectoryResultMsg()

    soapAction[''] = 'soap_IGuestSession_getCurrentDirectory'
    root[(IGuestSession_getCurrentDirectoryRequestMsg.typecode.nspname,IGuestSession_getCurrentDirectoryRequestMsg.typecode.pname)] = 'soap_IGuestSession_getCurrentDirectory'

    def soap_IGuestSession_setCurrentDirectory(self, ps, **kw):
        request = ps.Parse(IGuestSession_setCurrentDirectoryRequestMsg.typecode)
        return request,IGuestSession_setCurrentDirectoryResultMsg()

    soapAction[''] = 'soap_IGuestSession_setCurrentDirectory'
    root[(IGuestSession_setCurrentDirectoryRequestMsg.typecode.nspname,IGuestSession_setCurrentDirectoryRequestMsg.typecode.pname)] = 'soap_IGuestSession_setCurrentDirectory'

    def soap_IGuestSession_getDirectories(self, ps, **kw):
        request = ps.Parse(IGuestSession_getDirectoriesRequestMsg.typecode)
        return request,IGuestSession_getDirectoriesResultMsg()

    soapAction[''] = 'soap_IGuestSession_getDirectories'
    root[(IGuestSession_getDirectoriesRequestMsg.typecode.nspname,IGuestSession_getDirectoriesRequestMsg.typecode.pname)] = 'soap_IGuestSession_getDirectories'

    def soap_IGuestSession_getFiles(self, ps, **kw):
        request = ps.Parse(IGuestSession_getFilesRequestMsg.typecode)
        return request,IGuestSession_getFilesResultMsg()

    soapAction[''] = 'soap_IGuestSession_getFiles'
    root[(IGuestSession_getFilesRequestMsg.typecode.nspname,IGuestSession_getFilesRequestMsg.typecode.pname)] = 'soap_IGuestSession_getFiles'

    def soap_IGuestSession_getEventSource(self, ps, **kw):
        request = ps.Parse(IGuestSession_getEventSourceRequestMsg.typecode)
        return request,IGuestSession_getEventSourceResultMsg()

    soapAction[''] = 'soap_IGuestSession_getEventSource'
    root[(IGuestSession_getEventSourceRequestMsg.typecode.nspname,IGuestSession_getEventSourceRequestMsg.typecode.pname)] = 'soap_IGuestSession_getEventSource'

    def soap_IGuestSession_close(self, ps, **kw):
        request = ps.Parse(IGuestSession_closeRequestMsg.typecode)
        return request,IGuestSession_closeResultMsg()

    soapAction[''] = 'soap_IGuestSession_close'
    root[(IGuestSession_closeRequestMsg.typecode.nspname,IGuestSession_closeRequestMsg.typecode.pname)] = 'soap_IGuestSession_close'

    def soap_IGuestSession_directoryCopy(self, ps, **kw):
        request = ps.Parse(IGuestSession_directoryCopyRequestMsg.typecode)
        return request,IGuestSession_directoryCopyResultMsg()

    soapAction[''] = 'soap_IGuestSession_directoryCopy'
    root[(IGuestSession_directoryCopyRequestMsg.typecode.nspname,IGuestSession_directoryCopyRequestMsg.typecode.pname)] = 'soap_IGuestSession_directoryCopy'

    def soap_IGuestSession_directoryCopyFromGuest(self, ps, **kw):
        request = ps.Parse(IGuestSession_directoryCopyFromGuestRequestMsg.typecode)
        return request,IGuestSession_directoryCopyFromGuestResultMsg()

    soapAction[''] = 'soap_IGuestSession_directoryCopyFromGuest'
    root[(IGuestSession_directoryCopyFromGuestRequestMsg.typecode.nspname,IGuestSession_directoryCopyFromGuestRequestMsg.typecode.pname)] = 'soap_IGuestSession_directoryCopyFromGuest'

    def soap_IGuestSession_directoryCopyToGuest(self, ps, **kw):
        request = ps.Parse(IGuestSession_directoryCopyToGuestRequestMsg.typecode)
        return request,IGuestSession_directoryCopyToGuestResultMsg()

    soapAction[''] = 'soap_IGuestSession_directoryCopyToGuest'
    root[(IGuestSession_directoryCopyToGuestRequestMsg.typecode.nspname,IGuestSession_directoryCopyToGuestRequestMsg.typecode.pname)] = 'soap_IGuestSession_directoryCopyToGuest'

    def soap_IGuestSession_directoryCreate(self, ps, **kw):
        request = ps.Parse(IGuestSession_directoryCreateRequestMsg.typecode)
        return request,IGuestSession_directoryCreateResultMsg()

    soapAction[''] = 'soap_IGuestSession_directoryCreate'
    root[(IGuestSession_directoryCreateRequestMsg.typecode.nspname,IGuestSession_directoryCreateRequestMsg.typecode.pname)] = 'soap_IGuestSession_directoryCreate'

    def soap_IGuestSession_directoryCreateTemp(self, ps, **kw):
        request = ps.Parse(IGuestSession_directoryCreateTempRequestMsg.typecode)
        return request,IGuestSession_directoryCreateTempResultMsg()

    soapAction[''] = 'soap_IGuestSession_directoryCreateTemp'
    root[(IGuestSession_directoryCreateTempRequestMsg.typecode.nspname,IGuestSession_directoryCreateTempRequestMsg.typecode.pname)] = 'soap_IGuestSession_directoryCreateTemp'

    def soap_IGuestSession_directoryExists(self, ps, **kw):
        request = ps.Parse(IGuestSession_directoryExistsRequestMsg.typecode)
        return request,IGuestSession_directoryExistsResultMsg()

    soapAction[''] = 'soap_IGuestSession_directoryExists'
    root[(IGuestSession_directoryExistsRequestMsg.typecode.nspname,IGuestSession_directoryExistsRequestMsg.typecode.pname)] = 'soap_IGuestSession_directoryExists'

    def soap_IGuestSession_directoryOpen(self, ps, **kw):
        request = ps.Parse(IGuestSession_directoryOpenRequestMsg.typecode)
        return request,IGuestSession_directoryOpenResultMsg()

    soapAction[''] = 'soap_IGuestSession_directoryOpen'
    root[(IGuestSession_directoryOpenRequestMsg.typecode.nspname,IGuestSession_directoryOpenRequestMsg.typecode.pname)] = 'soap_IGuestSession_directoryOpen'

    def soap_IGuestSession_directoryRemove(self, ps, **kw):
        request = ps.Parse(IGuestSession_directoryRemoveRequestMsg.typecode)
        return request,IGuestSession_directoryRemoveResultMsg()

    soapAction[''] = 'soap_IGuestSession_directoryRemove'
    root[(IGuestSession_directoryRemoveRequestMsg.typecode.nspname,IGuestSession_directoryRemoveRequestMsg.typecode.pname)] = 'soap_IGuestSession_directoryRemove'

    def soap_IGuestSession_directoryRemoveRecursive(self, ps, **kw):
        request = ps.Parse(IGuestSession_directoryRemoveRecursiveRequestMsg.typecode)
        return request,IGuestSession_directoryRemoveRecursiveResultMsg()

    soapAction[''] = 'soap_IGuestSession_directoryRemoveRecursive'
    root[(IGuestSession_directoryRemoveRecursiveRequestMsg.typecode.nspname,IGuestSession_directoryRemoveRecursiveRequestMsg.typecode.pname)] = 'soap_IGuestSession_directoryRemoveRecursive'

    def soap_IGuestSession_environmentScheduleSet(self, ps, **kw):
        request = ps.Parse(IGuestSession_environmentScheduleSetRequestMsg.typecode)
        return request,IGuestSession_environmentScheduleSetResultMsg()

    soapAction[''] = 'soap_IGuestSession_environmentScheduleSet'
    root[(IGuestSession_environmentScheduleSetRequestMsg.typecode.nspname,IGuestSession_environmentScheduleSetRequestMsg.typecode.pname)] = 'soap_IGuestSession_environmentScheduleSet'

    def soap_IGuestSession_environmentScheduleUnset(self, ps, **kw):
        request = ps.Parse(IGuestSession_environmentScheduleUnsetRequestMsg.typecode)
        return request,IGuestSession_environmentScheduleUnsetResultMsg()

    soapAction[''] = 'soap_IGuestSession_environmentScheduleUnset'
    root[(IGuestSession_environmentScheduleUnsetRequestMsg.typecode.nspname,IGuestSession_environmentScheduleUnsetRequestMsg.typecode.pname)] = 'soap_IGuestSession_environmentScheduleUnset'

    def soap_IGuestSession_environmentGetBaseVariable(self, ps, **kw):
        request = ps.Parse(IGuestSession_environmentGetBaseVariableRequestMsg.typecode)
        return request,IGuestSession_environmentGetBaseVariableResultMsg()

    soapAction[''] = 'soap_IGuestSession_environmentGetBaseVariable'
    root[(IGuestSession_environmentGetBaseVariableRequestMsg.typecode.nspname,IGuestSession_environmentGetBaseVariableRequestMsg.typecode.pname)] = 'soap_IGuestSession_environmentGetBaseVariable'

    def soap_IGuestSession_environmentDoesBaseVariableExist(self, ps, **kw):
        request = ps.Parse(IGuestSession_environmentDoesBaseVariableExistRequestMsg.typecode)
        return request,IGuestSession_environmentDoesBaseVariableExistResultMsg()

    soapAction[''] = 'soap_IGuestSession_environmentDoesBaseVariableExist'
    root[(IGuestSession_environmentDoesBaseVariableExistRequestMsg.typecode.nspname,IGuestSession_environmentDoesBaseVariableExistRequestMsg.typecode.pname)] = 'soap_IGuestSession_environmentDoesBaseVariableExist'

    def soap_IGuestSession_fileCopy(self, ps, **kw):
        request = ps.Parse(IGuestSession_fileCopyRequestMsg.typecode)
        return request,IGuestSession_fileCopyResultMsg()

    soapAction[''] = 'soap_IGuestSession_fileCopy'
    root[(IGuestSession_fileCopyRequestMsg.typecode.nspname,IGuestSession_fileCopyRequestMsg.typecode.pname)] = 'soap_IGuestSession_fileCopy'

    def soap_IGuestSession_fileCopyFromGuest(self, ps, **kw):
        request = ps.Parse(IGuestSession_fileCopyFromGuestRequestMsg.typecode)
        return request,IGuestSession_fileCopyFromGuestResultMsg()

    soapAction[''] = 'soap_IGuestSession_fileCopyFromGuest'
    root[(IGuestSession_fileCopyFromGuestRequestMsg.typecode.nspname,IGuestSession_fileCopyFromGuestRequestMsg.typecode.pname)] = 'soap_IGuestSession_fileCopyFromGuest'

    def soap_IGuestSession_fileCopyToGuest(self, ps, **kw):
        request = ps.Parse(IGuestSession_fileCopyToGuestRequestMsg.typecode)
        return request,IGuestSession_fileCopyToGuestResultMsg()

    soapAction[''] = 'soap_IGuestSession_fileCopyToGuest'
    root[(IGuestSession_fileCopyToGuestRequestMsg.typecode.nspname,IGuestSession_fileCopyToGuestRequestMsg.typecode.pname)] = 'soap_IGuestSession_fileCopyToGuest'

    def soap_IGuestSession_fileCreateTemp(self, ps, **kw):
        request = ps.Parse(IGuestSession_fileCreateTempRequestMsg.typecode)
        return request,IGuestSession_fileCreateTempResultMsg()

    soapAction[''] = 'soap_IGuestSession_fileCreateTemp'
    root[(IGuestSession_fileCreateTempRequestMsg.typecode.nspname,IGuestSession_fileCreateTempRequestMsg.typecode.pname)] = 'soap_IGuestSession_fileCreateTemp'

    def soap_IGuestSession_fileExists(self, ps, **kw):
        request = ps.Parse(IGuestSession_fileExistsRequestMsg.typecode)
        return request,IGuestSession_fileExistsResultMsg()

    soapAction[''] = 'soap_IGuestSession_fileExists'
    root[(IGuestSession_fileExistsRequestMsg.typecode.nspname,IGuestSession_fileExistsRequestMsg.typecode.pname)] = 'soap_IGuestSession_fileExists'

    def soap_IGuestSession_fileOpen(self, ps, **kw):
        request = ps.Parse(IGuestSession_fileOpenRequestMsg.typecode)
        return request,IGuestSession_fileOpenResultMsg()

    soapAction[''] = 'soap_IGuestSession_fileOpen'
    root[(IGuestSession_fileOpenRequestMsg.typecode.nspname,IGuestSession_fileOpenRequestMsg.typecode.pname)] = 'soap_IGuestSession_fileOpen'

    def soap_IGuestSession_fileOpenEx(self, ps, **kw):
        request = ps.Parse(IGuestSession_fileOpenExRequestMsg.typecode)
        return request,IGuestSession_fileOpenExResultMsg()

    soapAction[''] = 'soap_IGuestSession_fileOpenEx'
    root[(IGuestSession_fileOpenExRequestMsg.typecode.nspname,IGuestSession_fileOpenExRequestMsg.typecode.pname)] = 'soap_IGuestSession_fileOpenEx'

    def soap_IGuestSession_fileQuerySize(self, ps, **kw):
        request = ps.Parse(IGuestSession_fileQuerySizeRequestMsg.typecode)
        return request,IGuestSession_fileQuerySizeResultMsg()

    soapAction[''] = 'soap_IGuestSession_fileQuerySize'
    root[(IGuestSession_fileQuerySizeRequestMsg.typecode.nspname,IGuestSession_fileQuerySizeRequestMsg.typecode.pname)] = 'soap_IGuestSession_fileQuerySize'

    def soap_IGuestSession_fsObjExists(self, ps, **kw):
        request = ps.Parse(IGuestSession_fsObjExistsRequestMsg.typecode)
        return request,IGuestSession_fsObjExistsResultMsg()

    soapAction[''] = 'soap_IGuestSession_fsObjExists'
    root[(IGuestSession_fsObjExistsRequestMsg.typecode.nspname,IGuestSession_fsObjExistsRequestMsg.typecode.pname)] = 'soap_IGuestSession_fsObjExists'

    def soap_IGuestSession_fsObjQueryInfo(self, ps, **kw):
        request = ps.Parse(IGuestSession_fsObjQueryInfoRequestMsg.typecode)
        return request,IGuestSession_fsObjQueryInfoResultMsg()

    soapAction[''] = 'soap_IGuestSession_fsObjQueryInfo'
    root[(IGuestSession_fsObjQueryInfoRequestMsg.typecode.nspname,IGuestSession_fsObjQueryInfoRequestMsg.typecode.pname)] = 'soap_IGuestSession_fsObjQueryInfo'

    def soap_IGuestSession_fsObjRemove(self, ps, **kw):
        request = ps.Parse(IGuestSession_fsObjRemoveRequestMsg.typecode)
        return request,IGuestSession_fsObjRemoveResultMsg()

    soapAction[''] = 'soap_IGuestSession_fsObjRemove'
    root[(IGuestSession_fsObjRemoveRequestMsg.typecode.nspname,IGuestSession_fsObjRemoveRequestMsg.typecode.pname)] = 'soap_IGuestSession_fsObjRemove'

    def soap_IGuestSession_fsObjRename(self, ps, **kw):
        request = ps.Parse(IGuestSession_fsObjRenameRequestMsg.typecode)
        return request,IGuestSession_fsObjRenameResultMsg()

    soapAction[''] = 'soap_IGuestSession_fsObjRename'
    root[(IGuestSession_fsObjRenameRequestMsg.typecode.nspname,IGuestSession_fsObjRenameRequestMsg.typecode.pname)] = 'soap_IGuestSession_fsObjRename'

    def soap_IGuestSession_fsObjMove(self, ps, **kw):
        request = ps.Parse(IGuestSession_fsObjMoveRequestMsg.typecode)
        return request,IGuestSession_fsObjMoveResultMsg()

    soapAction[''] = 'soap_IGuestSession_fsObjMove'
    root[(IGuestSession_fsObjMoveRequestMsg.typecode.nspname,IGuestSession_fsObjMoveRequestMsg.typecode.pname)] = 'soap_IGuestSession_fsObjMove'

    def soap_IGuestSession_fsObjSetACL(self, ps, **kw):
        request = ps.Parse(IGuestSession_fsObjSetACLRequestMsg.typecode)
        return request,IGuestSession_fsObjSetACLResultMsg()

    soapAction[''] = 'soap_IGuestSession_fsObjSetACL'
    root[(IGuestSession_fsObjSetACLRequestMsg.typecode.nspname,IGuestSession_fsObjSetACLRequestMsg.typecode.pname)] = 'soap_IGuestSession_fsObjSetACL'

    def soap_IGuestSession_processCreate(self, ps, **kw):
        request = ps.Parse(IGuestSession_processCreateRequestMsg.typecode)
        return request,IGuestSession_processCreateResultMsg()

    soapAction[''] = 'soap_IGuestSession_processCreate'
    root[(IGuestSession_processCreateRequestMsg.typecode.nspname,IGuestSession_processCreateRequestMsg.typecode.pname)] = 'soap_IGuestSession_processCreate'

    def soap_IGuestSession_processCreateEx(self, ps, **kw):
        request = ps.Parse(IGuestSession_processCreateExRequestMsg.typecode)
        return request,IGuestSession_processCreateExResultMsg()

    soapAction[''] = 'soap_IGuestSession_processCreateEx'
    root[(IGuestSession_processCreateExRequestMsg.typecode.nspname,IGuestSession_processCreateExRequestMsg.typecode.pname)] = 'soap_IGuestSession_processCreateEx'

    def soap_IGuestSession_processGet(self, ps, **kw):
        request = ps.Parse(IGuestSession_processGetRequestMsg.typecode)
        return request,IGuestSession_processGetResultMsg()

    soapAction[''] = 'soap_IGuestSession_processGet'
    root[(IGuestSession_processGetRequestMsg.typecode.nspname,IGuestSession_processGetRequestMsg.typecode.pname)] = 'soap_IGuestSession_processGet'

    def soap_IGuestSession_symlinkCreate(self, ps, **kw):
        request = ps.Parse(IGuestSession_symlinkCreateRequestMsg.typecode)
        return request,IGuestSession_symlinkCreateResultMsg()

    soapAction[''] = 'soap_IGuestSession_symlinkCreate'
    root[(IGuestSession_symlinkCreateRequestMsg.typecode.nspname,IGuestSession_symlinkCreateRequestMsg.typecode.pname)] = 'soap_IGuestSession_symlinkCreate'

    def soap_IGuestSession_symlinkExists(self, ps, **kw):
        request = ps.Parse(IGuestSession_symlinkExistsRequestMsg.typecode)
        return request,IGuestSession_symlinkExistsResultMsg()

    soapAction[''] = 'soap_IGuestSession_symlinkExists'
    root[(IGuestSession_symlinkExistsRequestMsg.typecode.nspname,IGuestSession_symlinkExistsRequestMsg.typecode.pname)] = 'soap_IGuestSession_symlinkExists'

    def soap_IGuestSession_symlinkRead(self, ps, **kw):
        request = ps.Parse(IGuestSession_symlinkReadRequestMsg.typecode)
        return request,IGuestSession_symlinkReadResultMsg()

    soapAction[''] = 'soap_IGuestSession_symlinkRead'
    root[(IGuestSession_symlinkReadRequestMsg.typecode.nspname,IGuestSession_symlinkReadRequestMsg.typecode.pname)] = 'soap_IGuestSession_symlinkRead'

    def soap_IGuestSession_waitFor(self, ps, **kw):
        request = ps.Parse(IGuestSession_waitForRequestMsg.typecode)
        return request,IGuestSession_waitForResultMsg()

    soapAction[''] = 'soap_IGuestSession_waitFor'
    root[(IGuestSession_waitForRequestMsg.typecode.nspname,IGuestSession_waitForRequestMsg.typecode.pname)] = 'soap_IGuestSession_waitFor'

    def soap_IGuestSession_waitForArray(self, ps, **kw):
        request = ps.Parse(IGuestSession_waitForArrayRequestMsg.typecode)
        return request,IGuestSession_waitForArrayResultMsg()

    soapAction[''] = 'soap_IGuestSession_waitForArray'
    root[(IGuestSession_waitForArrayRequestMsg.typecode.nspname,IGuestSession_waitForArrayRequestMsg.typecode.pname)] = 'soap_IGuestSession_waitForArray'

    def soap_IProcess_getArguments(self, ps, **kw):
        request = ps.Parse(IProcess_getArgumentsRequestMsg.typecode)
        return request,IProcess_getArgumentsResultMsg()

    soapAction[''] = 'soap_IProcess_getArguments'
    root[(IProcess_getArgumentsRequestMsg.typecode.nspname,IProcess_getArgumentsRequestMsg.typecode.pname)] = 'soap_IProcess_getArguments'

    def soap_IProcess_getEnvironment(self, ps, **kw):
        request = ps.Parse(IProcess_getEnvironmentRequestMsg.typecode)
        return request,IProcess_getEnvironmentResultMsg()

    soapAction[''] = 'soap_IProcess_getEnvironment'
    root[(IProcess_getEnvironmentRequestMsg.typecode.nspname,IProcess_getEnvironmentRequestMsg.typecode.pname)] = 'soap_IProcess_getEnvironment'

    def soap_IProcess_getEventSource(self, ps, **kw):
        request = ps.Parse(IProcess_getEventSourceRequestMsg.typecode)
        return request,IProcess_getEventSourceResultMsg()

    soapAction[''] = 'soap_IProcess_getEventSource'
    root[(IProcess_getEventSourceRequestMsg.typecode.nspname,IProcess_getEventSourceRequestMsg.typecode.pname)] = 'soap_IProcess_getEventSource'

    def soap_IProcess_getExecutablePath(self, ps, **kw):
        request = ps.Parse(IProcess_getExecutablePathRequestMsg.typecode)
        return request,IProcess_getExecutablePathResultMsg()

    soapAction[''] = 'soap_IProcess_getExecutablePath'
    root[(IProcess_getExecutablePathRequestMsg.typecode.nspname,IProcess_getExecutablePathRequestMsg.typecode.pname)] = 'soap_IProcess_getExecutablePath'

    def soap_IProcess_getExitCode(self, ps, **kw):
        request = ps.Parse(IProcess_getExitCodeRequestMsg.typecode)
        return request,IProcess_getExitCodeResultMsg()

    soapAction[''] = 'soap_IProcess_getExitCode'
    root[(IProcess_getExitCodeRequestMsg.typecode.nspname,IProcess_getExitCodeRequestMsg.typecode.pname)] = 'soap_IProcess_getExitCode'

    def soap_IProcess_getName(self, ps, **kw):
        request = ps.Parse(IProcess_getNameRequestMsg.typecode)
        return request,IProcess_getNameResultMsg()

    soapAction[''] = 'soap_IProcess_getName'
    root[(IProcess_getNameRequestMsg.typecode.nspname,IProcess_getNameRequestMsg.typecode.pname)] = 'soap_IProcess_getName'

    def soap_IProcess_getPID(self, ps, **kw):
        request = ps.Parse(IProcess_getPIDRequestMsg.typecode)
        return request,IProcess_getPIDResultMsg()

    soapAction[''] = 'soap_IProcess_getPID'
    root[(IProcess_getPIDRequestMsg.typecode.nspname,IProcess_getPIDRequestMsg.typecode.pname)] = 'soap_IProcess_getPID'

    def soap_IProcess_getStatus(self, ps, **kw):
        request = ps.Parse(IProcess_getStatusRequestMsg.typecode)
        return request,IProcess_getStatusResultMsg()

    soapAction[''] = 'soap_IProcess_getStatus'
    root[(IProcess_getStatusRequestMsg.typecode.nspname,IProcess_getStatusRequestMsg.typecode.pname)] = 'soap_IProcess_getStatus'

    def soap_IProcess_waitFor(self, ps, **kw):
        request = ps.Parse(IProcess_waitForRequestMsg.typecode)
        return request,IProcess_waitForResultMsg()

    soapAction[''] = 'soap_IProcess_waitFor'
    root[(IProcess_waitForRequestMsg.typecode.nspname,IProcess_waitForRequestMsg.typecode.pname)] = 'soap_IProcess_waitFor'

    def soap_IProcess_waitForArray(self, ps, **kw):
        request = ps.Parse(IProcess_waitForArrayRequestMsg.typecode)
        return request,IProcess_waitForArrayResultMsg()

    soapAction[''] = 'soap_IProcess_waitForArray'
    root[(IProcess_waitForArrayRequestMsg.typecode.nspname,IProcess_waitForArrayRequestMsg.typecode.pname)] = 'soap_IProcess_waitForArray'

    def soap_IProcess_read(self, ps, **kw):
        request = ps.Parse(IProcess_readRequestMsg.typecode)
        return request,IProcess_readResultMsg()

    soapAction[''] = 'soap_IProcess_read'
    root[(IProcess_readRequestMsg.typecode.nspname,IProcess_readRequestMsg.typecode.pname)] = 'soap_IProcess_read'

    def soap_IProcess_write(self, ps, **kw):
        request = ps.Parse(IProcess_writeRequestMsg.typecode)
        return request,IProcess_writeResultMsg()

    soapAction[''] = 'soap_IProcess_write'
    root[(IProcess_writeRequestMsg.typecode.nspname,IProcess_writeRequestMsg.typecode.pname)] = 'soap_IProcess_write'

    def soap_IProcess_writeArray(self, ps, **kw):
        request = ps.Parse(IProcess_writeArrayRequestMsg.typecode)
        return request,IProcess_writeArrayResultMsg()

    soapAction[''] = 'soap_IProcess_writeArray'
    root[(IProcess_writeArrayRequestMsg.typecode.nspname,IProcess_writeArrayRequestMsg.typecode.pname)] = 'soap_IProcess_writeArray'

    def soap_IProcess_terminate(self, ps, **kw):
        request = ps.Parse(IProcess_terminateRequestMsg.typecode)
        return request,IProcess_terminateResultMsg()

    soapAction[''] = 'soap_IProcess_terminate'
    root[(IProcess_terminateRequestMsg.typecode.nspname,IProcess_terminateRequestMsg.typecode.pname)] = 'soap_IProcess_terminate'

    def soap_IGuestProcess_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IGuestProcess_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IGuestProcess_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IGuestProcess_getMidlDoesNotLikeEmptyInterfaces'
    root[(IGuestProcess_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IGuestProcess_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IGuestProcess_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IDirectory_getDirectoryName(self, ps, **kw):
        request = ps.Parse(IDirectory_getDirectoryNameRequestMsg.typecode)
        return request,IDirectory_getDirectoryNameResultMsg()

    soapAction[''] = 'soap_IDirectory_getDirectoryName'
    root[(IDirectory_getDirectoryNameRequestMsg.typecode.nspname,IDirectory_getDirectoryNameRequestMsg.typecode.pname)] = 'soap_IDirectory_getDirectoryName'

    def soap_IDirectory_getFilter(self, ps, **kw):
        request = ps.Parse(IDirectory_getFilterRequestMsg.typecode)
        return request,IDirectory_getFilterResultMsg()

    soapAction[''] = 'soap_IDirectory_getFilter'
    root[(IDirectory_getFilterRequestMsg.typecode.nspname,IDirectory_getFilterRequestMsg.typecode.pname)] = 'soap_IDirectory_getFilter'

    def soap_IDirectory_close(self, ps, **kw):
        request = ps.Parse(IDirectory_closeRequestMsg.typecode)
        return request,IDirectory_closeResultMsg()

    soapAction[''] = 'soap_IDirectory_close'
    root[(IDirectory_closeRequestMsg.typecode.nspname,IDirectory_closeRequestMsg.typecode.pname)] = 'soap_IDirectory_close'

    def soap_IDirectory_read(self, ps, **kw):
        request = ps.Parse(IDirectory_readRequestMsg.typecode)
        return request,IDirectory_readResultMsg()

    soapAction[''] = 'soap_IDirectory_read'
    root[(IDirectory_readRequestMsg.typecode.nspname,IDirectory_readRequestMsg.typecode.pname)] = 'soap_IDirectory_read'

    def soap_IGuestDirectory_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IGuestDirectory_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IGuestDirectory_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IGuestDirectory_getMidlDoesNotLikeEmptyInterfaces'
    root[(IGuestDirectory_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IGuestDirectory_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IGuestDirectory_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IFile_getEventSource(self, ps, **kw):
        request = ps.Parse(IFile_getEventSourceRequestMsg.typecode)
        return request,IFile_getEventSourceResultMsg()

    soapAction[''] = 'soap_IFile_getEventSource'
    root[(IFile_getEventSourceRequestMsg.typecode.nspname,IFile_getEventSourceRequestMsg.typecode.pname)] = 'soap_IFile_getEventSource'

    def soap_IFile_getId(self, ps, **kw):
        request = ps.Parse(IFile_getIdRequestMsg.typecode)
        return request,IFile_getIdResultMsg()

    soapAction[''] = 'soap_IFile_getId'
    root[(IFile_getIdRequestMsg.typecode.nspname,IFile_getIdRequestMsg.typecode.pname)] = 'soap_IFile_getId'

    def soap_IFile_getInitialSize(self, ps, **kw):
        request = ps.Parse(IFile_getInitialSizeRequestMsg.typecode)
        return request,IFile_getInitialSizeResultMsg()

    soapAction[''] = 'soap_IFile_getInitialSize'
    root[(IFile_getInitialSizeRequestMsg.typecode.nspname,IFile_getInitialSizeRequestMsg.typecode.pname)] = 'soap_IFile_getInitialSize'

    def soap_IFile_getOffset(self, ps, **kw):
        request = ps.Parse(IFile_getOffsetRequestMsg.typecode)
        return request,IFile_getOffsetResultMsg()

    soapAction[''] = 'soap_IFile_getOffset'
    root[(IFile_getOffsetRequestMsg.typecode.nspname,IFile_getOffsetRequestMsg.typecode.pname)] = 'soap_IFile_getOffset'

    def soap_IFile_getStatus(self, ps, **kw):
        request = ps.Parse(IFile_getStatusRequestMsg.typecode)
        return request,IFile_getStatusResultMsg()

    soapAction[''] = 'soap_IFile_getStatus'
    root[(IFile_getStatusRequestMsg.typecode.nspname,IFile_getStatusRequestMsg.typecode.pname)] = 'soap_IFile_getStatus'

    def soap_IFile_getFileName(self, ps, **kw):
        request = ps.Parse(IFile_getFileNameRequestMsg.typecode)
        return request,IFile_getFileNameResultMsg()

    soapAction[''] = 'soap_IFile_getFileName'
    root[(IFile_getFileNameRequestMsg.typecode.nspname,IFile_getFileNameRequestMsg.typecode.pname)] = 'soap_IFile_getFileName'

    def soap_IFile_getCreationMode(self, ps, **kw):
        request = ps.Parse(IFile_getCreationModeRequestMsg.typecode)
        return request,IFile_getCreationModeResultMsg()

    soapAction[''] = 'soap_IFile_getCreationMode'
    root[(IFile_getCreationModeRequestMsg.typecode.nspname,IFile_getCreationModeRequestMsg.typecode.pname)] = 'soap_IFile_getCreationMode'

    def soap_IFile_getOpenAction(self, ps, **kw):
        request = ps.Parse(IFile_getOpenActionRequestMsg.typecode)
        return request,IFile_getOpenActionResultMsg()

    soapAction[''] = 'soap_IFile_getOpenAction'
    root[(IFile_getOpenActionRequestMsg.typecode.nspname,IFile_getOpenActionRequestMsg.typecode.pname)] = 'soap_IFile_getOpenAction'

    def soap_IFile_getAccessMode(self, ps, **kw):
        request = ps.Parse(IFile_getAccessModeRequestMsg.typecode)
        return request,IFile_getAccessModeResultMsg()

    soapAction[''] = 'soap_IFile_getAccessMode'
    root[(IFile_getAccessModeRequestMsg.typecode.nspname,IFile_getAccessModeRequestMsg.typecode.pname)] = 'soap_IFile_getAccessMode'

    def soap_IFile_close(self, ps, **kw):
        request = ps.Parse(IFile_closeRequestMsg.typecode)
        return request,IFile_closeResultMsg()

    soapAction[''] = 'soap_IFile_close'
    root[(IFile_closeRequestMsg.typecode.nspname,IFile_closeRequestMsg.typecode.pname)] = 'soap_IFile_close'

    def soap_IFile_queryInfo(self, ps, **kw):
        request = ps.Parse(IFile_queryInfoRequestMsg.typecode)
        return request,IFile_queryInfoResultMsg()

    soapAction[''] = 'soap_IFile_queryInfo'
    root[(IFile_queryInfoRequestMsg.typecode.nspname,IFile_queryInfoRequestMsg.typecode.pname)] = 'soap_IFile_queryInfo'

    def soap_IFile_querySize(self, ps, **kw):
        request = ps.Parse(IFile_querySizeRequestMsg.typecode)
        return request,IFile_querySizeResultMsg()

    soapAction[''] = 'soap_IFile_querySize'
    root[(IFile_querySizeRequestMsg.typecode.nspname,IFile_querySizeRequestMsg.typecode.pname)] = 'soap_IFile_querySize'

    def soap_IFile_read(self, ps, **kw):
        request = ps.Parse(IFile_readRequestMsg.typecode)
        return request,IFile_readResultMsg()

    soapAction[''] = 'soap_IFile_read'
    root[(IFile_readRequestMsg.typecode.nspname,IFile_readRequestMsg.typecode.pname)] = 'soap_IFile_read'

    def soap_IFile_readAt(self, ps, **kw):
        request = ps.Parse(IFile_readAtRequestMsg.typecode)
        return request,IFile_readAtResultMsg()

    soapAction[''] = 'soap_IFile_readAt'
    root[(IFile_readAtRequestMsg.typecode.nspname,IFile_readAtRequestMsg.typecode.pname)] = 'soap_IFile_readAt'

    def soap_IFile_seek(self, ps, **kw):
        request = ps.Parse(IFile_seekRequestMsg.typecode)
        return request,IFile_seekResultMsg()

    soapAction[''] = 'soap_IFile_seek'
    root[(IFile_seekRequestMsg.typecode.nspname,IFile_seekRequestMsg.typecode.pname)] = 'soap_IFile_seek'

    def soap_IFile_setACL(self, ps, **kw):
        request = ps.Parse(IFile_setACLRequestMsg.typecode)
        return request,IFile_setACLResultMsg()

    soapAction[''] = 'soap_IFile_setACL'
    root[(IFile_setACLRequestMsg.typecode.nspname,IFile_setACLRequestMsg.typecode.pname)] = 'soap_IFile_setACL'

    def soap_IFile_setSize(self, ps, **kw):
        request = ps.Parse(IFile_setSizeRequestMsg.typecode)
        return request,IFile_setSizeResultMsg()

    soapAction[''] = 'soap_IFile_setSize'
    root[(IFile_setSizeRequestMsg.typecode.nspname,IFile_setSizeRequestMsg.typecode.pname)] = 'soap_IFile_setSize'

    def soap_IFile_write(self, ps, **kw):
        request = ps.Parse(IFile_writeRequestMsg.typecode)
        return request,IFile_writeResultMsg()

    soapAction[''] = 'soap_IFile_write'
    root[(IFile_writeRequestMsg.typecode.nspname,IFile_writeRequestMsg.typecode.pname)] = 'soap_IFile_write'

    def soap_IFile_writeAt(self, ps, **kw):
        request = ps.Parse(IFile_writeAtRequestMsg.typecode)
        return request,IFile_writeAtResultMsg()

    soapAction[''] = 'soap_IFile_writeAt'
    root[(IFile_writeAtRequestMsg.typecode.nspname,IFile_writeAtRequestMsg.typecode.pname)] = 'soap_IFile_writeAt'

    def soap_IGuestFile_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IGuestFile_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IGuestFile_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IGuestFile_getMidlDoesNotLikeEmptyInterfaces'
    root[(IGuestFile_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IGuestFile_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IGuestFile_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IFsObjInfo_getAccessTime(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getAccessTimeRequestMsg.typecode)
        return request,IFsObjInfo_getAccessTimeResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getAccessTime'
    root[(IFsObjInfo_getAccessTimeRequestMsg.typecode.nspname,IFsObjInfo_getAccessTimeRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getAccessTime'

    def soap_IFsObjInfo_getAllocatedSize(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getAllocatedSizeRequestMsg.typecode)
        return request,IFsObjInfo_getAllocatedSizeResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getAllocatedSize'
    root[(IFsObjInfo_getAllocatedSizeRequestMsg.typecode.nspname,IFsObjInfo_getAllocatedSizeRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getAllocatedSize'

    def soap_IFsObjInfo_getBirthTime(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getBirthTimeRequestMsg.typecode)
        return request,IFsObjInfo_getBirthTimeResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getBirthTime'
    root[(IFsObjInfo_getBirthTimeRequestMsg.typecode.nspname,IFsObjInfo_getBirthTimeRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getBirthTime'

    def soap_IFsObjInfo_getChangeTime(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getChangeTimeRequestMsg.typecode)
        return request,IFsObjInfo_getChangeTimeResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getChangeTime'
    root[(IFsObjInfo_getChangeTimeRequestMsg.typecode.nspname,IFsObjInfo_getChangeTimeRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getChangeTime'

    def soap_IFsObjInfo_getDeviceNumber(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getDeviceNumberRequestMsg.typecode)
        return request,IFsObjInfo_getDeviceNumberResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getDeviceNumber'
    root[(IFsObjInfo_getDeviceNumberRequestMsg.typecode.nspname,IFsObjInfo_getDeviceNumberRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getDeviceNumber'

    def soap_IFsObjInfo_getFileAttributes(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getFileAttributesRequestMsg.typecode)
        return request,IFsObjInfo_getFileAttributesResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getFileAttributes'
    root[(IFsObjInfo_getFileAttributesRequestMsg.typecode.nspname,IFsObjInfo_getFileAttributesRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getFileAttributes'

    def soap_IFsObjInfo_getGenerationId(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getGenerationIdRequestMsg.typecode)
        return request,IFsObjInfo_getGenerationIdResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getGenerationId'
    root[(IFsObjInfo_getGenerationIdRequestMsg.typecode.nspname,IFsObjInfo_getGenerationIdRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getGenerationId'

    def soap_IFsObjInfo_getGID(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getGIDRequestMsg.typecode)
        return request,IFsObjInfo_getGIDResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getGID'
    root[(IFsObjInfo_getGIDRequestMsg.typecode.nspname,IFsObjInfo_getGIDRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getGID'

    def soap_IFsObjInfo_getGroupName(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getGroupNameRequestMsg.typecode)
        return request,IFsObjInfo_getGroupNameResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getGroupName'
    root[(IFsObjInfo_getGroupNameRequestMsg.typecode.nspname,IFsObjInfo_getGroupNameRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getGroupName'

    def soap_IFsObjInfo_getHardLinks(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getHardLinksRequestMsg.typecode)
        return request,IFsObjInfo_getHardLinksResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getHardLinks'
    root[(IFsObjInfo_getHardLinksRequestMsg.typecode.nspname,IFsObjInfo_getHardLinksRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getHardLinks'

    def soap_IFsObjInfo_getModificationTime(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getModificationTimeRequestMsg.typecode)
        return request,IFsObjInfo_getModificationTimeResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getModificationTime'
    root[(IFsObjInfo_getModificationTimeRequestMsg.typecode.nspname,IFsObjInfo_getModificationTimeRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getModificationTime'

    def soap_IFsObjInfo_getName(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getNameRequestMsg.typecode)
        return request,IFsObjInfo_getNameResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getName'
    root[(IFsObjInfo_getNameRequestMsg.typecode.nspname,IFsObjInfo_getNameRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getName'

    def soap_IFsObjInfo_getNodeId(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getNodeIdRequestMsg.typecode)
        return request,IFsObjInfo_getNodeIdResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getNodeId'
    root[(IFsObjInfo_getNodeIdRequestMsg.typecode.nspname,IFsObjInfo_getNodeIdRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getNodeId'

    def soap_IFsObjInfo_getNodeIdDevice(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getNodeIdDeviceRequestMsg.typecode)
        return request,IFsObjInfo_getNodeIdDeviceResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getNodeIdDevice'
    root[(IFsObjInfo_getNodeIdDeviceRequestMsg.typecode.nspname,IFsObjInfo_getNodeIdDeviceRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getNodeIdDevice'

    def soap_IFsObjInfo_getObjectSize(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getObjectSizeRequestMsg.typecode)
        return request,IFsObjInfo_getObjectSizeResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getObjectSize'
    root[(IFsObjInfo_getObjectSizeRequestMsg.typecode.nspname,IFsObjInfo_getObjectSizeRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getObjectSize'

    def soap_IFsObjInfo_getType(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getTypeRequestMsg.typecode)
        return request,IFsObjInfo_getTypeResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getType'
    root[(IFsObjInfo_getTypeRequestMsg.typecode.nspname,IFsObjInfo_getTypeRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getType'

    def soap_IFsObjInfo_getUID(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getUIDRequestMsg.typecode)
        return request,IFsObjInfo_getUIDResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getUID'
    root[(IFsObjInfo_getUIDRequestMsg.typecode.nspname,IFsObjInfo_getUIDRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getUID'

    def soap_IFsObjInfo_getUserFlags(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getUserFlagsRequestMsg.typecode)
        return request,IFsObjInfo_getUserFlagsResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getUserFlags'
    root[(IFsObjInfo_getUserFlagsRequestMsg.typecode.nspname,IFsObjInfo_getUserFlagsRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getUserFlags'

    def soap_IFsObjInfo_getUserName(self, ps, **kw):
        request = ps.Parse(IFsObjInfo_getUserNameRequestMsg.typecode)
        return request,IFsObjInfo_getUserNameResultMsg()

    soapAction[''] = 'soap_IFsObjInfo_getUserName'
    root[(IFsObjInfo_getUserNameRequestMsg.typecode.nspname,IFsObjInfo_getUserNameRequestMsg.typecode.pname)] = 'soap_IFsObjInfo_getUserName'

    def soap_IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfaces'
    root[(IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IGuest_getOSTypeId(self, ps, **kw):
        request = ps.Parse(IGuest_getOSTypeIdRequestMsg.typecode)
        return request,IGuest_getOSTypeIdResultMsg()

    soapAction[''] = 'soap_IGuest_getOSTypeId'
    root[(IGuest_getOSTypeIdRequestMsg.typecode.nspname,IGuest_getOSTypeIdRequestMsg.typecode.pname)] = 'soap_IGuest_getOSTypeId'

    def soap_IGuest_getAdditionsRunLevel(self, ps, **kw):
        request = ps.Parse(IGuest_getAdditionsRunLevelRequestMsg.typecode)
        return request,IGuest_getAdditionsRunLevelResultMsg()

    soapAction[''] = 'soap_IGuest_getAdditionsRunLevel'
    root[(IGuest_getAdditionsRunLevelRequestMsg.typecode.nspname,IGuest_getAdditionsRunLevelRequestMsg.typecode.pname)] = 'soap_IGuest_getAdditionsRunLevel'

    def soap_IGuest_getAdditionsVersion(self, ps, **kw):
        request = ps.Parse(IGuest_getAdditionsVersionRequestMsg.typecode)
        return request,IGuest_getAdditionsVersionResultMsg()

    soapAction[''] = 'soap_IGuest_getAdditionsVersion'
    root[(IGuest_getAdditionsVersionRequestMsg.typecode.nspname,IGuest_getAdditionsVersionRequestMsg.typecode.pname)] = 'soap_IGuest_getAdditionsVersion'

    def soap_IGuest_getAdditionsRevision(self, ps, **kw):
        request = ps.Parse(IGuest_getAdditionsRevisionRequestMsg.typecode)
        return request,IGuest_getAdditionsRevisionResultMsg()

    soapAction[''] = 'soap_IGuest_getAdditionsRevision'
    root[(IGuest_getAdditionsRevisionRequestMsg.typecode.nspname,IGuest_getAdditionsRevisionRequestMsg.typecode.pname)] = 'soap_IGuest_getAdditionsRevision'

    def soap_IGuest_getDnDSource(self, ps, **kw):
        request = ps.Parse(IGuest_getDnDSourceRequestMsg.typecode)
        return request,IGuest_getDnDSourceResultMsg()

    soapAction[''] = 'soap_IGuest_getDnDSource'
    root[(IGuest_getDnDSourceRequestMsg.typecode.nspname,IGuest_getDnDSourceRequestMsg.typecode.pname)] = 'soap_IGuest_getDnDSource'

    def soap_IGuest_getDnDTarget(self, ps, **kw):
        request = ps.Parse(IGuest_getDnDTargetRequestMsg.typecode)
        return request,IGuest_getDnDTargetResultMsg()

    soapAction[''] = 'soap_IGuest_getDnDTarget'
    root[(IGuest_getDnDTargetRequestMsg.typecode.nspname,IGuest_getDnDTargetRequestMsg.typecode.pname)] = 'soap_IGuest_getDnDTarget'

    def soap_IGuest_getEventSource(self, ps, **kw):
        request = ps.Parse(IGuest_getEventSourceRequestMsg.typecode)
        return request,IGuest_getEventSourceResultMsg()

    soapAction[''] = 'soap_IGuest_getEventSource'
    root[(IGuest_getEventSourceRequestMsg.typecode.nspname,IGuest_getEventSourceRequestMsg.typecode.pname)] = 'soap_IGuest_getEventSource'

    def soap_IGuest_getFacilities(self, ps, **kw):
        request = ps.Parse(IGuest_getFacilitiesRequestMsg.typecode)
        return request,IGuest_getFacilitiesResultMsg()

    soapAction[''] = 'soap_IGuest_getFacilities'
    root[(IGuest_getFacilitiesRequestMsg.typecode.nspname,IGuest_getFacilitiesRequestMsg.typecode.pname)] = 'soap_IGuest_getFacilities'

    def soap_IGuest_getSessions(self, ps, **kw):
        request = ps.Parse(IGuest_getSessionsRequestMsg.typecode)
        return request,IGuest_getSessionsResultMsg()

    soapAction[''] = 'soap_IGuest_getSessions'
    root[(IGuest_getSessionsRequestMsg.typecode.nspname,IGuest_getSessionsRequestMsg.typecode.pname)] = 'soap_IGuest_getSessions'

    def soap_IGuest_getMemoryBalloonSize(self, ps, **kw):
        request = ps.Parse(IGuest_getMemoryBalloonSizeRequestMsg.typecode)
        return request,IGuest_getMemoryBalloonSizeResultMsg()

    soapAction[''] = 'soap_IGuest_getMemoryBalloonSize'
    root[(IGuest_getMemoryBalloonSizeRequestMsg.typecode.nspname,IGuest_getMemoryBalloonSizeRequestMsg.typecode.pname)] = 'soap_IGuest_getMemoryBalloonSize'

    def soap_IGuest_setMemoryBalloonSize(self, ps, **kw):
        request = ps.Parse(IGuest_setMemoryBalloonSizeRequestMsg.typecode)
        return request,IGuest_setMemoryBalloonSizeResultMsg()

    soapAction[''] = 'soap_IGuest_setMemoryBalloonSize'
    root[(IGuest_setMemoryBalloonSizeRequestMsg.typecode.nspname,IGuest_setMemoryBalloonSizeRequestMsg.typecode.pname)] = 'soap_IGuest_setMemoryBalloonSize'

    def soap_IGuest_getStatisticsUpdateInterval(self, ps, **kw):
        request = ps.Parse(IGuest_getStatisticsUpdateIntervalRequestMsg.typecode)
        return request,IGuest_getStatisticsUpdateIntervalResultMsg()

    soapAction[''] = 'soap_IGuest_getStatisticsUpdateInterval'
    root[(IGuest_getStatisticsUpdateIntervalRequestMsg.typecode.nspname,IGuest_getStatisticsUpdateIntervalRequestMsg.typecode.pname)] = 'soap_IGuest_getStatisticsUpdateInterval'

    def soap_IGuest_setStatisticsUpdateInterval(self, ps, **kw):
        request = ps.Parse(IGuest_setStatisticsUpdateIntervalRequestMsg.typecode)
        return request,IGuest_setStatisticsUpdateIntervalResultMsg()

    soapAction[''] = 'soap_IGuest_setStatisticsUpdateInterval'
    root[(IGuest_setStatisticsUpdateIntervalRequestMsg.typecode.nspname,IGuest_setStatisticsUpdateIntervalRequestMsg.typecode.pname)] = 'soap_IGuest_setStatisticsUpdateInterval'

    def soap_IGuest_internalGetStatistics(self, ps, **kw):
        request = ps.Parse(IGuest_internalGetStatisticsRequestMsg.typecode)
        return request,IGuest_internalGetStatisticsResultMsg()

    soapAction[''] = 'soap_IGuest_internalGetStatistics'
    root[(IGuest_internalGetStatisticsRequestMsg.typecode.nspname,IGuest_internalGetStatisticsRequestMsg.typecode.pname)] = 'soap_IGuest_internalGetStatistics'

    def soap_IGuest_getFacilityStatus(self, ps, **kw):
        request = ps.Parse(IGuest_getFacilityStatusRequestMsg.typecode)
        return request,IGuest_getFacilityStatusResultMsg()

    soapAction[''] = 'soap_IGuest_getFacilityStatus'
    root[(IGuest_getFacilityStatusRequestMsg.typecode.nspname,IGuest_getFacilityStatusRequestMsg.typecode.pname)] = 'soap_IGuest_getFacilityStatus'

    def soap_IGuest_getAdditionsStatus(self, ps, **kw):
        request = ps.Parse(IGuest_getAdditionsStatusRequestMsg.typecode)
        return request,IGuest_getAdditionsStatusResultMsg()

    soapAction[''] = 'soap_IGuest_getAdditionsStatus'
    root[(IGuest_getAdditionsStatusRequestMsg.typecode.nspname,IGuest_getAdditionsStatusRequestMsg.typecode.pname)] = 'soap_IGuest_getAdditionsStatus'

    def soap_IGuest_setCredentials(self, ps, **kw):
        request = ps.Parse(IGuest_setCredentialsRequestMsg.typecode)
        return request,IGuest_setCredentialsResultMsg()

    soapAction[''] = 'soap_IGuest_setCredentials'
    root[(IGuest_setCredentialsRequestMsg.typecode.nspname,IGuest_setCredentialsRequestMsg.typecode.pname)] = 'soap_IGuest_setCredentials'

    def soap_IGuest_createSession(self, ps, **kw):
        request = ps.Parse(IGuest_createSessionRequestMsg.typecode)
        return request,IGuest_createSessionResultMsg()

    soapAction[''] = 'soap_IGuest_createSession'
    root[(IGuest_createSessionRequestMsg.typecode.nspname,IGuest_createSessionRequestMsg.typecode.pname)] = 'soap_IGuest_createSession'

    def soap_IGuest_findSession(self, ps, **kw):
        request = ps.Parse(IGuest_findSessionRequestMsg.typecode)
        return request,IGuest_findSessionResultMsg()

    soapAction[''] = 'soap_IGuest_findSession'
    root[(IGuest_findSessionRequestMsg.typecode.nspname,IGuest_findSessionRequestMsg.typecode.pname)] = 'soap_IGuest_findSession'

    def soap_IGuest_updateGuestAdditions(self, ps, **kw):
        request = ps.Parse(IGuest_updateGuestAdditionsRequestMsg.typecode)
        return request,IGuest_updateGuestAdditionsResultMsg()

    soapAction[''] = 'soap_IGuest_updateGuestAdditions'
    root[(IGuest_updateGuestAdditionsRequestMsg.typecode.nspname,IGuest_updateGuestAdditionsRequestMsg.typecode.pname)] = 'soap_IGuest_updateGuestAdditions'

    def soap_IProgress_getId(self, ps, **kw):
        request = ps.Parse(IProgress_getIdRequestMsg.typecode)
        return request,IProgress_getIdResultMsg()

    soapAction[''] = 'soap_IProgress_getId'
    root[(IProgress_getIdRequestMsg.typecode.nspname,IProgress_getIdRequestMsg.typecode.pname)] = 'soap_IProgress_getId'

    def soap_IProgress_getDescription(self, ps, **kw):
        request = ps.Parse(IProgress_getDescriptionRequestMsg.typecode)
        return request,IProgress_getDescriptionResultMsg()

    soapAction[''] = 'soap_IProgress_getDescription'
    root[(IProgress_getDescriptionRequestMsg.typecode.nspname,IProgress_getDescriptionRequestMsg.typecode.pname)] = 'soap_IProgress_getDescription'

    def soap_IProgress_getInitiator(self, ps, **kw):
        request = ps.Parse(IProgress_getInitiatorRequestMsg.typecode)
        return request,IProgress_getInitiatorResultMsg()

    soapAction[''] = 'soap_IProgress_getInitiator'
    root[(IProgress_getInitiatorRequestMsg.typecode.nspname,IProgress_getInitiatorRequestMsg.typecode.pname)] = 'soap_IProgress_getInitiator'

    def soap_IProgress_getCancelable(self, ps, **kw):
        request = ps.Parse(IProgress_getCancelableRequestMsg.typecode)
        return request,IProgress_getCancelableResultMsg()

    soapAction[''] = 'soap_IProgress_getCancelable'
    root[(IProgress_getCancelableRequestMsg.typecode.nspname,IProgress_getCancelableRequestMsg.typecode.pname)] = 'soap_IProgress_getCancelable'

    def soap_IProgress_getPercent(self, ps, **kw):
        request = ps.Parse(IProgress_getPercentRequestMsg.typecode)
        return request,IProgress_getPercentResultMsg()

    soapAction[''] = 'soap_IProgress_getPercent'
    root[(IProgress_getPercentRequestMsg.typecode.nspname,IProgress_getPercentRequestMsg.typecode.pname)] = 'soap_IProgress_getPercent'

    def soap_IProgress_getTimeRemaining(self, ps, **kw):
        request = ps.Parse(IProgress_getTimeRemainingRequestMsg.typecode)
        return request,IProgress_getTimeRemainingResultMsg()

    soapAction[''] = 'soap_IProgress_getTimeRemaining'
    root[(IProgress_getTimeRemainingRequestMsg.typecode.nspname,IProgress_getTimeRemainingRequestMsg.typecode.pname)] = 'soap_IProgress_getTimeRemaining'

    def soap_IProgress_getCompleted(self, ps, **kw):
        request = ps.Parse(IProgress_getCompletedRequestMsg.typecode)
        return request,IProgress_getCompletedResultMsg()

    soapAction[''] = 'soap_IProgress_getCompleted'
    root[(IProgress_getCompletedRequestMsg.typecode.nspname,IProgress_getCompletedRequestMsg.typecode.pname)] = 'soap_IProgress_getCompleted'

    def soap_IProgress_getCanceled(self, ps, **kw):
        request = ps.Parse(IProgress_getCanceledRequestMsg.typecode)
        return request,IProgress_getCanceledResultMsg()

    soapAction[''] = 'soap_IProgress_getCanceled'
    root[(IProgress_getCanceledRequestMsg.typecode.nspname,IProgress_getCanceledRequestMsg.typecode.pname)] = 'soap_IProgress_getCanceled'

    def soap_IProgress_getResultCode(self, ps, **kw):
        request = ps.Parse(IProgress_getResultCodeRequestMsg.typecode)
        return request,IProgress_getResultCodeResultMsg()

    soapAction[''] = 'soap_IProgress_getResultCode'
    root[(IProgress_getResultCodeRequestMsg.typecode.nspname,IProgress_getResultCodeRequestMsg.typecode.pname)] = 'soap_IProgress_getResultCode'

    def soap_IProgress_getErrorInfo(self, ps, **kw):
        request = ps.Parse(IProgress_getErrorInfoRequestMsg.typecode)
        return request,IProgress_getErrorInfoResultMsg()

    soapAction[''] = 'soap_IProgress_getErrorInfo'
    root[(IProgress_getErrorInfoRequestMsg.typecode.nspname,IProgress_getErrorInfoRequestMsg.typecode.pname)] = 'soap_IProgress_getErrorInfo'

    def soap_IProgress_getOperationCount(self, ps, **kw):
        request = ps.Parse(IProgress_getOperationCountRequestMsg.typecode)
        return request,IProgress_getOperationCountResultMsg()

    soapAction[''] = 'soap_IProgress_getOperationCount'
    root[(IProgress_getOperationCountRequestMsg.typecode.nspname,IProgress_getOperationCountRequestMsg.typecode.pname)] = 'soap_IProgress_getOperationCount'

    def soap_IProgress_getOperation(self, ps, **kw):
        request = ps.Parse(IProgress_getOperationRequestMsg.typecode)
        return request,IProgress_getOperationResultMsg()

    soapAction[''] = 'soap_IProgress_getOperation'
    root[(IProgress_getOperationRequestMsg.typecode.nspname,IProgress_getOperationRequestMsg.typecode.pname)] = 'soap_IProgress_getOperation'

    def soap_IProgress_getOperationDescription(self, ps, **kw):
        request = ps.Parse(IProgress_getOperationDescriptionRequestMsg.typecode)
        return request,IProgress_getOperationDescriptionResultMsg()

    soapAction[''] = 'soap_IProgress_getOperationDescription'
    root[(IProgress_getOperationDescriptionRequestMsg.typecode.nspname,IProgress_getOperationDescriptionRequestMsg.typecode.pname)] = 'soap_IProgress_getOperationDescription'

    def soap_IProgress_getOperationPercent(self, ps, **kw):
        request = ps.Parse(IProgress_getOperationPercentRequestMsg.typecode)
        return request,IProgress_getOperationPercentResultMsg()

    soapAction[''] = 'soap_IProgress_getOperationPercent'
    root[(IProgress_getOperationPercentRequestMsg.typecode.nspname,IProgress_getOperationPercentRequestMsg.typecode.pname)] = 'soap_IProgress_getOperationPercent'

    def soap_IProgress_getOperationWeight(self, ps, **kw):
        request = ps.Parse(IProgress_getOperationWeightRequestMsg.typecode)
        return request,IProgress_getOperationWeightResultMsg()

    soapAction[''] = 'soap_IProgress_getOperationWeight'
    root[(IProgress_getOperationWeightRequestMsg.typecode.nspname,IProgress_getOperationWeightRequestMsg.typecode.pname)] = 'soap_IProgress_getOperationWeight'

    def soap_IProgress_getTimeout(self, ps, **kw):
        request = ps.Parse(IProgress_getTimeoutRequestMsg.typecode)
        return request,IProgress_getTimeoutResultMsg()

    soapAction[''] = 'soap_IProgress_getTimeout'
    root[(IProgress_getTimeoutRequestMsg.typecode.nspname,IProgress_getTimeoutRequestMsg.typecode.pname)] = 'soap_IProgress_getTimeout'

    def soap_IProgress_setTimeout(self, ps, **kw):
        request = ps.Parse(IProgress_setTimeoutRequestMsg.typecode)
        return request,IProgress_setTimeoutResultMsg()

    soapAction[''] = 'soap_IProgress_setTimeout'
    root[(IProgress_setTimeoutRequestMsg.typecode.nspname,IProgress_setTimeoutRequestMsg.typecode.pname)] = 'soap_IProgress_setTimeout'

    def soap_IProgress_setCurrentOperationProgress(self, ps, **kw):
        request = ps.Parse(IProgress_setCurrentOperationProgressRequestMsg.typecode)
        return request,IProgress_setCurrentOperationProgressResultMsg()

    soapAction[''] = 'soap_IProgress_setCurrentOperationProgress'
    root[(IProgress_setCurrentOperationProgressRequestMsg.typecode.nspname,IProgress_setCurrentOperationProgressRequestMsg.typecode.pname)] = 'soap_IProgress_setCurrentOperationProgress'

    def soap_IProgress_setNextOperation(self, ps, **kw):
        request = ps.Parse(IProgress_setNextOperationRequestMsg.typecode)
        return request,IProgress_setNextOperationResultMsg()

    soapAction[''] = 'soap_IProgress_setNextOperation'
    root[(IProgress_setNextOperationRequestMsg.typecode.nspname,IProgress_setNextOperationRequestMsg.typecode.pname)] = 'soap_IProgress_setNextOperation'

    def soap_IProgress_waitForCompletion(self, ps, **kw):
        request = ps.Parse(IProgress_waitForCompletionRequestMsg.typecode)
        return request,IProgress_waitForCompletionResultMsg()

    soapAction[''] = 'soap_IProgress_waitForCompletion'
    root[(IProgress_waitForCompletionRequestMsg.typecode.nspname,IProgress_waitForCompletionRequestMsg.typecode.pname)] = 'soap_IProgress_waitForCompletion'

    def soap_IProgress_waitForOperationCompletion(self, ps, **kw):
        request = ps.Parse(IProgress_waitForOperationCompletionRequestMsg.typecode)
        return request,IProgress_waitForOperationCompletionResultMsg()

    soapAction[''] = 'soap_IProgress_waitForOperationCompletion'
    root[(IProgress_waitForOperationCompletionRequestMsg.typecode.nspname,IProgress_waitForOperationCompletionRequestMsg.typecode.pname)] = 'soap_IProgress_waitForOperationCompletion'

    def soap_IProgress_waitForAsyncProgressCompletion(self, ps, **kw):
        request = ps.Parse(IProgress_waitForAsyncProgressCompletionRequestMsg.typecode)
        return request,IProgress_waitForAsyncProgressCompletionResultMsg()

    soapAction[''] = 'soap_IProgress_waitForAsyncProgressCompletion'
    root[(IProgress_waitForAsyncProgressCompletionRequestMsg.typecode.nspname,IProgress_waitForAsyncProgressCompletionRequestMsg.typecode.pname)] = 'soap_IProgress_waitForAsyncProgressCompletion'

    def soap_IProgress_cancel(self, ps, **kw):
        request = ps.Parse(IProgress_cancelRequestMsg.typecode)
        return request,IProgress_cancelResultMsg()

    soapAction[''] = 'soap_IProgress_cancel'
    root[(IProgress_cancelRequestMsg.typecode.nspname,IProgress_cancelRequestMsg.typecode.pname)] = 'soap_IProgress_cancel'

    def soap_ISnapshot_getId(self, ps, **kw):
        request = ps.Parse(ISnapshot_getIdRequestMsg.typecode)
        return request,ISnapshot_getIdResultMsg()

    soapAction[''] = 'soap_ISnapshot_getId'
    root[(ISnapshot_getIdRequestMsg.typecode.nspname,ISnapshot_getIdRequestMsg.typecode.pname)] = 'soap_ISnapshot_getId'

    def soap_ISnapshot_getName(self, ps, **kw):
        request = ps.Parse(ISnapshot_getNameRequestMsg.typecode)
        return request,ISnapshot_getNameResultMsg()

    soapAction[''] = 'soap_ISnapshot_getName'
    root[(ISnapshot_getNameRequestMsg.typecode.nspname,ISnapshot_getNameRequestMsg.typecode.pname)] = 'soap_ISnapshot_getName'

    def soap_ISnapshot_setName(self, ps, **kw):
        request = ps.Parse(ISnapshot_setNameRequestMsg.typecode)
        return request,ISnapshot_setNameResultMsg()

    soapAction[''] = 'soap_ISnapshot_setName'
    root[(ISnapshot_setNameRequestMsg.typecode.nspname,ISnapshot_setNameRequestMsg.typecode.pname)] = 'soap_ISnapshot_setName'

    def soap_ISnapshot_getDescription(self, ps, **kw):
        request = ps.Parse(ISnapshot_getDescriptionRequestMsg.typecode)
        return request,ISnapshot_getDescriptionResultMsg()

    soapAction[''] = 'soap_ISnapshot_getDescription'
    root[(ISnapshot_getDescriptionRequestMsg.typecode.nspname,ISnapshot_getDescriptionRequestMsg.typecode.pname)] = 'soap_ISnapshot_getDescription'

    def soap_ISnapshot_setDescription(self, ps, **kw):
        request = ps.Parse(ISnapshot_setDescriptionRequestMsg.typecode)
        return request,ISnapshot_setDescriptionResultMsg()

    soapAction[''] = 'soap_ISnapshot_setDescription'
    root[(ISnapshot_setDescriptionRequestMsg.typecode.nspname,ISnapshot_setDescriptionRequestMsg.typecode.pname)] = 'soap_ISnapshot_setDescription'

    def soap_ISnapshot_getTimeStamp(self, ps, **kw):
        request = ps.Parse(ISnapshot_getTimeStampRequestMsg.typecode)
        return request,ISnapshot_getTimeStampResultMsg()

    soapAction[''] = 'soap_ISnapshot_getTimeStamp'
    root[(ISnapshot_getTimeStampRequestMsg.typecode.nspname,ISnapshot_getTimeStampRequestMsg.typecode.pname)] = 'soap_ISnapshot_getTimeStamp'

    def soap_ISnapshot_getOnline(self, ps, **kw):
        request = ps.Parse(ISnapshot_getOnlineRequestMsg.typecode)
        return request,ISnapshot_getOnlineResultMsg()

    soapAction[''] = 'soap_ISnapshot_getOnline'
    root[(ISnapshot_getOnlineRequestMsg.typecode.nspname,ISnapshot_getOnlineRequestMsg.typecode.pname)] = 'soap_ISnapshot_getOnline'

    def soap_ISnapshot_getMachine(self, ps, **kw):
        request = ps.Parse(ISnapshot_getMachineRequestMsg.typecode)
        return request,ISnapshot_getMachineResultMsg()

    soapAction[''] = 'soap_ISnapshot_getMachine'
    root[(ISnapshot_getMachineRequestMsg.typecode.nspname,ISnapshot_getMachineRequestMsg.typecode.pname)] = 'soap_ISnapshot_getMachine'

    def soap_ISnapshot_getParent(self, ps, **kw):
        request = ps.Parse(ISnapshot_getParentRequestMsg.typecode)
        return request,ISnapshot_getParentResultMsg()

    soapAction[''] = 'soap_ISnapshot_getParent'
    root[(ISnapshot_getParentRequestMsg.typecode.nspname,ISnapshot_getParentRequestMsg.typecode.pname)] = 'soap_ISnapshot_getParent'

    def soap_ISnapshot_getChildren(self, ps, **kw):
        request = ps.Parse(ISnapshot_getChildrenRequestMsg.typecode)
        return request,ISnapshot_getChildrenResultMsg()

    soapAction[''] = 'soap_ISnapshot_getChildren'
    root[(ISnapshot_getChildrenRequestMsg.typecode.nspname,ISnapshot_getChildrenRequestMsg.typecode.pname)] = 'soap_ISnapshot_getChildren'

    def soap_ISnapshot_getChildrenCount(self, ps, **kw):
        request = ps.Parse(ISnapshot_getChildrenCountRequestMsg.typecode)
        return request,ISnapshot_getChildrenCountResultMsg()

    soapAction[''] = 'soap_ISnapshot_getChildrenCount'
    root[(ISnapshot_getChildrenCountRequestMsg.typecode.nspname,ISnapshot_getChildrenCountRequestMsg.typecode.pname)] = 'soap_ISnapshot_getChildrenCount'

    def soap_IMedium_getId(self, ps, **kw):
        request = ps.Parse(IMedium_getIdRequestMsg.typecode)
        return request,IMedium_getIdResultMsg()

    soapAction[''] = 'soap_IMedium_getId'
    root[(IMedium_getIdRequestMsg.typecode.nspname,IMedium_getIdRequestMsg.typecode.pname)] = 'soap_IMedium_getId'

    def soap_IMedium_getDescription(self, ps, **kw):
        request = ps.Parse(IMedium_getDescriptionRequestMsg.typecode)
        return request,IMedium_getDescriptionResultMsg()

    soapAction[''] = 'soap_IMedium_getDescription'
    root[(IMedium_getDescriptionRequestMsg.typecode.nspname,IMedium_getDescriptionRequestMsg.typecode.pname)] = 'soap_IMedium_getDescription'

    def soap_IMedium_setDescription(self, ps, **kw):
        request = ps.Parse(IMedium_setDescriptionRequestMsg.typecode)
        return request,IMedium_setDescriptionResultMsg()

    soapAction[''] = 'soap_IMedium_setDescription'
    root[(IMedium_setDescriptionRequestMsg.typecode.nspname,IMedium_setDescriptionRequestMsg.typecode.pname)] = 'soap_IMedium_setDescription'

    def soap_IMedium_getState(self, ps, **kw):
        request = ps.Parse(IMedium_getStateRequestMsg.typecode)
        return request,IMedium_getStateResultMsg()

    soapAction[''] = 'soap_IMedium_getState'
    root[(IMedium_getStateRequestMsg.typecode.nspname,IMedium_getStateRequestMsg.typecode.pname)] = 'soap_IMedium_getState'

    def soap_IMedium_getVariant(self, ps, **kw):
        request = ps.Parse(IMedium_getVariantRequestMsg.typecode)
        return request,IMedium_getVariantResultMsg()

    soapAction[''] = 'soap_IMedium_getVariant'
    root[(IMedium_getVariantRequestMsg.typecode.nspname,IMedium_getVariantRequestMsg.typecode.pname)] = 'soap_IMedium_getVariant'

    def soap_IMedium_getLocation(self, ps, **kw):
        request = ps.Parse(IMedium_getLocationRequestMsg.typecode)
        return request,IMedium_getLocationResultMsg()

    soapAction[''] = 'soap_IMedium_getLocation'
    root[(IMedium_getLocationRequestMsg.typecode.nspname,IMedium_getLocationRequestMsg.typecode.pname)] = 'soap_IMedium_getLocation'

    def soap_IMedium_getName(self, ps, **kw):
        request = ps.Parse(IMedium_getNameRequestMsg.typecode)
        return request,IMedium_getNameResultMsg()

    soapAction[''] = 'soap_IMedium_getName'
    root[(IMedium_getNameRequestMsg.typecode.nspname,IMedium_getNameRequestMsg.typecode.pname)] = 'soap_IMedium_getName'

    def soap_IMedium_getDeviceType(self, ps, **kw):
        request = ps.Parse(IMedium_getDeviceTypeRequestMsg.typecode)
        return request,IMedium_getDeviceTypeResultMsg()

    soapAction[''] = 'soap_IMedium_getDeviceType'
    root[(IMedium_getDeviceTypeRequestMsg.typecode.nspname,IMedium_getDeviceTypeRequestMsg.typecode.pname)] = 'soap_IMedium_getDeviceType'

    def soap_IMedium_getHostDrive(self, ps, **kw):
        request = ps.Parse(IMedium_getHostDriveRequestMsg.typecode)
        return request,IMedium_getHostDriveResultMsg()

    soapAction[''] = 'soap_IMedium_getHostDrive'
    root[(IMedium_getHostDriveRequestMsg.typecode.nspname,IMedium_getHostDriveRequestMsg.typecode.pname)] = 'soap_IMedium_getHostDrive'

    def soap_IMedium_getSize(self, ps, **kw):
        request = ps.Parse(IMedium_getSizeRequestMsg.typecode)
        return request,IMedium_getSizeResultMsg()

    soapAction[''] = 'soap_IMedium_getSize'
    root[(IMedium_getSizeRequestMsg.typecode.nspname,IMedium_getSizeRequestMsg.typecode.pname)] = 'soap_IMedium_getSize'

    def soap_IMedium_getFormat(self, ps, **kw):
        request = ps.Parse(IMedium_getFormatRequestMsg.typecode)
        return request,IMedium_getFormatResultMsg()

    soapAction[''] = 'soap_IMedium_getFormat'
    root[(IMedium_getFormatRequestMsg.typecode.nspname,IMedium_getFormatRequestMsg.typecode.pname)] = 'soap_IMedium_getFormat'

    def soap_IMedium_getMediumFormat(self, ps, **kw):
        request = ps.Parse(IMedium_getMediumFormatRequestMsg.typecode)
        return request,IMedium_getMediumFormatResultMsg()

    soapAction[''] = 'soap_IMedium_getMediumFormat'
    root[(IMedium_getMediumFormatRequestMsg.typecode.nspname,IMedium_getMediumFormatRequestMsg.typecode.pname)] = 'soap_IMedium_getMediumFormat'

    def soap_IMedium_getType(self, ps, **kw):
        request = ps.Parse(IMedium_getTypeRequestMsg.typecode)
        return request,IMedium_getTypeResultMsg()

    soapAction[''] = 'soap_IMedium_getType'
    root[(IMedium_getTypeRequestMsg.typecode.nspname,IMedium_getTypeRequestMsg.typecode.pname)] = 'soap_IMedium_getType'

    def soap_IMedium_setType(self, ps, **kw):
        request = ps.Parse(IMedium_setTypeRequestMsg.typecode)
        return request,IMedium_setTypeResultMsg()

    soapAction[''] = 'soap_IMedium_setType'
    root[(IMedium_setTypeRequestMsg.typecode.nspname,IMedium_setTypeRequestMsg.typecode.pname)] = 'soap_IMedium_setType'

    def soap_IMedium_getAllowedTypes(self, ps, **kw):
        request = ps.Parse(IMedium_getAllowedTypesRequestMsg.typecode)
        return request,IMedium_getAllowedTypesResultMsg()

    soapAction[''] = 'soap_IMedium_getAllowedTypes'
    root[(IMedium_getAllowedTypesRequestMsg.typecode.nspname,IMedium_getAllowedTypesRequestMsg.typecode.pname)] = 'soap_IMedium_getAllowedTypes'

    def soap_IMedium_getParent(self, ps, **kw):
        request = ps.Parse(IMedium_getParentRequestMsg.typecode)
        return request,IMedium_getParentResultMsg()

    soapAction[''] = 'soap_IMedium_getParent'
    root[(IMedium_getParentRequestMsg.typecode.nspname,IMedium_getParentRequestMsg.typecode.pname)] = 'soap_IMedium_getParent'

    def soap_IMedium_getChildren(self, ps, **kw):
        request = ps.Parse(IMedium_getChildrenRequestMsg.typecode)
        return request,IMedium_getChildrenResultMsg()

    soapAction[''] = 'soap_IMedium_getChildren'
    root[(IMedium_getChildrenRequestMsg.typecode.nspname,IMedium_getChildrenRequestMsg.typecode.pname)] = 'soap_IMedium_getChildren'

    def soap_IMedium_getBase(self, ps, **kw):
        request = ps.Parse(IMedium_getBaseRequestMsg.typecode)
        return request,IMedium_getBaseResultMsg()

    soapAction[''] = 'soap_IMedium_getBase'
    root[(IMedium_getBaseRequestMsg.typecode.nspname,IMedium_getBaseRequestMsg.typecode.pname)] = 'soap_IMedium_getBase'

    def soap_IMedium_getReadOnly(self, ps, **kw):
        request = ps.Parse(IMedium_getReadOnlyRequestMsg.typecode)
        return request,IMedium_getReadOnlyResultMsg()

    soapAction[''] = 'soap_IMedium_getReadOnly'
    root[(IMedium_getReadOnlyRequestMsg.typecode.nspname,IMedium_getReadOnlyRequestMsg.typecode.pname)] = 'soap_IMedium_getReadOnly'

    def soap_IMedium_getLogicalSize(self, ps, **kw):
        request = ps.Parse(IMedium_getLogicalSizeRequestMsg.typecode)
        return request,IMedium_getLogicalSizeResultMsg()

    soapAction[''] = 'soap_IMedium_getLogicalSize'
    root[(IMedium_getLogicalSizeRequestMsg.typecode.nspname,IMedium_getLogicalSizeRequestMsg.typecode.pname)] = 'soap_IMedium_getLogicalSize'

    def soap_IMedium_getAutoReset(self, ps, **kw):
        request = ps.Parse(IMedium_getAutoResetRequestMsg.typecode)
        return request,IMedium_getAutoResetResultMsg()

    soapAction[''] = 'soap_IMedium_getAutoReset'
    root[(IMedium_getAutoResetRequestMsg.typecode.nspname,IMedium_getAutoResetRequestMsg.typecode.pname)] = 'soap_IMedium_getAutoReset'

    def soap_IMedium_setAutoReset(self, ps, **kw):
        request = ps.Parse(IMedium_setAutoResetRequestMsg.typecode)
        return request,IMedium_setAutoResetResultMsg()

    soapAction[''] = 'soap_IMedium_setAutoReset'
    root[(IMedium_setAutoResetRequestMsg.typecode.nspname,IMedium_setAutoResetRequestMsg.typecode.pname)] = 'soap_IMedium_setAutoReset'

    def soap_IMedium_getLastAccessError(self, ps, **kw):
        request = ps.Parse(IMedium_getLastAccessErrorRequestMsg.typecode)
        return request,IMedium_getLastAccessErrorResultMsg()

    soapAction[''] = 'soap_IMedium_getLastAccessError'
    root[(IMedium_getLastAccessErrorRequestMsg.typecode.nspname,IMedium_getLastAccessErrorRequestMsg.typecode.pname)] = 'soap_IMedium_getLastAccessError'

    def soap_IMedium_getMachineIds(self, ps, **kw):
        request = ps.Parse(IMedium_getMachineIdsRequestMsg.typecode)
        return request,IMedium_getMachineIdsResultMsg()

    soapAction[''] = 'soap_IMedium_getMachineIds'
    root[(IMedium_getMachineIdsRequestMsg.typecode.nspname,IMedium_getMachineIdsRequestMsg.typecode.pname)] = 'soap_IMedium_getMachineIds'

    def soap_IMedium_setIds(self, ps, **kw):
        request = ps.Parse(IMedium_setIdsRequestMsg.typecode)
        return request,IMedium_setIdsResultMsg()

    soapAction[''] = 'soap_IMedium_setIds'
    root[(IMedium_setIdsRequestMsg.typecode.nspname,IMedium_setIdsRequestMsg.typecode.pname)] = 'soap_IMedium_setIds'

    def soap_IMedium_refreshState(self, ps, **kw):
        request = ps.Parse(IMedium_refreshStateRequestMsg.typecode)
        return request,IMedium_refreshStateResultMsg()

    soapAction[''] = 'soap_IMedium_refreshState'
    root[(IMedium_refreshStateRequestMsg.typecode.nspname,IMedium_refreshStateRequestMsg.typecode.pname)] = 'soap_IMedium_refreshState'

    def soap_IMedium_getSnapshotIds(self, ps, **kw):
        request = ps.Parse(IMedium_getSnapshotIdsRequestMsg.typecode)
        return request,IMedium_getSnapshotIdsResultMsg()

    soapAction[''] = 'soap_IMedium_getSnapshotIds'
    root[(IMedium_getSnapshotIdsRequestMsg.typecode.nspname,IMedium_getSnapshotIdsRequestMsg.typecode.pname)] = 'soap_IMedium_getSnapshotIds'

    def soap_IMedium_lockRead(self, ps, **kw):
        request = ps.Parse(IMedium_lockReadRequestMsg.typecode)
        return request,IMedium_lockReadResultMsg()

    soapAction[''] = 'soap_IMedium_lockRead'
    root[(IMedium_lockReadRequestMsg.typecode.nspname,IMedium_lockReadRequestMsg.typecode.pname)] = 'soap_IMedium_lockRead'

    def soap_IMedium_lockWrite(self, ps, **kw):
        request = ps.Parse(IMedium_lockWriteRequestMsg.typecode)
        return request,IMedium_lockWriteResultMsg()

    soapAction[''] = 'soap_IMedium_lockWrite'
    root[(IMedium_lockWriteRequestMsg.typecode.nspname,IMedium_lockWriteRequestMsg.typecode.pname)] = 'soap_IMedium_lockWrite'

    def soap_IMedium_close(self, ps, **kw):
        request = ps.Parse(IMedium_closeRequestMsg.typecode)
        return request,IMedium_closeResultMsg()

    soapAction[''] = 'soap_IMedium_close'
    root[(IMedium_closeRequestMsg.typecode.nspname,IMedium_closeRequestMsg.typecode.pname)] = 'soap_IMedium_close'

    def soap_IMedium_getProperty(self, ps, **kw):
        request = ps.Parse(IMedium_getPropertyRequestMsg.typecode)
        return request,IMedium_getPropertyResultMsg()

    soapAction[''] = 'soap_IMedium_getProperty'
    root[(IMedium_getPropertyRequestMsg.typecode.nspname,IMedium_getPropertyRequestMsg.typecode.pname)] = 'soap_IMedium_getProperty'

    def soap_IMedium_setProperty(self, ps, **kw):
        request = ps.Parse(IMedium_setPropertyRequestMsg.typecode)
        return request,IMedium_setPropertyResultMsg()

    soapAction[''] = 'soap_IMedium_setProperty'
    root[(IMedium_setPropertyRequestMsg.typecode.nspname,IMedium_setPropertyRequestMsg.typecode.pname)] = 'soap_IMedium_setProperty'

    def soap_IMedium_getProperties(self, ps, **kw):
        request = ps.Parse(IMedium_getPropertiesRequestMsg.typecode)
        return request,IMedium_getPropertiesResultMsg()

    soapAction[''] = 'soap_IMedium_getProperties'
    root[(IMedium_getPropertiesRequestMsg.typecode.nspname,IMedium_getPropertiesRequestMsg.typecode.pname)] = 'soap_IMedium_getProperties'

    def soap_IMedium_setProperties(self, ps, **kw):
        request = ps.Parse(IMedium_setPropertiesRequestMsg.typecode)
        return request,IMedium_setPropertiesResultMsg()

    soapAction[''] = 'soap_IMedium_setProperties'
    root[(IMedium_setPropertiesRequestMsg.typecode.nspname,IMedium_setPropertiesRequestMsg.typecode.pname)] = 'soap_IMedium_setProperties'

    def soap_IMedium_createBaseStorage(self, ps, **kw):
        request = ps.Parse(IMedium_createBaseStorageRequestMsg.typecode)
        return request,IMedium_createBaseStorageResultMsg()

    soapAction[''] = 'soap_IMedium_createBaseStorage'
    root[(IMedium_createBaseStorageRequestMsg.typecode.nspname,IMedium_createBaseStorageRequestMsg.typecode.pname)] = 'soap_IMedium_createBaseStorage'

    def soap_IMedium_deleteStorage(self, ps, **kw):
        request = ps.Parse(IMedium_deleteStorageRequestMsg.typecode)
        return request,IMedium_deleteStorageResultMsg()

    soapAction[''] = 'soap_IMedium_deleteStorage'
    root[(IMedium_deleteStorageRequestMsg.typecode.nspname,IMedium_deleteStorageRequestMsg.typecode.pname)] = 'soap_IMedium_deleteStorage'

    def soap_IMedium_createDiffStorage(self, ps, **kw):
        request = ps.Parse(IMedium_createDiffStorageRequestMsg.typecode)
        return request,IMedium_createDiffStorageResultMsg()

    soapAction[''] = 'soap_IMedium_createDiffStorage'
    root[(IMedium_createDiffStorageRequestMsg.typecode.nspname,IMedium_createDiffStorageRequestMsg.typecode.pname)] = 'soap_IMedium_createDiffStorage'

    def soap_IMedium_mergeTo(self, ps, **kw):
        request = ps.Parse(IMedium_mergeToRequestMsg.typecode)
        return request,IMedium_mergeToResultMsg()

    soapAction[''] = 'soap_IMedium_mergeTo'
    root[(IMedium_mergeToRequestMsg.typecode.nspname,IMedium_mergeToRequestMsg.typecode.pname)] = 'soap_IMedium_mergeTo'

    def soap_IMedium_cloneTo(self, ps, **kw):
        request = ps.Parse(IMedium_cloneToRequestMsg.typecode)
        return request,IMedium_cloneToResultMsg()

    soapAction[''] = 'soap_IMedium_cloneTo'
    root[(IMedium_cloneToRequestMsg.typecode.nspname,IMedium_cloneToRequestMsg.typecode.pname)] = 'soap_IMedium_cloneTo'

    def soap_IMedium_cloneToBase(self, ps, **kw):
        request = ps.Parse(IMedium_cloneToBaseRequestMsg.typecode)
        return request,IMedium_cloneToBaseResultMsg()

    soapAction[''] = 'soap_IMedium_cloneToBase'
    root[(IMedium_cloneToBaseRequestMsg.typecode.nspname,IMedium_cloneToBaseRequestMsg.typecode.pname)] = 'soap_IMedium_cloneToBase'

    def soap_IMedium_setLocation(self, ps, **kw):
        request = ps.Parse(IMedium_setLocationRequestMsg.typecode)
        return request,IMedium_setLocationResultMsg()

    soapAction[''] = 'soap_IMedium_setLocation'
    root[(IMedium_setLocationRequestMsg.typecode.nspname,IMedium_setLocationRequestMsg.typecode.pname)] = 'soap_IMedium_setLocation'

    def soap_IMedium_compact(self, ps, **kw):
        request = ps.Parse(IMedium_compactRequestMsg.typecode)
        return request,IMedium_compactResultMsg()

    soapAction[''] = 'soap_IMedium_compact'
    root[(IMedium_compactRequestMsg.typecode.nspname,IMedium_compactRequestMsg.typecode.pname)] = 'soap_IMedium_compact'

    def soap_IMedium_resize(self, ps, **kw):
        request = ps.Parse(IMedium_resizeRequestMsg.typecode)
        return request,IMedium_resizeResultMsg()

    soapAction[''] = 'soap_IMedium_resize'
    root[(IMedium_resizeRequestMsg.typecode.nspname,IMedium_resizeRequestMsg.typecode.pname)] = 'soap_IMedium_resize'

    def soap_IMedium_reset(self, ps, **kw):
        request = ps.Parse(IMedium_resetRequestMsg.typecode)
        return request,IMedium_resetResultMsg()

    soapAction[''] = 'soap_IMedium_reset'
    root[(IMedium_resetRequestMsg.typecode.nspname,IMedium_resetRequestMsg.typecode.pname)] = 'soap_IMedium_reset'

    def soap_IMedium_changeEncryption(self, ps, **kw):
        request = ps.Parse(IMedium_changeEncryptionRequestMsg.typecode)
        return request,IMedium_changeEncryptionResultMsg()

    soapAction[''] = 'soap_IMedium_changeEncryption'
    root[(IMedium_changeEncryptionRequestMsg.typecode.nspname,IMedium_changeEncryptionRequestMsg.typecode.pname)] = 'soap_IMedium_changeEncryption'

    def soap_IMedium_getEncryptionSettings(self, ps, **kw):
        request = ps.Parse(IMedium_getEncryptionSettingsRequestMsg.typecode)
        return request,IMedium_getEncryptionSettingsResultMsg()

    soapAction[''] = 'soap_IMedium_getEncryptionSettings'
    root[(IMedium_getEncryptionSettingsRequestMsg.typecode.nspname,IMedium_getEncryptionSettingsRequestMsg.typecode.pname)] = 'soap_IMedium_getEncryptionSettings'

    def soap_IMedium_checkEncryptionPassword(self, ps, **kw):
        request = ps.Parse(IMedium_checkEncryptionPasswordRequestMsg.typecode)
        return request,IMedium_checkEncryptionPasswordResultMsg()

    soapAction[''] = 'soap_IMedium_checkEncryptionPassword'
    root[(IMedium_checkEncryptionPasswordRequestMsg.typecode.nspname,IMedium_checkEncryptionPasswordRequestMsg.typecode.pname)] = 'soap_IMedium_checkEncryptionPassword'

    def soap_IMediumFormat_getId(self, ps, **kw):
        request = ps.Parse(IMediumFormat_getIdRequestMsg.typecode)
        return request,IMediumFormat_getIdResultMsg()

    soapAction[''] = 'soap_IMediumFormat_getId'
    root[(IMediumFormat_getIdRequestMsg.typecode.nspname,IMediumFormat_getIdRequestMsg.typecode.pname)] = 'soap_IMediumFormat_getId'

    def soap_IMediumFormat_getName(self, ps, **kw):
        request = ps.Parse(IMediumFormat_getNameRequestMsg.typecode)
        return request,IMediumFormat_getNameResultMsg()

    soapAction[''] = 'soap_IMediumFormat_getName'
    root[(IMediumFormat_getNameRequestMsg.typecode.nspname,IMediumFormat_getNameRequestMsg.typecode.pname)] = 'soap_IMediumFormat_getName'

    def soap_IMediumFormat_getCapabilities(self, ps, **kw):
        request = ps.Parse(IMediumFormat_getCapabilitiesRequestMsg.typecode)
        return request,IMediumFormat_getCapabilitiesResultMsg()

    soapAction[''] = 'soap_IMediumFormat_getCapabilities'
    root[(IMediumFormat_getCapabilitiesRequestMsg.typecode.nspname,IMediumFormat_getCapabilitiesRequestMsg.typecode.pname)] = 'soap_IMediumFormat_getCapabilities'

    def soap_IMediumFormat_describeFileExtensions(self, ps, **kw):
        request = ps.Parse(IMediumFormat_describeFileExtensionsRequestMsg.typecode)
        return request,IMediumFormat_describeFileExtensionsResultMsg()

    soapAction[''] = 'soap_IMediumFormat_describeFileExtensions'
    root[(IMediumFormat_describeFileExtensionsRequestMsg.typecode.nspname,IMediumFormat_describeFileExtensionsRequestMsg.typecode.pname)] = 'soap_IMediumFormat_describeFileExtensions'

    def soap_IMediumFormat_describeProperties(self, ps, **kw):
        request = ps.Parse(IMediumFormat_describePropertiesRequestMsg.typecode)
        return request,IMediumFormat_describePropertiesResultMsg()

    soapAction[''] = 'soap_IMediumFormat_describeProperties'
    root[(IMediumFormat_describePropertiesRequestMsg.typecode.nspname,IMediumFormat_describePropertiesRequestMsg.typecode.pname)] = 'soap_IMediumFormat_describeProperties'

    def soap_IToken_abandon(self, ps, **kw):
        request = ps.Parse(IToken_abandonRequestMsg.typecode)
        return request,IToken_abandonResultMsg()

    soapAction[''] = 'soap_IToken_abandon'
    root[(IToken_abandonRequestMsg.typecode.nspname,IToken_abandonRequestMsg.typecode.pname)] = 'soap_IToken_abandon'

    def soap_IToken_dummy(self, ps, **kw):
        request = ps.Parse(IToken_dummyRequestMsg.typecode)
        return request,IToken_dummyResultMsg()

    soapAction[''] = 'soap_IToken_dummy'
    root[(IToken_dummyRequestMsg.typecode.nspname,IToken_dummyRequestMsg.typecode.pname)] = 'soap_IToken_dummy'

    def soap_IKeyboard_getKeyboardLEDs(self, ps, **kw):
        request = ps.Parse(IKeyboard_getKeyboardLEDsRequestMsg.typecode)
        return request,IKeyboard_getKeyboardLEDsResultMsg()

    soapAction[''] = 'soap_IKeyboard_getKeyboardLEDs'
    root[(IKeyboard_getKeyboardLEDsRequestMsg.typecode.nspname,IKeyboard_getKeyboardLEDsRequestMsg.typecode.pname)] = 'soap_IKeyboard_getKeyboardLEDs'

    def soap_IKeyboard_getEventSource(self, ps, **kw):
        request = ps.Parse(IKeyboard_getEventSourceRequestMsg.typecode)
        return request,IKeyboard_getEventSourceResultMsg()

    soapAction[''] = 'soap_IKeyboard_getEventSource'
    root[(IKeyboard_getEventSourceRequestMsg.typecode.nspname,IKeyboard_getEventSourceRequestMsg.typecode.pname)] = 'soap_IKeyboard_getEventSource'

    def soap_IKeyboard_putScancode(self, ps, **kw):
        request = ps.Parse(IKeyboard_putScancodeRequestMsg.typecode)
        return request,IKeyboard_putScancodeResultMsg()

    soapAction[''] = 'soap_IKeyboard_putScancode'
    root[(IKeyboard_putScancodeRequestMsg.typecode.nspname,IKeyboard_putScancodeRequestMsg.typecode.pname)] = 'soap_IKeyboard_putScancode'

    def soap_IKeyboard_putScancodes(self, ps, **kw):
        request = ps.Parse(IKeyboard_putScancodesRequestMsg.typecode)
        return request,IKeyboard_putScancodesResultMsg()

    soapAction[''] = 'soap_IKeyboard_putScancodes'
    root[(IKeyboard_putScancodesRequestMsg.typecode.nspname,IKeyboard_putScancodesRequestMsg.typecode.pname)] = 'soap_IKeyboard_putScancodes'

    def soap_IKeyboard_putCAD(self, ps, **kw):
        request = ps.Parse(IKeyboard_putCADRequestMsg.typecode)
        return request,IKeyboard_putCADResultMsg()

    soapAction[''] = 'soap_IKeyboard_putCAD'
    root[(IKeyboard_putCADRequestMsg.typecode.nspname,IKeyboard_putCADRequestMsg.typecode.pname)] = 'soap_IKeyboard_putCAD'

    def soap_IKeyboard_releaseKeys(self, ps, **kw):
        request = ps.Parse(IKeyboard_releaseKeysRequestMsg.typecode)
        return request,IKeyboard_releaseKeysResultMsg()

    soapAction[''] = 'soap_IKeyboard_releaseKeys'
    root[(IKeyboard_releaseKeysRequestMsg.typecode.nspname,IKeyboard_releaseKeysRequestMsg.typecode.pname)] = 'soap_IKeyboard_releaseKeys'

    def soap_IMousePointerShape_getVisible(self, ps, **kw):
        request = ps.Parse(IMousePointerShape_getVisibleRequestMsg.typecode)
        return request,IMousePointerShape_getVisibleResultMsg()

    soapAction[''] = 'soap_IMousePointerShape_getVisible'
    root[(IMousePointerShape_getVisibleRequestMsg.typecode.nspname,IMousePointerShape_getVisibleRequestMsg.typecode.pname)] = 'soap_IMousePointerShape_getVisible'

    def soap_IMousePointerShape_getAlpha(self, ps, **kw):
        request = ps.Parse(IMousePointerShape_getAlphaRequestMsg.typecode)
        return request,IMousePointerShape_getAlphaResultMsg()

    soapAction[''] = 'soap_IMousePointerShape_getAlpha'
    root[(IMousePointerShape_getAlphaRequestMsg.typecode.nspname,IMousePointerShape_getAlphaRequestMsg.typecode.pname)] = 'soap_IMousePointerShape_getAlpha'

    def soap_IMousePointerShape_getHotX(self, ps, **kw):
        request = ps.Parse(IMousePointerShape_getHotXRequestMsg.typecode)
        return request,IMousePointerShape_getHotXResultMsg()

    soapAction[''] = 'soap_IMousePointerShape_getHotX'
    root[(IMousePointerShape_getHotXRequestMsg.typecode.nspname,IMousePointerShape_getHotXRequestMsg.typecode.pname)] = 'soap_IMousePointerShape_getHotX'

    def soap_IMousePointerShape_getHotY(self, ps, **kw):
        request = ps.Parse(IMousePointerShape_getHotYRequestMsg.typecode)
        return request,IMousePointerShape_getHotYResultMsg()

    soapAction[''] = 'soap_IMousePointerShape_getHotY'
    root[(IMousePointerShape_getHotYRequestMsg.typecode.nspname,IMousePointerShape_getHotYRequestMsg.typecode.pname)] = 'soap_IMousePointerShape_getHotY'

    def soap_IMousePointerShape_getWidth(self, ps, **kw):
        request = ps.Parse(IMousePointerShape_getWidthRequestMsg.typecode)
        return request,IMousePointerShape_getWidthResultMsg()

    soapAction[''] = 'soap_IMousePointerShape_getWidth'
    root[(IMousePointerShape_getWidthRequestMsg.typecode.nspname,IMousePointerShape_getWidthRequestMsg.typecode.pname)] = 'soap_IMousePointerShape_getWidth'

    def soap_IMousePointerShape_getHeight(self, ps, **kw):
        request = ps.Parse(IMousePointerShape_getHeightRequestMsg.typecode)
        return request,IMousePointerShape_getHeightResultMsg()

    soapAction[''] = 'soap_IMousePointerShape_getHeight'
    root[(IMousePointerShape_getHeightRequestMsg.typecode.nspname,IMousePointerShape_getHeightRequestMsg.typecode.pname)] = 'soap_IMousePointerShape_getHeight'

    def soap_IMousePointerShape_getShape(self, ps, **kw):
        request = ps.Parse(IMousePointerShape_getShapeRequestMsg.typecode)
        return request,IMousePointerShape_getShapeResultMsg()

    soapAction[''] = 'soap_IMousePointerShape_getShape'
    root[(IMousePointerShape_getShapeRequestMsg.typecode.nspname,IMousePointerShape_getShapeRequestMsg.typecode.pname)] = 'soap_IMousePointerShape_getShape'

    def soap_IMouse_getAbsoluteSupported(self, ps, **kw):
        request = ps.Parse(IMouse_getAbsoluteSupportedRequestMsg.typecode)
        return request,IMouse_getAbsoluteSupportedResultMsg()

    soapAction[''] = 'soap_IMouse_getAbsoluteSupported'
    root[(IMouse_getAbsoluteSupportedRequestMsg.typecode.nspname,IMouse_getAbsoluteSupportedRequestMsg.typecode.pname)] = 'soap_IMouse_getAbsoluteSupported'

    def soap_IMouse_getRelativeSupported(self, ps, **kw):
        request = ps.Parse(IMouse_getRelativeSupportedRequestMsg.typecode)
        return request,IMouse_getRelativeSupportedResultMsg()

    soapAction[''] = 'soap_IMouse_getRelativeSupported'
    root[(IMouse_getRelativeSupportedRequestMsg.typecode.nspname,IMouse_getRelativeSupportedRequestMsg.typecode.pname)] = 'soap_IMouse_getRelativeSupported'

    def soap_IMouse_getMultiTouchSupported(self, ps, **kw):
        request = ps.Parse(IMouse_getMultiTouchSupportedRequestMsg.typecode)
        return request,IMouse_getMultiTouchSupportedResultMsg()

    soapAction[''] = 'soap_IMouse_getMultiTouchSupported'
    root[(IMouse_getMultiTouchSupportedRequestMsg.typecode.nspname,IMouse_getMultiTouchSupportedRequestMsg.typecode.pname)] = 'soap_IMouse_getMultiTouchSupported'

    def soap_IMouse_getNeedsHostCursor(self, ps, **kw):
        request = ps.Parse(IMouse_getNeedsHostCursorRequestMsg.typecode)
        return request,IMouse_getNeedsHostCursorResultMsg()

    soapAction[''] = 'soap_IMouse_getNeedsHostCursor'
    root[(IMouse_getNeedsHostCursorRequestMsg.typecode.nspname,IMouse_getNeedsHostCursorRequestMsg.typecode.pname)] = 'soap_IMouse_getNeedsHostCursor'

    def soap_IMouse_getPointerShape(self, ps, **kw):
        request = ps.Parse(IMouse_getPointerShapeRequestMsg.typecode)
        return request,IMouse_getPointerShapeResultMsg()

    soapAction[''] = 'soap_IMouse_getPointerShape'
    root[(IMouse_getPointerShapeRequestMsg.typecode.nspname,IMouse_getPointerShapeRequestMsg.typecode.pname)] = 'soap_IMouse_getPointerShape'

    def soap_IMouse_getEventSource(self, ps, **kw):
        request = ps.Parse(IMouse_getEventSourceRequestMsg.typecode)
        return request,IMouse_getEventSourceResultMsg()

    soapAction[''] = 'soap_IMouse_getEventSource'
    root[(IMouse_getEventSourceRequestMsg.typecode.nspname,IMouse_getEventSourceRequestMsg.typecode.pname)] = 'soap_IMouse_getEventSource'

    def soap_IMouse_putMouseEvent(self, ps, **kw):
        request = ps.Parse(IMouse_putMouseEventRequestMsg.typecode)
        return request,IMouse_putMouseEventResultMsg()

    soapAction[''] = 'soap_IMouse_putMouseEvent'
    root[(IMouse_putMouseEventRequestMsg.typecode.nspname,IMouse_putMouseEventRequestMsg.typecode.pname)] = 'soap_IMouse_putMouseEvent'

    def soap_IMouse_putMouseEventAbsolute(self, ps, **kw):
        request = ps.Parse(IMouse_putMouseEventAbsoluteRequestMsg.typecode)
        return request,IMouse_putMouseEventAbsoluteResultMsg()

    soapAction[''] = 'soap_IMouse_putMouseEventAbsolute'
    root[(IMouse_putMouseEventAbsoluteRequestMsg.typecode.nspname,IMouse_putMouseEventAbsoluteRequestMsg.typecode.pname)] = 'soap_IMouse_putMouseEventAbsolute'

    def soap_IMouse_putEventMultiTouch(self, ps, **kw):
        request = ps.Parse(IMouse_putEventMultiTouchRequestMsg.typecode)
        return request,IMouse_putEventMultiTouchResultMsg()

    soapAction[''] = 'soap_IMouse_putEventMultiTouch'
    root[(IMouse_putEventMultiTouchRequestMsg.typecode.nspname,IMouse_putEventMultiTouchRequestMsg.typecode.pname)] = 'soap_IMouse_putEventMultiTouch'

    def soap_IMouse_putEventMultiTouchString(self, ps, **kw):
        request = ps.Parse(IMouse_putEventMultiTouchStringRequestMsg.typecode)
        return request,IMouse_putEventMultiTouchStringResultMsg()

    soapAction[''] = 'soap_IMouse_putEventMultiTouchString'
    root[(IMouse_putEventMultiTouchStringRequestMsg.typecode.nspname,IMouse_putEventMultiTouchStringRequestMsg.typecode.pname)] = 'soap_IMouse_putEventMultiTouchString'

    def soap_IFramebuffer_getWidth(self, ps, **kw):
        request = ps.Parse(IFramebuffer_getWidthRequestMsg.typecode)
        return request,IFramebuffer_getWidthResultMsg()

    soapAction[''] = 'soap_IFramebuffer_getWidth'
    root[(IFramebuffer_getWidthRequestMsg.typecode.nspname,IFramebuffer_getWidthRequestMsg.typecode.pname)] = 'soap_IFramebuffer_getWidth'

    def soap_IFramebuffer_getHeight(self, ps, **kw):
        request = ps.Parse(IFramebuffer_getHeightRequestMsg.typecode)
        return request,IFramebuffer_getHeightResultMsg()

    soapAction[''] = 'soap_IFramebuffer_getHeight'
    root[(IFramebuffer_getHeightRequestMsg.typecode.nspname,IFramebuffer_getHeightRequestMsg.typecode.pname)] = 'soap_IFramebuffer_getHeight'

    def soap_IFramebuffer_getBitsPerPixel(self, ps, **kw):
        request = ps.Parse(IFramebuffer_getBitsPerPixelRequestMsg.typecode)
        return request,IFramebuffer_getBitsPerPixelResultMsg()

    soapAction[''] = 'soap_IFramebuffer_getBitsPerPixel'
    root[(IFramebuffer_getBitsPerPixelRequestMsg.typecode.nspname,IFramebuffer_getBitsPerPixelRequestMsg.typecode.pname)] = 'soap_IFramebuffer_getBitsPerPixel'

    def soap_IFramebuffer_getBytesPerLine(self, ps, **kw):
        request = ps.Parse(IFramebuffer_getBytesPerLineRequestMsg.typecode)
        return request,IFramebuffer_getBytesPerLineResultMsg()

    soapAction[''] = 'soap_IFramebuffer_getBytesPerLine'
    root[(IFramebuffer_getBytesPerLineRequestMsg.typecode.nspname,IFramebuffer_getBytesPerLineRequestMsg.typecode.pname)] = 'soap_IFramebuffer_getBytesPerLine'

    def soap_IFramebuffer_getPixelFormat(self, ps, **kw):
        request = ps.Parse(IFramebuffer_getPixelFormatRequestMsg.typecode)
        return request,IFramebuffer_getPixelFormatResultMsg()

    soapAction[''] = 'soap_IFramebuffer_getPixelFormat'
    root[(IFramebuffer_getPixelFormatRequestMsg.typecode.nspname,IFramebuffer_getPixelFormatRequestMsg.typecode.pname)] = 'soap_IFramebuffer_getPixelFormat'

    def soap_IFramebuffer_getHeightReduction(self, ps, **kw):
        request = ps.Parse(IFramebuffer_getHeightReductionRequestMsg.typecode)
        return request,IFramebuffer_getHeightReductionResultMsg()

    soapAction[''] = 'soap_IFramebuffer_getHeightReduction'
    root[(IFramebuffer_getHeightReductionRequestMsg.typecode.nspname,IFramebuffer_getHeightReductionRequestMsg.typecode.pname)] = 'soap_IFramebuffer_getHeightReduction'

    def soap_IFramebuffer_getOverlay(self, ps, **kw):
        request = ps.Parse(IFramebuffer_getOverlayRequestMsg.typecode)
        return request,IFramebuffer_getOverlayResultMsg()

    soapAction[''] = 'soap_IFramebuffer_getOverlay'
    root[(IFramebuffer_getOverlayRequestMsg.typecode.nspname,IFramebuffer_getOverlayRequestMsg.typecode.pname)] = 'soap_IFramebuffer_getOverlay'

    def soap_IFramebuffer_getCapabilities(self, ps, **kw):
        request = ps.Parse(IFramebuffer_getCapabilitiesRequestMsg.typecode)
        return request,IFramebuffer_getCapabilitiesResultMsg()

    soapAction[''] = 'soap_IFramebuffer_getCapabilities'
    root[(IFramebuffer_getCapabilitiesRequestMsg.typecode.nspname,IFramebuffer_getCapabilitiesRequestMsg.typecode.pname)] = 'soap_IFramebuffer_getCapabilities'

    def soap_IFramebuffer_notifyUpdate(self, ps, **kw):
        request = ps.Parse(IFramebuffer_notifyUpdateRequestMsg.typecode)
        return request,IFramebuffer_notifyUpdateResultMsg()

    soapAction[''] = 'soap_IFramebuffer_notifyUpdate'
    root[(IFramebuffer_notifyUpdateRequestMsg.typecode.nspname,IFramebuffer_notifyUpdateRequestMsg.typecode.pname)] = 'soap_IFramebuffer_notifyUpdate'

    def soap_IFramebuffer_notifyUpdateImage(self, ps, **kw):
        request = ps.Parse(IFramebuffer_notifyUpdateImageRequestMsg.typecode)
        return request,IFramebuffer_notifyUpdateImageResultMsg()

    soapAction[''] = 'soap_IFramebuffer_notifyUpdateImage'
    root[(IFramebuffer_notifyUpdateImageRequestMsg.typecode.nspname,IFramebuffer_notifyUpdateImageRequestMsg.typecode.pname)] = 'soap_IFramebuffer_notifyUpdateImage'

    def soap_IFramebuffer_notifyChange(self, ps, **kw):
        request = ps.Parse(IFramebuffer_notifyChangeRequestMsg.typecode)
        return request,IFramebuffer_notifyChangeResultMsg()

    soapAction[''] = 'soap_IFramebuffer_notifyChange'
    root[(IFramebuffer_notifyChangeRequestMsg.typecode.nspname,IFramebuffer_notifyChangeRequestMsg.typecode.pname)] = 'soap_IFramebuffer_notifyChange'

    def soap_IFramebuffer_videoModeSupported(self, ps, **kw):
        request = ps.Parse(IFramebuffer_videoModeSupportedRequestMsg.typecode)
        return request,IFramebuffer_videoModeSupportedResultMsg()

    soapAction[''] = 'soap_IFramebuffer_videoModeSupported'
    root[(IFramebuffer_videoModeSupportedRequestMsg.typecode.nspname,IFramebuffer_videoModeSupportedRequestMsg.typecode.pname)] = 'soap_IFramebuffer_videoModeSupported'

    def soap_IFramebuffer_notify3DEvent(self, ps, **kw):
        request = ps.Parse(IFramebuffer_notify3DEventRequestMsg.typecode)
        return request,IFramebuffer_notify3DEventResultMsg()

    soapAction[''] = 'soap_IFramebuffer_notify3DEvent'
    root[(IFramebuffer_notify3DEventRequestMsg.typecode.nspname,IFramebuffer_notify3DEventRequestMsg.typecode.pname)] = 'soap_IFramebuffer_notify3DEvent'

    def soap_IFramebufferOverlay_getX(self, ps, **kw):
        request = ps.Parse(IFramebufferOverlay_getXRequestMsg.typecode)
        return request,IFramebufferOverlay_getXResultMsg()

    soapAction[''] = 'soap_IFramebufferOverlay_getX'
    root[(IFramebufferOverlay_getXRequestMsg.typecode.nspname,IFramebufferOverlay_getXRequestMsg.typecode.pname)] = 'soap_IFramebufferOverlay_getX'

    def soap_IFramebufferOverlay_getY(self, ps, **kw):
        request = ps.Parse(IFramebufferOverlay_getYRequestMsg.typecode)
        return request,IFramebufferOverlay_getYResultMsg()

    soapAction[''] = 'soap_IFramebufferOverlay_getY'
    root[(IFramebufferOverlay_getYRequestMsg.typecode.nspname,IFramebufferOverlay_getYRequestMsg.typecode.pname)] = 'soap_IFramebufferOverlay_getY'

    def soap_IFramebufferOverlay_getVisible(self, ps, **kw):
        request = ps.Parse(IFramebufferOverlay_getVisibleRequestMsg.typecode)
        return request,IFramebufferOverlay_getVisibleResultMsg()

    soapAction[''] = 'soap_IFramebufferOverlay_getVisible'
    root[(IFramebufferOverlay_getVisibleRequestMsg.typecode.nspname,IFramebufferOverlay_getVisibleRequestMsg.typecode.pname)] = 'soap_IFramebufferOverlay_getVisible'

    def soap_IFramebufferOverlay_setVisible(self, ps, **kw):
        request = ps.Parse(IFramebufferOverlay_setVisibleRequestMsg.typecode)
        return request,IFramebufferOverlay_setVisibleResultMsg()

    soapAction[''] = 'soap_IFramebufferOverlay_setVisible'
    root[(IFramebufferOverlay_setVisibleRequestMsg.typecode.nspname,IFramebufferOverlay_setVisibleRequestMsg.typecode.pname)] = 'soap_IFramebufferOverlay_setVisible'

    def soap_IFramebufferOverlay_getAlpha(self, ps, **kw):
        request = ps.Parse(IFramebufferOverlay_getAlphaRequestMsg.typecode)
        return request,IFramebufferOverlay_getAlphaResultMsg()

    soapAction[''] = 'soap_IFramebufferOverlay_getAlpha'
    root[(IFramebufferOverlay_getAlphaRequestMsg.typecode.nspname,IFramebufferOverlay_getAlphaRequestMsg.typecode.pname)] = 'soap_IFramebufferOverlay_getAlpha'

    def soap_IFramebufferOverlay_setAlpha(self, ps, **kw):
        request = ps.Parse(IFramebufferOverlay_setAlphaRequestMsg.typecode)
        return request,IFramebufferOverlay_setAlphaResultMsg()

    soapAction[''] = 'soap_IFramebufferOverlay_setAlpha'
    root[(IFramebufferOverlay_setAlphaRequestMsg.typecode.nspname,IFramebufferOverlay_setAlphaRequestMsg.typecode.pname)] = 'soap_IFramebufferOverlay_setAlpha'

    def soap_IFramebufferOverlay_move(self, ps, **kw):
        request = ps.Parse(IFramebufferOverlay_moveRequestMsg.typecode)
        return request,IFramebufferOverlay_moveResultMsg()

    soapAction[''] = 'soap_IFramebufferOverlay_move'
    root[(IFramebufferOverlay_moveRequestMsg.typecode.nspname,IFramebufferOverlay_moveRequestMsg.typecode.pname)] = 'soap_IFramebufferOverlay_move'

    def soap_IDisplay_getScreenResolution(self, ps, **kw):
        request = ps.Parse(IDisplay_getScreenResolutionRequestMsg.typecode)
        return request,IDisplay_getScreenResolutionResultMsg()

    soapAction[''] = 'soap_IDisplay_getScreenResolution'
    root[(IDisplay_getScreenResolutionRequestMsg.typecode.nspname,IDisplay_getScreenResolutionRequestMsg.typecode.pname)] = 'soap_IDisplay_getScreenResolution'

    def soap_IDisplay_attachFramebuffer(self, ps, **kw):
        request = ps.Parse(IDisplay_attachFramebufferRequestMsg.typecode)
        return request,IDisplay_attachFramebufferResultMsg()

    soapAction[''] = 'soap_IDisplay_attachFramebuffer'
    root[(IDisplay_attachFramebufferRequestMsg.typecode.nspname,IDisplay_attachFramebufferRequestMsg.typecode.pname)] = 'soap_IDisplay_attachFramebuffer'

    def soap_IDisplay_detachFramebuffer(self, ps, **kw):
        request = ps.Parse(IDisplay_detachFramebufferRequestMsg.typecode)
        return request,IDisplay_detachFramebufferResultMsg()

    soapAction[''] = 'soap_IDisplay_detachFramebuffer'
    root[(IDisplay_detachFramebufferRequestMsg.typecode.nspname,IDisplay_detachFramebufferRequestMsg.typecode.pname)] = 'soap_IDisplay_detachFramebuffer'

    def soap_IDisplay_queryFramebuffer(self, ps, **kw):
        request = ps.Parse(IDisplay_queryFramebufferRequestMsg.typecode)
        return request,IDisplay_queryFramebufferResultMsg()

    soapAction[''] = 'soap_IDisplay_queryFramebuffer'
    root[(IDisplay_queryFramebufferRequestMsg.typecode.nspname,IDisplay_queryFramebufferRequestMsg.typecode.pname)] = 'soap_IDisplay_queryFramebuffer'

    def soap_IDisplay_setVideoModeHint(self, ps, **kw):
        request = ps.Parse(IDisplay_setVideoModeHintRequestMsg.typecode)
        return request,IDisplay_setVideoModeHintResultMsg()

    soapAction[''] = 'soap_IDisplay_setVideoModeHint'
    root[(IDisplay_setVideoModeHintRequestMsg.typecode.nspname,IDisplay_setVideoModeHintRequestMsg.typecode.pname)] = 'soap_IDisplay_setVideoModeHint'

    def soap_IDisplay_setSeamlessMode(self, ps, **kw):
        request = ps.Parse(IDisplay_setSeamlessModeRequestMsg.typecode)
        return request,IDisplay_setSeamlessModeResultMsg()

    soapAction[''] = 'soap_IDisplay_setSeamlessMode'
    root[(IDisplay_setSeamlessModeRequestMsg.typecode.nspname,IDisplay_setSeamlessModeRequestMsg.typecode.pname)] = 'soap_IDisplay_setSeamlessMode'

    def soap_IDisplay_takeScreenShotToArray(self, ps, **kw):
        request = ps.Parse(IDisplay_takeScreenShotToArrayRequestMsg.typecode)
        return request,IDisplay_takeScreenShotToArrayResultMsg()

    soapAction[''] = 'soap_IDisplay_takeScreenShotToArray'
    root[(IDisplay_takeScreenShotToArrayRequestMsg.typecode.nspname,IDisplay_takeScreenShotToArrayRequestMsg.typecode.pname)] = 'soap_IDisplay_takeScreenShotToArray'

    def soap_IDisplay_invalidateAndUpdate(self, ps, **kw):
        request = ps.Parse(IDisplay_invalidateAndUpdateRequestMsg.typecode)
        return request,IDisplay_invalidateAndUpdateResultMsg()

    soapAction[''] = 'soap_IDisplay_invalidateAndUpdate'
    root[(IDisplay_invalidateAndUpdateRequestMsg.typecode.nspname,IDisplay_invalidateAndUpdateRequestMsg.typecode.pname)] = 'soap_IDisplay_invalidateAndUpdate'

    def soap_IDisplay_invalidateAndUpdateScreen(self, ps, **kw):
        request = ps.Parse(IDisplay_invalidateAndUpdateScreenRequestMsg.typecode)
        return request,IDisplay_invalidateAndUpdateScreenResultMsg()

    soapAction[''] = 'soap_IDisplay_invalidateAndUpdateScreen'
    root[(IDisplay_invalidateAndUpdateScreenRequestMsg.typecode.nspname,IDisplay_invalidateAndUpdateScreenRequestMsg.typecode.pname)] = 'soap_IDisplay_invalidateAndUpdateScreen'

    def soap_IDisplay_viewportChanged(self, ps, **kw):
        request = ps.Parse(IDisplay_viewportChangedRequestMsg.typecode)
        return request,IDisplay_viewportChangedResultMsg()

    soapAction[''] = 'soap_IDisplay_viewportChanged'
    root[(IDisplay_viewportChangedRequestMsg.typecode.nspname,IDisplay_viewportChangedRequestMsg.typecode.pname)] = 'soap_IDisplay_viewportChanged'

    def soap_IDisplay_notifyScaleFactorChange(self, ps, **kw):
        request = ps.Parse(IDisplay_notifyScaleFactorChangeRequestMsg.typecode)
        return request,IDisplay_notifyScaleFactorChangeResultMsg()

    soapAction[''] = 'soap_IDisplay_notifyScaleFactorChange'
    root[(IDisplay_notifyScaleFactorChangeRequestMsg.typecode.nspname,IDisplay_notifyScaleFactorChangeRequestMsg.typecode.pname)] = 'soap_IDisplay_notifyScaleFactorChange'

    def soap_IDisplay_notifyHiDPIOutputPolicyChange(self, ps, **kw):
        request = ps.Parse(IDisplay_notifyHiDPIOutputPolicyChangeRequestMsg.typecode)
        return request,IDisplay_notifyHiDPIOutputPolicyChangeResultMsg()

    soapAction[''] = 'soap_IDisplay_notifyHiDPIOutputPolicyChange'
    root[(IDisplay_notifyHiDPIOutputPolicyChangeRequestMsg.typecode.nspname,IDisplay_notifyHiDPIOutputPolicyChangeRequestMsg.typecode.pname)] = 'soap_IDisplay_notifyHiDPIOutputPolicyChange'

    def soap_INetworkAdapter_getAdapterType(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getAdapterTypeRequestMsg.typecode)
        return request,INetworkAdapter_getAdapterTypeResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getAdapterType'
    root[(INetworkAdapter_getAdapterTypeRequestMsg.typecode.nspname,INetworkAdapter_getAdapterTypeRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getAdapterType'

    def soap_INetworkAdapter_setAdapterType(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setAdapterTypeRequestMsg.typecode)
        return request,INetworkAdapter_setAdapterTypeResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setAdapterType'
    root[(INetworkAdapter_setAdapterTypeRequestMsg.typecode.nspname,INetworkAdapter_setAdapterTypeRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setAdapterType'

    def soap_INetworkAdapter_getSlot(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getSlotRequestMsg.typecode)
        return request,INetworkAdapter_getSlotResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getSlot'
    root[(INetworkAdapter_getSlotRequestMsg.typecode.nspname,INetworkAdapter_getSlotRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getSlot'

    def soap_INetworkAdapter_getEnabled(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getEnabledRequestMsg.typecode)
        return request,INetworkAdapter_getEnabledResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getEnabled'
    root[(INetworkAdapter_getEnabledRequestMsg.typecode.nspname,INetworkAdapter_getEnabledRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getEnabled'

    def soap_INetworkAdapter_setEnabled(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setEnabledRequestMsg.typecode)
        return request,INetworkAdapter_setEnabledResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setEnabled'
    root[(INetworkAdapter_setEnabledRequestMsg.typecode.nspname,INetworkAdapter_setEnabledRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setEnabled'

    def soap_INetworkAdapter_getMACAddress(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getMACAddressRequestMsg.typecode)
        return request,INetworkAdapter_getMACAddressResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getMACAddress'
    root[(INetworkAdapter_getMACAddressRequestMsg.typecode.nspname,INetworkAdapter_getMACAddressRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getMACAddress'

    def soap_INetworkAdapter_setMACAddress(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setMACAddressRequestMsg.typecode)
        return request,INetworkAdapter_setMACAddressResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setMACAddress'
    root[(INetworkAdapter_setMACAddressRequestMsg.typecode.nspname,INetworkAdapter_setMACAddressRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setMACAddress'

    def soap_INetworkAdapter_getAttachmentType(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getAttachmentTypeRequestMsg.typecode)
        return request,INetworkAdapter_getAttachmentTypeResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getAttachmentType'
    root[(INetworkAdapter_getAttachmentTypeRequestMsg.typecode.nspname,INetworkAdapter_getAttachmentTypeRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getAttachmentType'

    def soap_INetworkAdapter_setAttachmentType(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setAttachmentTypeRequestMsg.typecode)
        return request,INetworkAdapter_setAttachmentTypeResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setAttachmentType'
    root[(INetworkAdapter_setAttachmentTypeRequestMsg.typecode.nspname,INetworkAdapter_setAttachmentTypeRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setAttachmentType'

    def soap_INetworkAdapter_getBridgedInterface(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getBridgedInterfaceRequestMsg.typecode)
        return request,INetworkAdapter_getBridgedInterfaceResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getBridgedInterface'
    root[(INetworkAdapter_getBridgedInterfaceRequestMsg.typecode.nspname,INetworkAdapter_getBridgedInterfaceRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getBridgedInterface'

    def soap_INetworkAdapter_setBridgedInterface(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setBridgedInterfaceRequestMsg.typecode)
        return request,INetworkAdapter_setBridgedInterfaceResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setBridgedInterface'
    root[(INetworkAdapter_setBridgedInterfaceRequestMsg.typecode.nspname,INetworkAdapter_setBridgedInterfaceRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setBridgedInterface'

    def soap_INetworkAdapter_getHostOnlyInterface(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getHostOnlyInterfaceRequestMsg.typecode)
        return request,INetworkAdapter_getHostOnlyInterfaceResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getHostOnlyInterface'
    root[(INetworkAdapter_getHostOnlyInterfaceRequestMsg.typecode.nspname,INetworkAdapter_getHostOnlyInterfaceRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getHostOnlyInterface'

    def soap_INetworkAdapter_setHostOnlyInterface(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setHostOnlyInterfaceRequestMsg.typecode)
        return request,INetworkAdapter_setHostOnlyInterfaceResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setHostOnlyInterface'
    root[(INetworkAdapter_setHostOnlyInterfaceRequestMsg.typecode.nspname,INetworkAdapter_setHostOnlyInterfaceRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setHostOnlyInterface'

    def soap_INetworkAdapter_getInternalNetwork(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getInternalNetworkRequestMsg.typecode)
        return request,INetworkAdapter_getInternalNetworkResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getInternalNetwork'
    root[(INetworkAdapter_getInternalNetworkRequestMsg.typecode.nspname,INetworkAdapter_getInternalNetworkRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getInternalNetwork'

    def soap_INetworkAdapter_setInternalNetwork(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setInternalNetworkRequestMsg.typecode)
        return request,INetworkAdapter_setInternalNetworkResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setInternalNetwork'
    root[(INetworkAdapter_setInternalNetworkRequestMsg.typecode.nspname,INetworkAdapter_setInternalNetworkRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setInternalNetwork'

    def soap_INetworkAdapter_getNATNetwork(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getNATNetworkRequestMsg.typecode)
        return request,INetworkAdapter_getNATNetworkResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getNATNetwork'
    root[(INetworkAdapter_getNATNetworkRequestMsg.typecode.nspname,INetworkAdapter_getNATNetworkRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getNATNetwork'

    def soap_INetworkAdapter_setNATNetwork(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setNATNetworkRequestMsg.typecode)
        return request,INetworkAdapter_setNATNetworkResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setNATNetwork'
    root[(INetworkAdapter_setNATNetworkRequestMsg.typecode.nspname,INetworkAdapter_setNATNetworkRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setNATNetwork'

    def soap_INetworkAdapter_getGenericDriver(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getGenericDriverRequestMsg.typecode)
        return request,INetworkAdapter_getGenericDriverResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getGenericDriver'
    root[(INetworkAdapter_getGenericDriverRequestMsg.typecode.nspname,INetworkAdapter_getGenericDriverRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getGenericDriver'

    def soap_INetworkAdapter_setGenericDriver(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setGenericDriverRequestMsg.typecode)
        return request,INetworkAdapter_setGenericDriverResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setGenericDriver'
    root[(INetworkAdapter_setGenericDriverRequestMsg.typecode.nspname,INetworkAdapter_setGenericDriverRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setGenericDriver'

    def soap_INetworkAdapter_getCableConnected(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getCableConnectedRequestMsg.typecode)
        return request,INetworkAdapter_getCableConnectedResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getCableConnected'
    root[(INetworkAdapter_getCableConnectedRequestMsg.typecode.nspname,INetworkAdapter_getCableConnectedRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getCableConnected'

    def soap_INetworkAdapter_setCableConnected(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setCableConnectedRequestMsg.typecode)
        return request,INetworkAdapter_setCableConnectedResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setCableConnected'
    root[(INetworkAdapter_setCableConnectedRequestMsg.typecode.nspname,INetworkAdapter_setCableConnectedRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setCableConnected'

    def soap_INetworkAdapter_getLineSpeed(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getLineSpeedRequestMsg.typecode)
        return request,INetworkAdapter_getLineSpeedResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getLineSpeed'
    root[(INetworkAdapter_getLineSpeedRequestMsg.typecode.nspname,INetworkAdapter_getLineSpeedRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getLineSpeed'

    def soap_INetworkAdapter_setLineSpeed(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setLineSpeedRequestMsg.typecode)
        return request,INetworkAdapter_setLineSpeedResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setLineSpeed'
    root[(INetworkAdapter_setLineSpeedRequestMsg.typecode.nspname,INetworkAdapter_setLineSpeedRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setLineSpeed'

    def soap_INetworkAdapter_getPromiscModePolicy(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getPromiscModePolicyRequestMsg.typecode)
        return request,INetworkAdapter_getPromiscModePolicyResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getPromiscModePolicy'
    root[(INetworkAdapter_getPromiscModePolicyRequestMsg.typecode.nspname,INetworkAdapter_getPromiscModePolicyRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getPromiscModePolicy'

    def soap_INetworkAdapter_setPromiscModePolicy(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setPromiscModePolicyRequestMsg.typecode)
        return request,INetworkAdapter_setPromiscModePolicyResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setPromiscModePolicy'
    root[(INetworkAdapter_setPromiscModePolicyRequestMsg.typecode.nspname,INetworkAdapter_setPromiscModePolicyRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setPromiscModePolicy'

    def soap_INetworkAdapter_getTraceEnabled(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getTraceEnabledRequestMsg.typecode)
        return request,INetworkAdapter_getTraceEnabledResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getTraceEnabled'
    root[(INetworkAdapter_getTraceEnabledRequestMsg.typecode.nspname,INetworkAdapter_getTraceEnabledRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getTraceEnabled'

    def soap_INetworkAdapter_setTraceEnabled(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setTraceEnabledRequestMsg.typecode)
        return request,INetworkAdapter_setTraceEnabledResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setTraceEnabled'
    root[(INetworkAdapter_setTraceEnabledRequestMsg.typecode.nspname,INetworkAdapter_setTraceEnabledRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setTraceEnabled'

    def soap_INetworkAdapter_getTraceFile(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getTraceFileRequestMsg.typecode)
        return request,INetworkAdapter_getTraceFileResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getTraceFile'
    root[(INetworkAdapter_getTraceFileRequestMsg.typecode.nspname,INetworkAdapter_getTraceFileRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getTraceFile'

    def soap_INetworkAdapter_setTraceFile(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setTraceFileRequestMsg.typecode)
        return request,INetworkAdapter_setTraceFileResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setTraceFile'
    root[(INetworkAdapter_setTraceFileRequestMsg.typecode.nspname,INetworkAdapter_setTraceFileRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setTraceFile'

    def soap_INetworkAdapter_getNATEngine(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getNATEngineRequestMsg.typecode)
        return request,INetworkAdapter_getNATEngineResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getNATEngine'
    root[(INetworkAdapter_getNATEngineRequestMsg.typecode.nspname,INetworkAdapter_getNATEngineRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getNATEngine'

    def soap_INetworkAdapter_getBootPriority(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getBootPriorityRequestMsg.typecode)
        return request,INetworkAdapter_getBootPriorityResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getBootPriority'
    root[(INetworkAdapter_getBootPriorityRequestMsg.typecode.nspname,INetworkAdapter_getBootPriorityRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getBootPriority'

    def soap_INetworkAdapter_setBootPriority(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setBootPriorityRequestMsg.typecode)
        return request,INetworkAdapter_setBootPriorityResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setBootPriority'
    root[(INetworkAdapter_setBootPriorityRequestMsg.typecode.nspname,INetworkAdapter_setBootPriorityRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setBootPriority'

    def soap_INetworkAdapter_getBandwidthGroup(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getBandwidthGroupRequestMsg.typecode)
        return request,INetworkAdapter_getBandwidthGroupResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getBandwidthGroup'
    root[(INetworkAdapter_getBandwidthGroupRequestMsg.typecode.nspname,INetworkAdapter_getBandwidthGroupRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getBandwidthGroup'

    def soap_INetworkAdapter_setBandwidthGroup(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setBandwidthGroupRequestMsg.typecode)
        return request,INetworkAdapter_setBandwidthGroupResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setBandwidthGroup'
    root[(INetworkAdapter_setBandwidthGroupRequestMsg.typecode.nspname,INetworkAdapter_setBandwidthGroupRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setBandwidthGroup'

    def soap_INetworkAdapter_getProperty(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getPropertyRequestMsg.typecode)
        return request,INetworkAdapter_getPropertyResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getProperty'
    root[(INetworkAdapter_getPropertyRequestMsg.typecode.nspname,INetworkAdapter_getPropertyRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getProperty'

    def soap_INetworkAdapter_setProperty(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_setPropertyRequestMsg.typecode)
        return request,INetworkAdapter_setPropertyResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_setProperty'
    root[(INetworkAdapter_setPropertyRequestMsg.typecode.nspname,INetworkAdapter_setPropertyRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_setProperty'

    def soap_INetworkAdapter_getProperties(self, ps, **kw):
        request = ps.Parse(INetworkAdapter_getPropertiesRequestMsg.typecode)
        return request,INetworkAdapter_getPropertiesResultMsg()

    soapAction[''] = 'soap_INetworkAdapter_getProperties'
    root[(INetworkAdapter_getPropertiesRequestMsg.typecode.nspname,INetworkAdapter_getPropertiesRequestMsg.typecode.pname)] = 'soap_INetworkAdapter_getProperties'

    def soap_ISerialPort_getSlot(self, ps, **kw):
        request = ps.Parse(ISerialPort_getSlotRequestMsg.typecode)
        return request,ISerialPort_getSlotResultMsg()

    soapAction[''] = 'soap_ISerialPort_getSlot'
    root[(ISerialPort_getSlotRequestMsg.typecode.nspname,ISerialPort_getSlotRequestMsg.typecode.pname)] = 'soap_ISerialPort_getSlot'

    def soap_ISerialPort_getEnabled(self, ps, **kw):
        request = ps.Parse(ISerialPort_getEnabledRequestMsg.typecode)
        return request,ISerialPort_getEnabledResultMsg()

    soapAction[''] = 'soap_ISerialPort_getEnabled'
    root[(ISerialPort_getEnabledRequestMsg.typecode.nspname,ISerialPort_getEnabledRequestMsg.typecode.pname)] = 'soap_ISerialPort_getEnabled'

    def soap_ISerialPort_setEnabled(self, ps, **kw):
        request = ps.Parse(ISerialPort_setEnabledRequestMsg.typecode)
        return request,ISerialPort_setEnabledResultMsg()

    soapAction[''] = 'soap_ISerialPort_setEnabled'
    root[(ISerialPort_setEnabledRequestMsg.typecode.nspname,ISerialPort_setEnabledRequestMsg.typecode.pname)] = 'soap_ISerialPort_setEnabled'

    def soap_ISerialPort_getIOBase(self, ps, **kw):
        request = ps.Parse(ISerialPort_getIOBaseRequestMsg.typecode)
        return request,ISerialPort_getIOBaseResultMsg()

    soapAction[''] = 'soap_ISerialPort_getIOBase'
    root[(ISerialPort_getIOBaseRequestMsg.typecode.nspname,ISerialPort_getIOBaseRequestMsg.typecode.pname)] = 'soap_ISerialPort_getIOBase'

    def soap_ISerialPort_setIOBase(self, ps, **kw):
        request = ps.Parse(ISerialPort_setIOBaseRequestMsg.typecode)
        return request,ISerialPort_setIOBaseResultMsg()

    soapAction[''] = 'soap_ISerialPort_setIOBase'
    root[(ISerialPort_setIOBaseRequestMsg.typecode.nspname,ISerialPort_setIOBaseRequestMsg.typecode.pname)] = 'soap_ISerialPort_setIOBase'

    def soap_ISerialPort_getIRQ(self, ps, **kw):
        request = ps.Parse(ISerialPort_getIRQRequestMsg.typecode)
        return request,ISerialPort_getIRQResultMsg()

    soapAction[''] = 'soap_ISerialPort_getIRQ'
    root[(ISerialPort_getIRQRequestMsg.typecode.nspname,ISerialPort_getIRQRequestMsg.typecode.pname)] = 'soap_ISerialPort_getIRQ'

    def soap_ISerialPort_setIRQ(self, ps, **kw):
        request = ps.Parse(ISerialPort_setIRQRequestMsg.typecode)
        return request,ISerialPort_setIRQResultMsg()

    soapAction[''] = 'soap_ISerialPort_setIRQ'
    root[(ISerialPort_setIRQRequestMsg.typecode.nspname,ISerialPort_setIRQRequestMsg.typecode.pname)] = 'soap_ISerialPort_setIRQ'

    def soap_ISerialPort_getHostMode(self, ps, **kw):
        request = ps.Parse(ISerialPort_getHostModeRequestMsg.typecode)
        return request,ISerialPort_getHostModeResultMsg()

    soapAction[''] = 'soap_ISerialPort_getHostMode'
    root[(ISerialPort_getHostModeRequestMsg.typecode.nspname,ISerialPort_getHostModeRequestMsg.typecode.pname)] = 'soap_ISerialPort_getHostMode'

    def soap_ISerialPort_setHostMode(self, ps, **kw):
        request = ps.Parse(ISerialPort_setHostModeRequestMsg.typecode)
        return request,ISerialPort_setHostModeResultMsg()

    soapAction[''] = 'soap_ISerialPort_setHostMode'
    root[(ISerialPort_setHostModeRequestMsg.typecode.nspname,ISerialPort_setHostModeRequestMsg.typecode.pname)] = 'soap_ISerialPort_setHostMode'

    def soap_ISerialPort_getServer(self, ps, **kw):
        request = ps.Parse(ISerialPort_getServerRequestMsg.typecode)
        return request,ISerialPort_getServerResultMsg()

    soapAction[''] = 'soap_ISerialPort_getServer'
    root[(ISerialPort_getServerRequestMsg.typecode.nspname,ISerialPort_getServerRequestMsg.typecode.pname)] = 'soap_ISerialPort_getServer'

    def soap_ISerialPort_setServer(self, ps, **kw):
        request = ps.Parse(ISerialPort_setServerRequestMsg.typecode)
        return request,ISerialPort_setServerResultMsg()

    soapAction[''] = 'soap_ISerialPort_setServer'
    root[(ISerialPort_setServerRequestMsg.typecode.nspname,ISerialPort_setServerRequestMsg.typecode.pname)] = 'soap_ISerialPort_setServer'

    def soap_ISerialPort_getPath(self, ps, **kw):
        request = ps.Parse(ISerialPort_getPathRequestMsg.typecode)
        return request,ISerialPort_getPathResultMsg()

    soapAction[''] = 'soap_ISerialPort_getPath'
    root[(ISerialPort_getPathRequestMsg.typecode.nspname,ISerialPort_getPathRequestMsg.typecode.pname)] = 'soap_ISerialPort_getPath'

    def soap_ISerialPort_setPath(self, ps, **kw):
        request = ps.Parse(ISerialPort_setPathRequestMsg.typecode)
        return request,ISerialPort_setPathResultMsg()

    soapAction[''] = 'soap_ISerialPort_setPath'
    root[(ISerialPort_setPathRequestMsg.typecode.nspname,ISerialPort_setPathRequestMsg.typecode.pname)] = 'soap_ISerialPort_setPath'

    def soap_IParallelPort_getSlot(self, ps, **kw):
        request = ps.Parse(IParallelPort_getSlotRequestMsg.typecode)
        return request,IParallelPort_getSlotResultMsg()

    soapAction[''] = 'soap_IParallelPort_getSlot'
    root[(IParallelPort_getSlotRequestMsg.typecode.nspname,IParallelPort_getSlotRequestMsg.typecode.pname)] = 'soap_IParallelPort_getSlot'

    def soap_IParallelPort_getEnabled(self, ps, **kw):
        request = ps.Parse(IParallelPort_getEnabledRequestMsg.typecode)
        return request,IParallelPort_getEnabledResultMsg()

    soapAction[''] = 'soap_IParallelPort_getEnabled'
    root[(IParallelPort_getEnabledRequestMsg.typecode.nspname,IParallelPort_getEnabledRequestMsg.typecode.pname)] = 'soap_IParallelPort_getEnabled'

    def soap_IParallelPort_setEnabled(self, ps, **kw):
        request = ps.Parse(IParallelPort_setEnabledRequestMsg.typecode)
        return request,IParallelPort_setEnabledResultMsg()

    soapAction[''] = 'soap_IParallelPort_setEnabled'
    root[(IParallelPort_setEnabledRequestMsg.typecode.nspname,IParallelPort_setEnabledRequestMsg.typecode.pname)] = 'soap_IParallelPort_setEnabled'

    def soap_IParallelPort_getIOBase(self, ps, **kw):
        request = ps.Parse(IParallelPort_getIOBaseRequestMsg.typecode)
        return request,IParallelPort_getIOBaseResultMsg()

    soapAction[''] = 'soap_IParallelPort_getIOBase'
    root[(IParallelPort_getIOBaseRequestMsg.typecode.nspname,IParallelPort_getIOBaseRequestMsg.typecode.pname)] = 'soap_IParallelPort_getIOBase'

    def soap_IParallelPort_setIOBase(self, ps, **kw):
        request = ps.Parse(IParallelPort_setIOBaseRequestMsg.typecode)
        return request,IParallelPort_setIOBaseResultMsg()

    soapAction[''] = 'soap_IParallelPort_setIOBase'
    root[(IParallelPort_setIOBaseRequestMsg.typecode.nspname,IParallelPort_setIOBaseRequestMsg.typecode.pname)] = 'soap_IParallelPort_setIOBase'

    def soap_IParallelPort_getIRQ(self, ps, **kw):
        request = ps.Parse(IParallelPort_getIRQRequestMsg.typecode)
        return request,IParallelPort_getIRQResultMsg()

    soapAction[''] = 'soap_IParallelPort_getIRQ'
    root[(IParallelPort_getIRQRequestMsg.typecode.nspname,IParallelPort_getIRQRequestMsg.typecode.pname)] = 'soap_IParallelPort_getIRQ'

    def soap_IParallelPort_setIRQ(self, ps, **kw):
        request = ps.Parse(IParallelPort_setIRQRequestMsg.typecode)
        return request,IParallelPort_setIRQResultMsg()

    soapAction[''] = 'soap_IParallelPort_setIRQ'
    root[(IParallelPort_setIRQRequestMsg.typecode.nspname,IParallelPort_setIRQRequestMsg.typecode.pname)] = 'soap_IParallelPort_setIRQ'

    def soap_IParallelPort_getPath(self, ps, **kw):
        request = ps.Parse(IParallelPort_getPathRequestMsg.typecode)
        return request,IParallelPort_getPathResultMsg()

    soapAction[''] = 'soap_IParallelPort_getPath'
    root[(IParallelPort_getPathRequestMsg.typecode.nspname,IParallelPort_getPathRequestMsg.typecode.pname)] = 'soap_IParallelPort_getPath'

    def soap_IParallelPort_setPath(self, ps, **kw):
        request = ps.Parse(IParallelPort_setPathRequestMsg.typecode)
        return request,IParallelPort_setPathResultMsg()

    soapAction[''] = 'soap_IParallelPort_setPath'
    root[(IParallelPort_setPathRequestMsg.typecode.nspname,IParallelPort_setPathRequestMsg.typecode.pname)] = 'soap_IParallelPort_setPath'

    def soap_IMachineDebugger_getSingleStep(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getSingleStepRequestMsg.typecode)
        return request,IMachineDebugger_getSingleStepResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getSingleStep'
    root[(IMachineDebugger_getSingleStepRequestMsg.typecode.nspname,IMachineDebugger_getSingleStepRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getSingleStep'

    def soap_IMachineDebugger_setSingleStep(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_setSingleStepRequestMsg.typecode)
        return request,IMachineDebugger_setSingleStepResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_setSingleStep'
    root[(IMachineDebugger_setSingleStepRequestMsg.typecode.nspname,IMachineDebugger_setSingleStepRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_setSingleStep'

    def soap_IMachineDebugger_getRecompileUser(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getRecompileUserRequestMsg.typecode)
        return request,IMachineDebugger_getRecompileUserResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getRecompileUser'
    root[(IMachineDebugger_getRecompileUserRequestMsg.typecode.nspname,IMachineDebugger_getRecompileUserRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getRecompileUser'

    def soap_IMachineDebugger_setRecompileUser(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_setRecompileUserRequestMsg.typecode)
        return request,IMachineDebugger_setRecompileUserResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_setRecompileUser'
    root[(IMachineDebugger_setRecompileUserRequestMsg.typecode.nspname,IMachineDebugger_setRecompileUserRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_setRecompileUser'

    def soap_IMachineDebugger_getRecompileSupervisor(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getRecompileSupervisorRequestMsg.typecode)
        return request,IMachineDebugger_getRecompileSupervisorResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getRecompileSupervisor'
    root[(IMachineDebugger_getRecompileSupervisorRequestMsg.typecode.nspname,IMachineDebugger_getRecompileSupervisorRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getRecompileSupervisor'

    def soap_IMachineDebugger_setRecompileSupervisor(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_setRecompileSupervisorRequestMsg.typecode)
        return request,IMachineDebugger_setRecompileSupervisorResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_setRecompileSupervisor'
    root[(IMachineDebugger_setRecompileSupervisorRequestMsg.typecode.nspname,IMachineDebugger_setRecompileSupervisorRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_setRecompileSupervisor'

    def soap_IMachineDebugger_getExecuteAllInIEM(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getExecuteAllInIEMRequestMsg.typecode)
        return request,IMachineDebugger_getExecuteAllInIEMResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getExecuteAllInIEM'
    root[(IMachineDebugger_getExecuteAllInIEMRequestMsg.typecode.nspname,IMachineDebugger_getExecuteAllInIEMRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getExecuteAllInIEM'

    def soap_IMachineDebugger_setExecuteAllInIEM(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_setExecuteAllInIEMRequestMsg.typecode)
        return request,IMachineDebugger_setExecuteAllInIEMResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_setExecuteAllInIEM'
    root[(IMachineDebugger_setExecuteAllInIEMRequestMsg.typecode.nspname,IMachineDebugger_setExecuteAllInIEMRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_setExecuteAllInIEM'

    def soap_IMachineDebugger_getPATMEnabled(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getPATMEnabledRequestMsg.typecode)
        return request,IMachineDebugger_getPATMEnabledResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getPATMEnabled'
    root[(IMachineDebugger_getPATMEnabledRequestMsg.typecode.nspname,IMachineDebugger_getPATMEnabledRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getPATMEnabled'

    def soap_IMachineDebugger_setPATMEnabled(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_setPATMEnabledRequestMsg.typecode)
        return request,IMachineDebugger_setPATMEnabledResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_setPATMEnabled'
    root[(IMachineDebugger_setPATMEnabledRequestMsg.typecode.nspname,IMachineDebugger_setPATMEnabledRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_setPATMEnabled'

    def soap_IMachineDebugger_getCSAMEnabled(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getCSAMEnabledRequestMsg.typecode)
        return request,IMachineDebugger_getCSAMEnabledResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getCSAMEnabled'
    root[(IMachineDebugger_getCSAMEnabledRequestMsg.typecode.nspname,IMachineDebugger_getCSAMEnabledRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getCSAMEnabled'

    def soap_IMachineDebugger_setCSAMEnabled(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_setCSAMEnabledRequestMsg.typecode)
        return request,IMachineDebugger_setCSAMEnabledResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_setCSAMEnabled'
    root[(IMachineDebugger_setCSAMEnabledRequestMsg.typecode.nspname,IMachineDebugger_setCSAMEnabledRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_setCSAMEnabled'

    def soap_IMachineDebugger_getLogEnabled(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getLogEnabledRequestMsg.typecode)
        return request,IMachineDebugger_getLogEnabledResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getLogEnabled'
    root[(IMachineDebugger_getLogEnabledRequestMsg.typecode.nspname,IMachineDebugger_getLogEnabledRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getLogEnabled'

    def soap_IMachineDebugger_setLogEnabled(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_setLogEnabledRequestMsg.typecode)
        return request,IMachineDebugger_setLogEnabledResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_setLogEnabled'
    root[(IMachineDebugger_setLogEnabledRequestMsg.typecode.nspname,IMachineDebugger_setLogEnabledRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_setLogEnabled'

    def soap_IMachineDebugger_getLogDbgFlags(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getLogDbgFlagsRequestMsg.typecode)
        return request,IMachineDebugger_getLogDbgFlagsResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getLogDbgFlags'
    root[(IMachineDebugger_getLogDbgFlagsRequestMsg.typecode.nspname,IMachineDebugger_getLogDbgFlagsRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getLogDbgFlags'

    def soap_IMachineDebugger_getLogDbgGroups(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getLogDbgGroupsRequestMsg.typecode)
        return request,IMachineDebugger_getLogDbgGroupsResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getLogDbgGroups'
    root[(IMachineDebugger_getLogDbgGroupsRequestMsg.typecode.nspname,IMachineDebugger_getLogDbgGroupsRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getLogDbgGroups'

    def soap_IMachineDebugger_getLogDbgDestinations(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getLogDbgDestinationsRequestMsg.typecode)
        return request,IMachineDebugger_getLogDbgDestinationsResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getLogDbgDestinations'
    root[(IMachineDebugger_getLogDbgDestinationsRequestMsg.typecode.nspname,IMachineDebugger_getLogDbgDestinationsRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getLogDbgDestinations'

    def soap_IMachineDebugger_getLogRelFlags(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getLogRelFlagsRequestMsg.typecode)
        return request,IMachineDebugger_getLogRelFlagsResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getLogRelFlags'
    root[(IMachineDebugger_getLogRelFlagsRequestMsg.typecode.nspname,IMachineDebugger_getLogRelFlagsRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getLogRelFlags'

    def soap_IMachineDebugger_getLogRelGroups(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getLogRelGroupsRequestMsg.typecode)
        return request,IMachineDebugger_getLogRelGroupsResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getLogRelGroups'
    root[(IMachineDebugger_getLogRelGroupsRequestMsg.typecode.nspname,IMachineDebugger_getLogRelGroupsRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getLogRelGroups'

    def soap_IMachineDebugger_getLogRelDestinations(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getLogRelDestinationsRequestMsg.typecode)
        return request,IMachineDebugger_getLogRelDestinationsResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getLogRelDestinations'
    root[(IMachineDebugger_getLogRelDestinationsRequestMsg.typecode.nspname,IMachineDebugger_getLogRelDestinationsRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getLogRelDestinations'

    def soap_IMachineDebugger_getHWVirtExEnabled(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getHWVirtExEnabledRequestMsg.typecode)
        return request,IMachineDebugger_getHWVirtExEnabledResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getHWVirtExEnabled'
    root[(IMachineDebugger_getHWVirtExEnabledRequestMsg.typecode.nspname,IMachineDebugger_getHWVirtExEnabledRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getHWVirtExEnabled'

    def soap_IMachineDebugger_getHWVirtExNestedPagingEnabled(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getHWVirtExNestedPagingEnabledRequestMsg.typecode)
        return request,IMachineDebugger_getHWVirtExNestedPagingEnabledResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getHWVirtExNestedPagingEnabled'
    root[(IMachineDebugger_getHWVirtExNestedPagingEnabledRequestMsg.typecode.nspname,IMachineDebugger_getHWVirtExNestedPagingEnabledRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getHWVirtExNestedPagingEnabled'

    def soap_IMachineDebugger_getHWVirtExVPIDEnabled(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getHWVirtExVPIDEnabledRequestMsg.typecode)
        return request,IMachineDebugger_getHWVirtExVPIDEnabledResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getHWVirtExVPIDEnabled'
    root[(IMachineDebugger_getHWVirtExVPIDEnabledRequestMsg.typecode.nspname,IMachineDebugger_getHWVirtExVPIDEnabledRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getHWVirtExVPIDEnabled'

    def soap_IMachineDebugger_getHWVirtExUXEnabled(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getHWVirtExUXEnabledRequestMsg.typecode)
        return request,IMachineDebugger_getHWVirtExUXEnabledResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getHWVirtExUXEnabled'
    root[(IMachineDebugger_getHWVirtExUXEnabledRequestMsg.typecode.nspname,IMachineDebugger_getHWVirtExUXEnabledRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getHWVirtExUXEnabled'

    def soap_IMachineDebugger_getOSName(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getOSNameRequestMsg.typecode)
        return request,IMachineDebugger_getOSNameResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getOSName'
    root[(IMachineDebugger_getOSNameRequestMsg.typecode.nspname,IMachineDebugger_getOSNameRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getOSName'

    def soap_IMachineDebugger_getOSVersion(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getOSVersionRequestMsg.typecode)
        return request,IMachineDebugger_getOSVersionResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getOSVersion'
    root[(IMachineDebugger_getOSVersionRequestMsg.typecode.nspname,IMachineDebugger_getOSVersionRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getOSVersion'

    def soap_IMachineDebugger_getPAEEnabled(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getPAEEnabledRequestMsg.typecode)
        return request,IMachineDebugger_getPAEEnabledResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getPAEEnabled'
    root[(IMachineDebugger_getPAEEnabledRequestMsg.typecode.nspname,IMachineDebugger_getPAEEnabledRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getPAEEnabled'

    def soap_IMachineDebugger_getVirtualTimeRate(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getVirtualTimeRateRequestMsg.typecode)
        return request,IMachineDebugger_getVirtualTimeRateResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getVirtualTimeRate'
    root[(IMachineDebugger_getVirtualTimeRateRequestMsg.typecode.nspname,IMachineDebugger_getVirtualTimeRateRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getVirtualTimeRate'

    def soap_IMachineDebugger_setVirtualTimeRate(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_setVirtualTimeRateRequestMsg.typecode)
        return request,IMachineDebugger_setVirtualTimeRateResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_setVirtualTimeRate'
    root[(IMachineDebugger_setVirtualTimeRateRequestMsg.typecode.nspname,IMachineDebugger_setVirtualTimeRateRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_setVirtualTimeRate'

    def soap_IMachineDebugger_dumpGuestCore(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_dumpGuestCoreRequestMsg.typecode)
        return request,IMachineDebugger_dumpGuestCoreResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_dumpGuestCore'
    root[(IMachineDebugger_dumpGuestCoreRequestMsg.typecode.nspname,IMachineDebugger_dumpGuestCoreRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_dumpGuestCore'

    def soap_IMachineDebugger_dumpHostProcessCore(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_dumpHostProcessCoreRequestMsg.typecode)
        return request,IMachineDebugger_dumpHostProcessCoreResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_dumpHostProcessCore'
    root[(IMachineDebugger_dumpHostProcessCoreRequestMsg.typecode.nspname,IMachineDebugger_dumpHostProcessCoreRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_dumpHostProcessCore'

    def soap_IMachineDebugger_info(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_infoRequestMsg.typecode)
        return request,IMachineDebugger_infoResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_info'
    root[(IMachineDebugger_infoRequestMsg.typecode.nspname,IMachineDebugger_infoRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_info'

    def soap_IMachineDebugger_injectNMI(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_injectNMIRequestMsg.typecode)
        return request,IMachineDebugger_injectNMIResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_injectNMI'
    root[(IMachineDebugger_injectNMIRequestMsg.typecode.nspname,IMachineDebugger_injectNMIRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_injectNMI'

    def soap_IMachineDebugger_modifyLogGroups(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_modifyLogGroupsRequestMsg.typecode)
        return request,IMachineDebugger_modifyLogGroupsResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_modifyLogGroups'
    root[(IMachineDebugger_modifyLogGroupsRequestMsg.typecode.nspname,IMachineDebugger_modifyLogGroupsRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_modifyLogGroups'

    def soap_IMachineDebugger_modifyLogFlags(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_modifyLogFlagsRequestMsg.typecode)
        return request,IMachineDebugger_modifyLogFlagsResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_modifyLogFlags'
    root[(IMachineDebugger_modifyLogFlagsRequestMsg.typecode.nspname,IMachineDebugger_modifyLogFlagsRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_modifyLogFlags'

    def soap_IMachineDebugger_modifyLogDestinations(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_modifyLogDestinationsRequestMsg.typecode)
        return request,IMachineDebugger_modifyLogDestinationsResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_modifyLogDestinations'
    root[(IMachineDebugger_modifyLogDestinationsRequestMsg.typecode.nspname,IMachineDebugger_modifyLogDestinationsRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_modifyLogDestinations'

    def soap_IMachineDebugger_readPhysicalMemory(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_readPhysicalMemoryRequestMsg.typecode)
        return request,IMachineDebugger_readPhysicalMemoryResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_readPhysicalMemory'
    root[(IMachineDebugger_readPhysicalMemoryRequestMsg.typecode.nspname,IMachineDebugger_readPhysicalMemoryRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_readPhysicalMemory'

    def soap_IMachineDebugger_writePhysicalMemory(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_writePhysicalMemoryRequestMsg.typecode)
        return request,IMachineDebugger_writePhysicalMemoryResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_writePhysicalMemory'
    root[(IMachineDebugger_writePhysicalMemoryRequestMsg.typecode.nspname,IMachineDebugger_writePhysicalMemoryRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_writePhysicalMemory'

    def soap_IMachineDebugger_readVirtualMemory(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_readVirtualMemoryRequestMsg.typecode)
        return request,IMachineDebugger_readVirtualMemoryResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_readVirtualMemory'
    root[(IMachineDebugger_readVirtualMemoryRequestMsg.typecode.nspname,IMachineDebugger_readVirtualMemoryRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_readVirtualMemory'

    def soap_IMachineDebugger_writeVirtualMemory(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_writeVirtualMemoryRequestMsg.typecode)
        return request,IMachineDebugger_writeVirtualMemoryResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_writeVirtualMemory'
    root[(IMachineDebugger_writeVirtualMemoryRequestMsg.typecode.nspname,IMachineDebugger_writeVirtualMemoryRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_writeVirtualMemory'

    def soap_IMachineDebugger_loadPlugIn(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_loadPlugInRequestMsg.typecode)
        return request,IMachineDebugger_loadPlugInResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_loadPlugIn'
    root[(IMachineDebugger_loadPlugInRequestMsg.typecode.nspname,IMachineDebugger_loadPlugInRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_loadPlugIn'

    def soap_IMachineDebugger_unloadPlugIn(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_unloadPlugInRequestMsg.typecode)
        return request,IMachineDebugger_unloadPlugInResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_unloadPlugIn'
    root[(IMachineDebugger_unloadPlugInRequestMsg.typecode.nspname,IMachineDebugger_unloadPlugInRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_unloadPlugIn'

    def soap_IMachineDebugger_detectOS(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_detectOSRequestMsg.typecode)
        return request,IMachineDebugger_detectOSResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_detectOS'
    root[(IMachineDebugger_detectOSRequestMsg.typecode.nspname,IMachineDebugger_detectOSRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_detectOS'

    def soap_IMachineDebugger_queryOSKernelLog(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_queryOSKernelLogRequestMsg.typecode)
        return request,IMachineDebugger_queryOSKernelLogResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_queryOSKernelLog'
    root[(IMachineDebugger_queryOSKernelLogRequestMsg.typecode.nspname,IMachineDebugger_queryOSKernelLogRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_queryOSKernelLog'

    def soap_IMachineDebugger_getRegister(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getRegisterRequestMsg.typecode)
        return request,IMachineDebugger_getRegisterResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getRegister'
    root[(IMachineDebugger_getRegisterRequestMsg.typecode.nspname,IMachineDebugger_getRegisterRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getRegister'

    def soap_IMachineDebugger_getRegisters(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getRegistersRequestMsg.typecode)
        return request,IMachineDebugger_getRegistersResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getRegisters'
    root[(IMachineDebugger_getRegistersRequestMsg.typecode.nspname,IMachineDebugger_getRegistersRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getRegisters'

    def soap_IMachineDebugger_setRegister(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_setRegisterRequestMsg.typecode)
        return request,IMachineDebugger_setRegisterResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_setRegister'
    root[(IMachineDebugger_setRegisterRequestMsg.typecode.nspname,IMachineDebugger_setRegisterRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_setRegister'

    def soap_IMachineDebugger_setRegisters(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_setRegistersRequestMsg.typecode)
        return request,IMachineDebugger_setRegistersResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_setRegisters'
    root[(IMachineDebugger_setRegistersRequestMsg.typecode.nspname,IMachineDebugger_setRegistersRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_setRegisters'

    def soap_IMachineDebugger_dumpGuestStack(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_dumpGuestStackRequestMsg.typecode)
        return request,IMachineDebugger_dumpGuestStackResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_dumpGuestStack'
    root[(IMachineDebugger_dumpGuestStackRequestMsg.typecode.nspname,IMachineDebugger_dumpGuestStackRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_dumpGuestStack'

    def soap_IMachineDebugger_resetStats(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_resetStatsRequestMsg.typecode)
        return request,IMachineDebugger_resetStatsResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_resetStats'
    root[(IMachineDebugger_resetStatsRequestMsg.typecode.nspname,IMachineDebugger_resetStatsRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_resetStats'

    def soap_IMachineDebugger_dumpStats(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_dumpStatsRequestMsg.typecode)
        return request,IMachineDebugger_dumpStatsResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_dumpStats'
    root[(IMachineDebugger_dumpStatsRequestMsg.typecode.nspname,IMachineDebugger_dumpStatsRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_dumpStats'

    def soap_IMachineDebugger_getStats(self, ps, **kw):
        request = ps.Parse(IMachineDebugger_getStatsRequestMsg.typecode)
        return request,IMachineDebugger_getStatsResultMsg()

    soapAction[''] = 'soap_IMachineDebugger_getStats'
    root[(IMachineDebugger_getStatsRequestMsg.typecode.nspname,IMachineDebugger_getStatsRequestMsg.typecode.pname)] = 'soap_IMachineDebugger_getStats'

    def soap_IUSBDeviceFilters_getDeviceFilters(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilters_getDeviceFiltersRequestMsg.typecode)
        return request,IUSBDeviceFilters_getDeviceFiltersResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilters_getDeviceFilters'
    root[(IUSBDeviceFilters_getDeviceFiltersRequestMsg.typecode.nspname,IUSBDeviceFilters_getDeviceFiltersRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilters_getDeviceFilters'

    def soap_IUSBDeviceFilters_createDeviceFilter(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilters_createDeviceFilterRequestMsg.typecode)
        return request,IUSBDeviceFilters_createDeviceFilterResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilters_createDeviceFilter'
    root[(IUSBDeviceFilters_createDeviceFilterRequestMsg.typecode.nspname,IUSBDeviceFilters_createDeviceFilterRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilters_createDeviceFilter'

    def soap_IUSBDeviceFilters_insertDeviceFilter(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilters_insertDeviceFilterRequestMsg.typecode)
        return request,IUSBDeviceFilters_insertDeviceFilterResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilters_insertDeviceFilter'
    root[(IUSBDeviceFilters_insertDeviceFilterRequestMsg.typecode.nspname,IUSBDeviceFilters_insertDeviceFilterRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilters_insertDeviceFilter'

    def soap_IUSBDeviceFilters_removeDeviceFilter(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilters_removeDeviceFilterRequestMsg.typecode)
        return request,IUSBDeviceFilters_removeDeviceFilterResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilters_removeDeviceFilter'
    root[(IUSBDeviceFilters_removeDeviceFilterRequestMsg.typecode.nspname,IUSBDeviceFilters_removeDeviceFilterRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilters_removeDeviceFilter'

    def soap_IUSBController_getName(self, ps, **kw):
        request = ps.Parse(IUSBController_getNameRequestMsg.typecode)
        return request,IUSBController_getNameResultMsg()

    soapAction[''] = 'soap_IUSBController_getName'
    root[(IUSBController_getNameRequestMsg.typecode.nspname,IUSBController_getNameRequestMsg.typecode.pname)] = 'soap_IUSBController_getName'

    def soap_IUSBController_setName(self, ps, **kw):
        request = ps.Parse(IUSBController_setNameRequestMsg.typecode)
        return request,IUSBController_setNameResultMsg()

    soapAction[''] = 'soap_IUSBController_setName'
    root[(IUSBController_setNameRequestMsg.typecode.nspname,IUSBController_setNameRequestMsg.typecode.pname)] = 'soap_IUSBController_setName'

    def soap_IUSBController_getType(self, ps, **kw):
        request = ps.Parse(IUSBController_getTypeRequestMsg.typecode)
        return request,IUSBController_getTypeResultMsg()

    soapAction[''] = 'soap_IUSBController_getType'
    root[(IUSBController_getTypeRequestMsg.typecode.nspname,IUSBController_getTypeRequestMsg.typecode.pname)] = 'soap_IUSBController_getType'

    def soap_IUSBController_setType(self, ps, **kw):
        request = ps.Parse(IUSBController_setTypeRequestMsg.typecode)
        return request,IUSBController_setTypeResultMsg()

    soapAction[''] = 'soap_IUSBController_setType'
    root[(IUSBController_setTypeRequestMsg.typecode.nspname,IUSBController_setTypeRequestMsg.typecode.pname)] = 'soap_IUSBController_setType'

    def soap_IUSBController_getUSBStandard(self, ps, **kw):
        request = ps.Parse(IUSBController_getUSBStandardRequestMsg.typecode)
        return request,IUSBController_getUSBStandardResultMsg()

    soapAction[''] = 'soap_IUSBController_getUSBStandard'
    root[(IUSBController_getUSBStandardRequestMsg.typecode.nspname,IUSBController_getUSBStandardRequestMsg.typecode.pname)] = 'soap_IUSBController_getUSBStandard'

    def soap_IUSBDevice_getId(self, ps, **kw):
        request = ps.Parse(IUSBDevice_getIdRequestMsg.typecode)
        return request,IUSBDevice_getIdResultMsg()

    soapAction[''] = 'soap_IUSBDevice_getId'
    root[(IUSBDevice_getIdRequestMsg.typecode.nspname,IUSBDevice_getIdRequestMsg.typecode.pname)] = 'soap_IUSBDevice_getId'

    def soap_IUSBDevice_getVendorId(self, ps, **kw):
        request = ps.Parse(IUSBDevice_getVendorIdRequestMsg.typecode)
        return request,IUSBDevice_getVendorIdResultMsg()

    soapAction[''] = 'soap_IUSBDevice_getVendorId'
    root[(IUSBDevice_getVendorIdRequestMsg.typecode.nspname,IUSBDevice_getVendorIdRequestMsg.typecode.pname)] = 'soap_IUSBDevice_getVendorId'

    def soap_IUSBDevice_getProductId(self, ps, **kw):
        request = ps.Parse(IUSBDevice_getProductIdRequestMsg.typecode)
        return request,IUSBDevice_getProductIdResultMsg()

    soapAction[''] = 'soap_IUSBDevice_getProductId'
    root[(IUSBDevice_getProductIdRequestMsg.typecode.nspname,IUSBDevice_getProductIdRequestMsg.typecode.pname)] = 'soap_IUSBDevice_getProductId'

    def soap_IUSBDevice_getRevision(self, ps, **kw):
        request = ps.Parse(IUSBDevice_getRevisionRequestMsg.typecode)
        return request,IUSBDevice_getRevisionResultMsg()

    soapAction[''] = 'soap_IUSBDevice_getRevision'
    root[(IUSBDevice_getRevisionRequestMsg.typecode.nspname,IUSBDevice_getRevisionRequestMsg.typecode.pname)] = 'soap_IUSBDevice_getRevision'

    def soap_IUSBDevice_getManufacturer(self, ps, **kw):
        request = ps.Parse(IUSBDevice_getManufacturerRequestMsg.typecode)
        return request,IUSBDevice_getManufacturerResultMsg()

    soapAction[''] = 'soap_IUSBDevice_getManufacturer'
    root[(IUSBDevice_getManufacturerRequestMsg.typecode.nspname,IUSBDevice_getManufacturerRequestMsg.typecode.pname)] = 'soap_IUSBDevice_getManufacturer'

    def soap_IUSBDevice_getProduct(self, ps, **kw):
        request = ps.Parse(IUSBDevice_getProductRequestMsg.typecode)
        return request,IUSBDevice_getProductResultMsg()

    soapAction[''] = 'soap_IUSBDevice_getProduct'
    root[(IUSBDevice_getProductRequestMsg.typecode.nspname,IUSBDevice_getProductRequestMsg.typecode.pname)] = 'soap_IUSBDevice_getProduct'

    def soap_IUSBDevice_getSerialNumber(self, ps, **kw):
        request = ps.Parse(IUSBDevice_getSerialNumberRequestMsg.typecode)
        return request,IUSBDevice_getSerialNumberResultMsg()

    soapAction[''] = 'soap_IUSBDevice_getSerialNumber'
    root[(IUSBDevice_getSerialNumberRequestMsg.typecode.nspname,IUSBDevice_getSerialNumberRequestMsg.typecode.pname)] = 'soap_IUSBDevice_getSerialNumber'

    def soap_IUSBDevice_getAddress(self, ps, **kw):
        request = ps.Parse(IUSBDevice_getAddressRequestMsg.typecode)
        return request,IUSBDevice_getAddressResultMsg()

    soapAction[''] = 'soap_IUSBDevice_getAddress'
    root[(IUSBDevice_getAddressRequestMsg.typecode.nspname,IUSBDevice_getAddressRequestMsg.typecode.pname)] = 'soap_IUSBDevice_getAddress'

    def soap_IUSBDevice_getPort(self, ps, **kw):
        request = ps.Parse(IUSBDevice_getPortRequestMsg.typecode)
        return request,IUSBDevice_getPortResultMsg()

    soapAction[''] = 'soap_IUSBDevice_getPort'
    root[(IUSBDevice_getPortRequestMsg.typecode.nspname,IUSBDevice_getPortRequestMsg.typecode.pname)] = 'soap_IUSBDevice_getPort'

    def soap_IUSBDevice_getVersion(self, ps, **kw):
        request = ps.Parse(IUSBDevice_getVersionRequestMsg.typecode)
        return request,IUSBDevice_getVersionResultMsg()

    soapAction[''] = 'soap_IUSBDevice_getVersion'
    root[(IUSBDevice_getVersionRequestMsg.typecode.nspname,IUSBDevice_getVersionRequestMsg.typecode.pname)] = 'soap_IUSBDevice_getVersion'

    def soap_IUSBDevice_getPortVersion(self, ps, **kw):
        request = ps.Parse(IUSBDevice_getPortVersionRequestMsg.typecode)
        return request,IUSBDevice_getPortVersionResultMsg()

    soapAction[''] = 'soap_IUSBDevice_getPortVersion'
    root[(IUSBDevice_getPortVersionRequestMsg.typecode.nspname,IUSBDevice_getPortVersionRequestMsg.typecode.pname)] = 'soap_IUSBDevice_getPortVersion'

    def soap_IUSBDevice_getSpeed(self, ps, **kw):
        request = ps.Parse(IUSBDevice_getSpeedRequestMsg.typecode)
        return request,IUSBDevice_getSpeedResultMsg()

    soapAction[''] = 'soap_IUSBDevice_getSpeed'
    root[(IUSBDevice_getSpeedRequestMsg.typecode.nspname,IUSBDevice_getSpeedRequestMsg.typecode.pname)] = 'soap_IUSBDevice_getSpeed'

    def soap_IUSBDevice_getRemote(self, ps, **kw):
        request = ps.Parse(IUSBDevice_getRemoteRequestMsg.typecode)
        return request,IUSBDevice_getRemoteResultMsg()

    soapAction[''] = 'soap_IUSBDevice_getRemote'
    root[(IUSBDevice_getRemoteRequestMsg.typecode.nspname,IUSBDevice_getRemoteRequestMsg.typecode.pname)] = 'soap_IUSBDevice_getRemote'

    def soap_IUSBDevice_getDeviceInfo(self, ps, **kw):
        request = ps.Parse(IUSBDevice_getDeviceInfoRequestMsg.typecode)
        return request,IUSBDevice_getDeviceInfoResultMsg()

    soapAction[''] = 'soap_IUSBDevice_getDeviceInfo'
    root[(IUSBDevice_getDeviceInfoRequestMsg.typecode.nspname,IUSBDevice_getDeviceInfoRequestMsg.typecode.pname)] = 'soap_IUSBDevice_getDeviceInfo'

    def soap_IUSBDeviceFilter_getName(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_getNameRequestMsg.typecode)
        return request,IUSBDeviceFilter_getNameResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_getName'
    root[(IUSBDeviceFilter_getNameRequestMsg.typecode.nspname,IUSBDeviceFilter_getNameRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_getName'

    def soap_IUSBDeviceFilter_setName(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_setNameRequestMsg.typecode)
        return request,IUSBDeviceFilter_setNameResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_setName'
    root[(IUSBDeviceFilter_setNameRequestMsg.typecode.nspname,IUSBDeviceFilter_setNameRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_setName'

    def soap_IUSBDeviceFilter_getActive(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_getActiveRequestMsg.typecode)
        return request,IUSBDeviceFilter_getActiveResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_getActive'
    root[(IUSBDeviceFilter_getActiveRequestMsg.typecode.nspname,IUSBDeviceFilter_getActiveRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_getActive'

    def soap_IUSBDeviceFilter_setActive(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_setActiveRequestMsg.typecode)
        return request,IUSBDeviceFilter_setActiveResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_setActive'
    root[(IUSBDeviceFilter_setActiveRequestMsg.typecode.nspname,IUSBDeviceFilter_setActiveRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_setActive'

    def soap_IUSBDeviceFilter_getVendorId(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_getVendorIdRequestMsg.typecode)
        return request,IUSBDeviceFilter_getVendorIdResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_getVendorId'
    root[(IUSBDeviceFilter_getVendorIdRequestMsg.typecode.nspname,IUSBDeviceFilter_getVendorIdRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_getVendorId'

    def soap_IUSBDeviceFilter_setVendorId(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_setVendorIdRequestMsg.typecode)
        return request,IUSBDeviceFilter_setVendorIdResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_setVendorId'
    root[(IUSBDeviceFilter_setVendorIdRequestMsg.typecode.nspname,IUSBDeviceFilter_setVendorIdRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_setVendorId'

    def soap_IUSBDeviceFilter_getProductId(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_getProductIdRequestMsg.typecode)
        return request,IUSBDeviceFilter_getProductIdResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_getProductId'
    root[(IUSBDeviceFilter_getProductIdRequestMsg.typecode.nspname,IUSBDeviceFilter_getProductIdRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_getProductId'

    def soap_IUSBDeviceFilter_setProductId(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_setProductIdRequestMsg.typecode)
        return request,IUSBDeviceFilter_setProductIdResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_setProductId'
    root[(IUSBDeviceFilter_setProductIdRequestMsg.typecode.nspname,IUSBDeviceFilter_setProductIdRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_setProductId'

    def soap_IUSBDeviceFilter_getRevision(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_getRevisionRequestMsg.typecode)
        return request,IUSBDeviceFilter_getRevisionResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_getRevision'
    root[(IUSBDeviceFilter_getRevisionRequestMsg.typecode.nspname,IUSBDeviceFilter_getRevisionRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_getRevision'

    def soap_IUSBDeviceFilter_setRevision(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_setRevisionRequestMsg.typecode)
        return request,IUSBDeviceFilter_setRevisionResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_setRevision'
    root[(IUSBDeviceFilter_setRevisionRequestMsg.typecode.nspname,IUSBDeviceFilter_setRevisionRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_setRevision'

    def soap_IUSBDeviceFilter_getManufacturer(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_getManufacturerRequestMsg.typecode)
        return request,IUSBDeviceFilter_getManufacturerResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_getManufacturer'
    root[(IUSBDeviceFilter_getManufacturerRequestMsg.typecode.nspname,IUSBDeviceFilter_getManufacturerRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_getManufacturer'

    def soap_IUSBDeviceFilter_setManufacturer(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_setManufacturerRequestMsg.typecode)
        return request,IUSBDeviceFilter_setManufacturerResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_setManufacturer'
    root[(IUSBDeviceFilter_setManufacturerRequestMsg.typecode.nspname,IUSBDeviceFilter_setManufacturerRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_setManufacturer'

    def soap_IUSBDeviceFilter_getProduct(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_getProductRequestMsg.typecode)
        return request,IUSBDeviceFilter_getProductResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_getProduct'
    root[(IUSBDeviceFilter_getProductRequestMsg.typecode.nspname,IUSBDeviceFilter_getProductRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_getProduct'

    def soap_IUSBDeviceFilter_setProduct(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_setProductRequestMsg.typecode)
        return request,IUSBDeviceFilter_setProductResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_setProduct'
    root[(IUSBDeviceFilter_setProductRequestMsg.typecode.nspname,IUSBDeviceFilter_setProductRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_setProduct'

    def soap_IUSBDeviceFilter_getSerialNumber(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_getSerialNumberRequestMsg.typecode)
        return request,IUSBDeviceFilter_getSerialNumberResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_getSerialNumber'
    root[(IUSBDeviceFilter_getSerialNumberRequestMsg.typecode.nspname,IUSBDeviceFilter_getSerialNumberRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_getSerialNumber'

    def soap_IUSBDeviceFilter_setSerialNumber(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_setSerialNumberRequestMsg.typecode)
        return request,IUSBDeviceFilter_setSerialNumberResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_setSerialNumber'
    root[(IUSBDeviceFilter_setSerialNumberRequestMsg.typecode.nspname,IUSBDeviceFilter_setSerialNumberRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_setSerialNumber'

    def soap_IUSBDeviceFilter_getPort(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_getPortRequestMsg.typecode)
        return request,IUSBDeviceFilter_getPortResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_getPort'
    root[(IUSBDeviceFilter_getPortRequestMsg.typecode.nspname,IUSBDeviceFilter_getPortRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_getPort'

    def soap_IUSBDeviceFilter_setPort(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_setPortRequestMsg.typecode)
        return request,IUSBDeviceFilter_setPortResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_setPort'
    root[(IUSBDeviceFilter_setPortRequestMsg.typecode.nspname,IUSBDeviceFilter_setPortRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_setPort'

    def soap_IUSBDeviceFilter_getRemote(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_getRemoteRequestMsg.typecode)
        return request,IUSBDeviceFilter_getRemoteResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_getRemote'
    root[(IUSBDeviceFilter_getRemoteRequestMsg.typecode.nspname,IUSBDeviceFilter_getRemoteRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_getRemote'

    def soap_IUSBDeviceFilter_setRemote(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_setRemoteRequestMsg.typecode)
        return request,IUSBDeviceFilter_setRemoteResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_setRemote'
    root[(IUSBDeviceFilter_setRemoteRequestMsg.typecode.nspname,IUSBDeviceFilter_setRemoteRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_setRemote'

    def soap_IUSBDeviceFilter_getMaskedInterfaces(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_getMaskedInterfacesRequestMsg.typecode)
        return request,IUSBDeviceFilter_getMaskedInterfacesResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_getMaskedInterfaces'
    root[(IUSBDeviceFilter_getMaskedInterfacesRequestMsg.typecode.nspname,IUSBDeviceFilter_getMaskedInterfacesRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_getMaskedInterfaces'

    def soap_IUSBDeviceFilter_setMaskedInterfaces(self, ps, **kw):
        request = ps.Parse(IUSBDeviceFilter_setMaskedInterfacesRequestMsg.typecode)
        return request,IUSBDeviceFilter_setMaskedInterfacesResultMsg()

    soapAction[''] = 'soap_IUSBDeviceFilter_setMaskedInterfaces'
    root[(IUSBDeviceFilter_setMaskedInterfacesRequestMsg.typecode.nspname,IUSBDeviceFilter_setMaskedInterfacesRequestMsg.typecode.pname)] = 'soap_IUSBDeviceFilter_setMaskedInterfaces'

    def soap_IHostUSBDevice_getState(self, ps, **kw):
        request = ps.Parse(IHostUSBDevice_getStateRequestMsg.typecode)
        return request,IHostUSBDevice_getStateResultMsg()

    soapAction[''] = 'soap_IHostUSBDevice_getState'
    root[(IHostUSBDevice_getStateRequestMsg.typecode.nspname,IHostUSBDevice_getStateRequestMsg.typecode.pname)] = 'soap_IHostUSBDevice_getState'

    def soap_IHostUSBDeviceFilter_getAction(self, ps, **kw):
        request = ps.Parse(IHostUSBDeviceFilter_getActionRequestMsg.typecode)
        return request,IHostUSBDeviceFilter_getActionResultMsg()

    soapAction[''] = 'soap_IHostUSBDeviceFilter_getAction'
    root[(IHostUSBDeviceFilter_getActionRequestMsg.typecode.nspname,IHostUSBDeviceFilter_getActionRequestMsg.typecode.pname)] = 'soap_IHostUSBDeviceFilter_getAction'

    def soap_IHostUSBDeviceFilter_setAction(self, ps, **kw):
        request = ps.Parse(IHostUSBDeviceFilter_setActionRequestMsg.typecode)
        return request,IHostUSBDeviceFilter_setActionResultMsg()

    soapAction[''] = 'soap_IHostUSBDeviceFilter_setAction'
    root[(IHostUSBDeviceFilter_setActionRequestMsg.typecode.nspname,IHostUSBDeviceFilter_setActionRequestMsg.typecode.pname)] = 'soap_IHostUSBDeviceFilter_setAction'

    def soap_IAudioAdapter_getEnabled(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_getEnabledRequestMsg.typecode)
        return request,IAudioAdapter_getEnabledResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_getEnabled'
    root[(IAudioAdapter_getEnabledRequestMsg.typecode.nspname,IAudioAdapter_getEnabledRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_getEnabled'

    def soap_IAudioAdapter_setEnabled(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_setEnabledRequestMsg.typecode)
        return request,IAudioAdapter_setEnabledResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_setEnabled'
    root[(IAudioAdapter_setEnabledRequestMsg.typecode.nspname,IAudioAdapter_setEnabledRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_setEnabled'

    def soap_IAudioAdapter_getEnabledIn(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_getEnabledInRequestMsg.typecode)
        return request,IAudioAdapter_getEnabledInResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_getEnabledIn'
    root[(IAudioAdapter_getEnabledInRequestMsg.typecode.nspname,IAudioAdapter_getEnabledInRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_getEnabledIn'

    def soap_IAudioAdapter_setEnabledIn(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_setEnabledInRequestMsg.typecode)
        return request,IAudioAdapter_setEnabledInResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_setEnabledIn'
    root[(IAudioAdapter_setEnabledInRequestMsg.typecode.nspname,IAudioAdapter_setEnabledInRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_setEnabledIn'

    def soap_IAudioAdapter_getEnabledOut(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_getEnabledOutRequestMsg.typecode)
        return request,IAudioAdapter_getEnabledOutResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_getEnabledOut'
    root[(IAudioAdapter_getEnabledOutRequestMsg.typecode.nspname,IAudioAdapter_getEnabledOutRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_getEnabledOut'

    def soap_IAudioAdapter_setEnabledOut(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_setEnabledOutRequestMsg.typecode)
        return request,IAudioAdapter_setEnabledOutResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_setEnabledOut'
    root[(IAudioAdapter_setEnabledOutRequestMsg.typecode.nspname,IAudioAdapter_setEnabledOutRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_setEnabledOut'

    def soap_IAudioAdapter_getAudioController(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_getAudioControllerRequestMsg.typecode)
        return request,IAudioAdapter_getAudioControllerResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_getAudioController'
    root[(IAudioAdapter_getAudioControllerRequestMsg.typecode.nspname,IAudioAdapter_getAudioControllerRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_getAudioController'

    def soap_IAudioAdapter_setAudioController(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_setAudioControllerRequestMsg.typecode)
        return request,IAudioAdapter_setAudioControllerResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_setAudioController'
    root[(IAudioAdapter_setAudioControllerRequestMsg.typecode.nspname,IAudioAdapter_setAudioControllerRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_setAudioController'

    def soap_IAudioAdapter_getAudioCodec(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_getAudioCodecRequestMsg.typecode)
        return request,IAudioAdapter_getAudioCodecResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_getAudioCodec'
    root[(IAudioAdapter_getAudioCodecRequestMsg.typecode.nspname,IAudioAdapter_getAudioCodecRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_getAudioCodec'

    def soap_IAudioAdapter_setAudioCodec(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_setAudioCodecRequestMsg.typecode)
        return request,IAudioAdapter_setAudioCodecResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_setAudioCodec'
    root[(IAudioAdapter_setAudioCodecRequestMsg.typecode.nspname,IAudioAdapter_setAudioCodecRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_setAudioCodec'

    def soap_IAudioAdapter_getAudioDriver(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_getAudioDriverRequestMsg.typecode)
        return request,IAudioAdapter_getAudioDriverResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_getAudioDriver'
    root[(IAudioAdapter_getAudioDriverRequestMsg.typecode.nspname,IAudioAdapter_getAudioDriverRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_getAudioDriver'

    def soap_IAudioAdapter_setAudioDriver(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_setAudioDriverRequestMsg.typecode)
        return request,IAudioAdapter_setAudioDriverResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_setAudioDriver'
    root[(IAudioAdapter_setAudioDriverRequestMsg.typecode.nspname,IAudioAdapter_setAudioDriverRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_setAudioDriver'

    def soap_IAudioAdapter_getPropertiesList(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_getPropertiesListRequestMsg.typecode)
        return request,IAudioAdapter_getPropertiesListResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_getPropertiesList'
    root[(IAudioAdapter_getPropertiesListRequestMsg.typecode.nspname,IAudioAdapter_getPropertiesListRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_getPropertiesList'

    def soap_IAudioAdapter_setProperty(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_setPropertyRequestMsg.typecode)
        return request,IAudioAdapter_setPropertyResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_setProperty'
    root[(IAudioAdapter_setPropertyRequestMsg.typecode.nspname,IAudioAdapter_setPropertyRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_setProperty'

    def soap_IAudioAdapter_getProperty(self, ps, **kw):
        request = ps.Parse(IAudioAdapter_getPropertyRequestMsg.typecode)
        return request,IAudioAdapter_getPropertyResultMsg()

    soapAction[''] = 'soap_IAudioAdapter_getProperty'
    root[(IAudioAdapter_getPropertyRequestMsg.typecode.nspname,IAudioAdapter_getPropertyRequestMsg.typecode.pname)] = 'soap_IAudioAdapter_getProperty'

    def soap_IVRDEServer_getEnabled(self, ps, **kw):
        request = ps.Parse(IVRDEServer_getEnabledRequestMsg.typecode)
        return request,IVRDEServer_getEnabledResultMsg()

    soapAction[''] = 'soap_IVRDEServer_getEnabled'
    root[(IVRDEServer_getEnabledRequestMsg.typecode.nspname,IVRDEServer_getEnabledRequestMsg.typecode.pname)] = 'soap_IVRDEServer_getEnabled'

    def soap_IVRDEServer_setEnabled(self, ps, **kw):
        request = ps.Parse(IVRDEServer_setEnabledRequestMsg.typecode)
        return request,IVRDEServer_setEnabledResultMsg()

    soapAction[''] = 'soap_IVRDEServer_setEnabled'
    root[(IVRDEServer_setEnabledRequestMsg.typecode.nspname,IVRDEServer_setEnabledRequestMsg.typecode.pname)] = 'soap_IVRDEServer_setEnabled'

    def soap_IVRDEServer_getAuthType(self, ps, **kw):
        request = ps.Parse(IVRDEServer_getAuthTypeRequestMsg.typecode)
        return request,IVRDEServer_getAuthTypeResultMsg()

    soapAction[''] = 'soap_IVRDEServer_getAuthType'
    root[(IVRDEServer_getAuthTypeRequestMsg.typecode.nspname,IVRDEServer_getAuthTypeRequestMsg.typecode.pname)] = 'soap_IVRDEServer_getAuthType'

    def soap_IVRDEServer_setAuthType(self, ps, **kw):
        request = ps.Parse(IVRDEServer_setAuthTypeRequestMsg.typecode)
        return request,IVRDEServer_setAuthTypeResultMsg()

    soapAction[''] = 'soap_IVRDEServer_setAuthType'
    root[(IVRDEServer_setAuthTypeRequestMsg.typecode.nspname,IVRDEServer_setAuthTypeRequestMsg.typecode.pname)] = 'soap_IVRDEServer_setAuthType'

    def soap_IVRDEServer_getAuthTimeout(self, ps, **kw):
        request = ps.Parse(IVRDEServer_getAuthTimeoutRequestMsg.typecode)
        return request,IVRDEServer_getAuthTimeoutResultMsg()

    soapAction[''] = 'soap_IVRDEServer_getAuthTimeout'
    root[(IVRDEServer_getAuthTimeoutRequestMsg.typecode.nspname,IVRDEServer_getAuthTimeoutRequestMsg.typecode.pname)] = 'soap_IVRDEServer_getAuthTimeout'

    def soap_IVRDEServer_setAuthTimeout(self, ps, **kw):
        request = ps.Parse(IVRDEServer_setAuthTimeoutRequestMsg.typecode)
        return request,IVRDEServer_setAuthTimeoutResultMsg()

    soapAction[''] = 'soap_IVRDEServer_setAuthTimeout'
    root[(IVRDEServer_setAuthTimeoutRequestMsg.typecode.nspname,IVRDEServer_setAuthTimeoutRequestMsg.typecode.pname)] = 'soap_IVRDEServer_setAuthTimeout'

    def soap_IVRDEServer_getAllowMultiConnection(self, ps, **kw):
        request = ps.Parse(IVRDEServer_getAllowMultiConnectionRequestMsg.typecode)
        return request,IVRDEServer_getAllowMultiConnectionResultMsg()

    soapAction[''] = 'soap_IVRDEServer_getAllowMultiConnection'
    root[(IVRDEServer_getAllowMultiConnectionRequestMsg.typecode.nspname,IVRDEServer_getAllowMultiConnectionRequestMsg.typecode.pname)] = 'soap_IVRDEServer_getAllowMultiConnection'

    def soap_IVRDEServer_setAllowMultiConnection(self, ps, **kw):
        request = ps.Parse(IVRDEServer_setAllowMultiConnectionRequestMsg.typecode)
        return request,IVRDEServer_setAllowMultiConnectionResultMsg()

    soapAction[''] = 'soap_IVRDEServer_setAllowMultiConnection'
    root[(IVRDEServer_setAllowMultiConnectionRequestMsg.typecode.nspname,IVRDEServer_setAllowMultiConnectionRequestMsg.typecode.pname)] = 'soap_IVRDEServer_setAllowMultiConnection'

    def soap_IVRDEServer_getReuseSingleConnection(self, ps, **kw):
        request = ps.Parse(IVRDEServer_getReuseSingleConnectionRequestMsg.typecode)
        return request,IVRDEServer_getReuseSingleConnectionResultMsg()

    soapAction[''] = 'soap_IVRDEServer_getReuseSingleConnection'
    root[(IVRDEServer_getReuseSingleConnectionRequestMsg.typecode.nspname,IVRDEServer_getReuseSingleConnectionRequestMsg.typecode.pname)] = 'soap_IVRDEServer_getReuseSingleConnection'

    def soap_IVRDEServer_setReuseSingleConnection(self, ps, **kw):
        request = ps.Parse(IVRDEServer_setReuseSingleConnectionRequestMsg.typecode)
        return request,IVRDEServer_setReuseSingleConnectionResultMsg()

    soapAction[''] = 'soap_IVRDEServer_setReuseSingleConnection'
    root[(IVRDEServer_setReuseSingleConnectionRequestMsg.typecode.nspname,IVRDEServer_setReuseSingleConnectionRequestMsg.typecode.pname)] = 'soap_IVRDEServer_setReuseSingleConnection'

    def soap_IVRDEServer_getVRDEExtPack(self, ps, **kw):
        request = ps.Parse(IVRDEServer_getVRDEExtPackRequestMsg.typecode)
        return request,IVRDEServer_getVRDEExtPackResultMsg()

    soapAction[''] = 'soap_IVRDEServer_getVRDEExtPack'
    root[(IVRDEServer_getVRDEExtPackRequestMsg.typecode.nspname,IVRDEServer_getVRDEExtPackRequestMsg.typecode.pname)] = 'soap_IVRDEServer_getVRDEExtPack'

    def soap_IVRDEServer_setVRDEExtPack(self, ps, **kw):
        request = ps.Parse(IVRDEServer_setVRDEExtPackRequestMsg.typecode)
        return request,IVRDEServer_setVRDEExtPackResultMsg()

    soapAction[''] = 'soap_IVRDEServer_setVRDEExtPack'
    root[(IVRDEServer_setVRDEExtPackRequestMsg.typecode.nspname,IVRDEServer_setVRDEExtPackRequestMsg.typecode.pname)] = 'soap_IVRDEServer_setVRDEExtPack'

    def soap_IVRDEServer_getAuthLibrary(self, ps, **kw):
        request = ps.Parse(IVRDEServer_getAuthLibraryRequestMsg.typecode)
        return request,IVRDEServer_getAuthLibraryResultMsg()

    soapAction[''] = 'soap_IVRDEServer_getAuthLibrary'
    root[(IVRDEServer_getAuthLibraryRequestMsg.typecode.nspname,IVRDEServer_getAuthLibraryRequestMsg.typecode.pname)] = 'soap_IVRDEServer_getAuthLibrary'

    def soap_IVRDEServer_setAuthLibrary(self, ps, **kw):
        request = ps.Parse(IVRDEServer_setAuthLibraryRequestMsg.typecode)
        return request,IVRDEServer_setAuthLibraryResultMsg()

    soapAction[''] = 'soap_IVRDEServer_setAuthLibrary'
    root[(IVRDEServer_setAuthLibraryRequestMsg.typecode.nspname,IVRDEServer_setAuthLibraryRequestMsg.typecode.pname)] = 'soap_IVRDEServer_setAuthLibrary'

    def soap_IVRDEServer_getVRDEProperties(self, ps, **kw):
        request = ps.Parse(IVRDEServer_getVRDEPropertiesRequestMsg.typecode)
        return request,IVRDEServer_getVRDEPropertiesResultMsg()

    soapAction[''] = 'soap_IVRDEServer_getVRDEProperties'
    root[(IVRDEServer_getVRDEPropertiesRequestMsg.typecode.nspname,IVRDEServer_getVRDEPropertiesRequestMsg.typecode.pname)] = 'soap_IVRDEServer_getVRDEProperties'

    def soap_IVRDEServer_setVRDEProperty(self, ps, **kw):
        request = ps.Parse(IVRDEServer_setVRDEPropertyRequestMsg.typecode)
        return request,IVRDEServer_setVRDEPropertyResultMsg()

    soapAction[''] = 'soap_IVRDEServer_setVRDEProperty'
    root[(IVRDEServer_setVRDEPropertyRequestMsg.typecode.nspname,IVRDEServer_setVRDEPropertyRequestMsg.typecode.pname)] = 'soap_IVRDEServer_setVRDEProperty'

    def soap_IVRDEServer_getVRDEProperty(self, ps, **kw):
        request = ps.Parse(IVRDEServer_getVRDEPropertyRequestMsg.typecode)
        return request,IVRDEServer_getVRDEPropertyResultMsg()

    soapAction[''] = 'soap_IVRDEServer_getVRDEProperty'
    root[(IVRDEServer_getVRDEPropertyRequestMsg.typecode.nspname,IVRDEServer_getVRDEPropertyRequestMsg.typecode.pname)] = 'soap_IVRDEServer_getVRDEProperty'

    def soap_ISession_getState(self, ps, **kw):
        request = ps.Parse(ISession_getStateRequestMsg.typecode)
        return request,ISession_getStateResultMsg()

    soapAction[''] = 'soap_ISession_getState'
    root[(ISession_getStateRequestMsg.typecode.nspname,ISession_getStateRequestMsg.typecode.pname)] = 'soap_ISession_getState'

    def soap_ISession_getType(self, ps, **kw):
        request = ps.Parse(ISession_getTypeRequestMsg.typecode)
        return request,ISession_getTypeResultMsg()

    soapAction[''] = 'soap_ISession_getType'
    root[(ISession_getTypeRequestMsg.typecode.nspname,ISession_getTypeRequestMsg.typecode.pname)] = 'soap_ISession_getType'

    def soap_ISession_getName(self, ps, **kw):
        request = ps.Parse(ISession_getNameRequestMsg.typecode)
        return request,ISession_getNameResultMsg()

    soapAction[''] = 'soap_ISession_getName'
    root[(ISession_getNameRequestMsg.typecode.nspname,ISession_getNameRequestMsg.typecode.pname)] = 'soap_ISession_getName'

    def soap_ISession_setName(self, ps, **kw):
        request = ps.Parse(ISession_setNameRequestMsg.typecode)
        return request,ISession_setNameResultMsg()

    soapAction[''] = 'soap_ISession_setName'
    root[(ISession_setNameRequestMsg.typecode.nspname,ISession_setNameRequestMsg.typecode.pname)] = 'soap_ISession_setName'

    def soap_ISession_getMachine(self, ps, **kw):
        request = ps.Parse(ISession_getMachineRequestMsg.typecode)
        return request,ISession_getMachineResultMsg()

    soapAction[''] = 'soap_ISession_getMachine'
    root[(ISession_getMachineRequestMsg.typecode.nspname,ISession_getMachineRequestMsg.typecode.pname)] = 'soap_ISession_getMachine'

    def soap_ISession_getConsole(self, ps, **kw):
        request = ps.Parse(ISession_getConsoleRequestMsg.typecode)
        return request,ISession_getConsoleResultMsg()

    soapAction[''] = 'soap_ISession_getConsole'
    root[(ISession_getConsoleRequestMsg.typecode.nspname,ISession_getConsoleRequestMsg.typecode.pname)] = 'soap_ISession_getConsole'

    def soap_ISession_unlockMachine(self, ps, **kw):
        request = ps.Parse(ISession_unlockMachineRequestMsg.typecode)
        return request,ISession_unlockMachineResultMsg()

    soapAction[''] = 'soap_ISession_unlockMachine'
    root[(ISession_unlockMachineRequestMsg.typecode.nspname,ISession_unlockMachineRequestMsg.typecode.pname)] = 'soap_ISession_unlockMachine'

    def soap_IStorageController_getName(self, ps, **kw):
        request = ps.Parse(IStorageController_getNameRequestMsg.typecode)
        return request,IStorageController_getNameResultMsg()

    soapAction[''] = 'soap_IStorageController_getName'
    root[(IStorageController_getNameRequestMsg.typecode.nspname,IStorageController_getNameRequestMsg.typecode.pname)] = 'soap_IStorageController_getName'

    def soap_IStorageController_setName(self, ps, **kw):
        request = ps.Parse(IStorageController_setNameRequestMsg.typecode)
        return request,IStorageController_setNameResultMsg()

    soapAction[''] = 'soap_IStorageController_setName'
    root[(IStorageController_setNameRequestMsg.typecode.nspname,IStorageController_setNameRequestMsg.typecode.pname)] = 'soap_IStorageController_setName'

    def soap_IStorageController_getMaxDevicesPerPortCount(self, ps, **kw):
        request = ps.Parse(IStorageController_getMaxDevicesPerPortCountRequestMsg.typecode)
        return request,IStorageController_getMaxDevicesPerPortCountResultMsg()

    soapAction[''] = 'soap_IStorageController_getMaxDevicesPerPortCount'
    root[(IStorageController_getMaxDevicesPerPortCountRequestMsg.typecode.nspname,IStorageController_getMaxDevicesPerPortCountRequestMsg.typecode.pname)] = 'soap_IStorageController_getMaxDevicesPerPortCount'

    def soap_IStorageController_getMinPortCount(self, ps, **kw):
        request = ps.Parse(IStorageController_getMinPortCountRequestMsg.typecode)
        return request,IStorageController_getMinPortCountResultMsg()

    soapAction[''] = 'soap_IStorageController_getMinPortCount'
    root[(IStorageController_getMinPortCountRequestMsg.typecode.nspname,IStorageController_getMinPortCountRequestMsg.typecode.pname)] = 'soap_IStorageController_getMinPortCount'

    def soap_IStorageController_getMaxPortCount(self, ps, **kw):
        request = ps.Parse(IStorageController_getMaxPortCountRequestMsg.typecode)
        return request,IStorageController_getMaxPortCountResultMsg()

    soapAction[''] = 'soap_IStorageController_getMaxPortCount'
    root[(IStorageController_getMaxPortCountRequestMsg.typecode.nspname,IStorageController_getMaxPortCountRequestMsg.typecode.pname)] = 'soap_IStorageController_getMaxPortCount'

    def soap_IStorageController_getInstance(self, ps, **kw):
        request = ps.Parse(IStorageController_getInstanceRequestMsg.typecode)
        return request,IStorageController_getInstanceResultMsg()

    soapAction[''] = 'soap_IStorageController_getInstance'
    root[(IStorageController_getInstanceRequestMsg.typecode.nspname,IStorageController_getInstanceRequestMsg.typecode.pname)] = 'soap_IStorageController_getInstance'

    def soap_IStorageController_setInstance(self, ps, **kw):
        request = ps.Parse(IStorageController_setInstanceRequestMsg.typecode)
        return request,IStorageController_setInstanceResultMsg()

    soapAction[''] = 'soap_IStorageController_setInstance'
    root[(IStorageController_setInstanceRequestMsg.typecode.nspname,IStorageController_setInstanceRequestMsg.typecode.pname)] = 'soap_IStorageController_setInstance'

    def soap_IStorageController_getPortCount(self, ps, **kw):
        request = ps.Parse(IStorageController_getPortCountRequestMsg.typecode)
        return request,IStorageController_getPortCountResultMsg()

    soapAction[''] = 'soap_IStorageController_getPortCount'
    root[(IStorageController_getPortCountRequestMsg.typecode.nspname,IStorageController_getPortCountRequestMsg.typecode.pname)] = 'soap_IStorageController_getPortCount'

    def soap_IStorageController_setPortCount(self, ps, **kw):
        request = ps.Parse(IStorageController_setPortCountRequestMsg.typecode)
        return request,IStorageController_setPortCountResultMsg()

    soapAction[''] = 'soap_IStorageController_setPortCount'
    root[(IStorageController_setPortCountRequestMsg.typecode.nspname,IStorageController_setPortCountRequestMsg.typecode.pname)] = 'soap_IStorageController_setPortCount'

    def soap_IStorageController_getBus(self, ps, **kw):
        request = ps.Parse(IStorageController_getBusRequestMsg.typecode)
        return request,IStorageController_getBusResultMsg()

    soapAction[''] = 'soap_IStorageController_getBus'
    root[(IStorageController_getBusRequestMsg.typecode.nspname,IStorageController_getBusRequestMsg.typecode.pname)] = 'soap_IStorageController_getBus'

    def soap_IStorageController_getControllerType(self, ps, **kw):
        request = ps.Parse(IStorageController_getControllerTypeRequestMsg.typecode)
        return request,IStorageController_getControllerTypeResultMsg()

    soapAction[''] = 'soap_IStorageController_getControllerType'
    root[(IStorageController_getControllerTypeRequestMsg.typecode.nspname,IStorageController_getControllerTypeRequestMsg.typecode.pname)] = 'soap_IStorageController_getControllerType'

    def soap_IStorageController_setControllerType(self, ps, **kw):
        request = ps.Parse(IStorageController_setControllerTypeRequestMsg.typecode)
        return request,IStorageController_setControllerTypeResultMsg()

    soapAction[''] = 'soap_IStorageController_setControllerType'
    root[(IStorageController_setControllerTypeRequestMsg.typecode.nspname,IStorageController_setControllerTypeRequestMsg.typecode.pname)] = 'soap_IStorageController_setControllerType'

    def soap_IStorageController_getUseHostIOCache(self, ps, **kw):
        request = ps.Parse(IStorageController_getUseHostIOCacheRequestMsg.typecode)
        return request,IStorageController_getUseHostIOCacheResultMsg()

    soapAction[''] = 'soap_IStorageController_getUseHostIOCache'
    root[(IStorageController_getUseHostIOCacheRequestMsg.typecode.nspname,IStorageController_getUseHostIOCacheRequestMsg.typecode.pname)] = 'soap_IStorageController_getUseHostIOCache'

    def soap_IStorageController_setUseHostIOCache(self, ps, **kw):
        request = ps.Parse(IStorageController_setUseHostIOCacheRequestMsg.typecode)
        return request,IStorageController_setUseHostIOCacheResultMsg()

    soapAction[''] = 'soap_IStorageController_setUseHostIOCache'
    root[(IStorageController_setUseHostIOCacheRequestMsg.typecode.nspname,IStorageController_setUseHostIOCacheRequestMsg.typecode.pname)] = 'soap_IStorageController_setUseHostIOCache'

    def soap_IStorageController_getBootable(self, ps, **kw):
        request = ps.Parse(IStorageController_getBootableRequestMsg.typecode)
        return request,IStorageController_getBootableResultMsg()

    soapAction[''] = 'soap_IStorageController_getBootable'
    root[(IStorageController_getBootableRequestMsg.typecode.nspname,IStorageController_getBootableRequestMsg.typecode.pname)] = 'soap_IStorageController_getBootable'

    def soap_IManagedObjectRef_getInterfaceName(self, ps, **kw):
        request = ps.Parse(IManagedObjectRef_getInterfaceNameRequestMsg.typecode)
        return request,IManagedObjectRef_getInterfaceNameResultMsg()

    soapAction[''] = 'soap_IManagedObjectRef_getInterfaceName'
    root[(IManagedObjectRef_getInterfaceNameRequestMsg.typecode.nspname,IManagedObjectRef_getInterfaceNameRequestMsg.typecode.pname)] = 'soap_IManagedObjectRef_getInterfaceName'

    def soap_IManagedObjectRef_release(self, ps, **kw):
        request = ps.Parse(IManagedObjectRef_releaseRequestMsg.typecode)
        return request,IManagedObjectRef_releaseResultMsg()

    soapAction[''] = 'soap_IManagedObjectRef_release'
    root[(IManagedObjectRef_releaseRequestMsg.typecode.nspname,IManagedObjectRef_releaseRequestMsg.typecode.pname)] = 'soap_IManagedObjectRef_release'

    def soap_IWebsessionManager_logon(self, ps, **kw):
        request = ps.Parse(IWebsessionManager_logonRequestMsg.typecode)
        return request,IWebsessionManager_logonResultMsg()

    soapAction[''] = 'soap_IWebsessionManager_logon'
    root[(IWebsessionManager_logonRequestMsg.typecode.nspname,IWebsessionManager_logonRequestMsg.typecode.pname)] = 'soap_IWebsessionManager_logon'

    def soap_IWebsessionManager_getSessionObject(self, ps, **kw):
        request = ps.Parse(IWebsessionManager_getSessionObjectRequestMsg.typecode)
        return request,IWebsessionManager_getSessionObjectResultMsg()

    soapAction[''] = 'soap_IWebsessionManager_getSessionObject'
    root[(IWebsessionManager_getSessionObjectRequestMsg.typecode.nspname,IWebsessionManager_getSessionObjectRequestMsg.typecode.pname)] = 'soap_IWebsessionManager_getSessionObject'

    def soap_IWebsessionManager_logoff(self, ps, **kw):
        request = ps.Parse(IWebsessionManager_logoffRequestMsg.typecode)
        return request,IWebsessionManager_logoffResultMsg()

    soapAction[''] = 'soap_IWebsessionManager_logoff'
    root[(IWebsessionManager_logoffRequestMsg.typecode.nspname,IWebsessionManager_logoffRequestMsg.typecode.pname)] = 'soap_IWebsessionManager_logoff'

    def soap_IPerformanceMetric_getMetricName(self, ps, **kw):
        request = ps.Parse(IPerformanceMetric_getMetricNameRequestMsg.typecode)
        return request,IPerformanceMetric_getMetricNameResultMsg()

    soapAction[''] = 'soap_IPerformanceMetric_getMetricName'
    root[(IPerformanceMetric_getMetricNameRequestMsg.typecode.nspname,IPerformanceMetric_getMetricNameRequestMsg.typecode.pname)] = 'soap_IPerformanceMetric_getMetricName'

    def soap_IPerformanceMetric_getObject(self, ps, **kw):
        request = ps.Parse(IPerformanceMetric_getObjectRequestMsg.typecode)
        return request,IPerformanceMetric_getObjectResultMsg()

    soapAction[''] = 'soap_IPerformanceMetric_getObject'
    root[(IPerformanceMetric_getObjectRequestMsg.typecode.nspname,IPerformanceMetric_getObjectRequestMsg.typecode.pname)] = 'soap_IPerformanceMetric_getObject'

    def soap_IPerformanceMetric_getDescription(self, ps, **kw):
        request = ps.Parse(IPerformanceMetric_getDescriptionRequestMsg.typecode)
        return request,IPerformanceMetric_getDescriptionResultMsg()

    soapAction[''] = 'soap_IPerformanceMetric_getDescription'
    root[(IPerformanceMetric_getDescriptionRequestMsg.typecode.nspname,IPerformanceMetric_getDescriptionRequestMsg.typecode.pname)] = 'soap_IPerformanceMetric_getDescription'

    def soap_IPerformanceMetric_getPeriod(self, ps, **kw):
        request = ps.Parse(IPerformanceMetric_getPeriodRequestMsg.typecode)
        return request,IPerformanceMetric_getPeriodResultMsg()

    soapAction[''] = 'soap_IPerformanceMetric_getPeriod'
    root[(IPerformanceMetric_getPeriodRequestMsg.typecode.nspname,IPerformanceMetric_getPeriodRequestMsg.typecode.pname)] = 'soap_IPerformanceMetric_getPeriod'

    def soap_IPerformanceMetric_getCount(self, ps, **kw):
        request = ps.Parse(IPerformanceMetric_getCountRequestMsg.typecode)
        return request,IPerformanceMetric_getCountResultMsg()

    soapAction[''] = 'soap_IPerformanceMetric_getCount'
    root[(IPerformanceMetric_getCountRequestMsg.typecode.nspname,IPerformanceMetric_getCountRequestMsg.typecode.pname)] = 'soap_IPerformanceMetric_getCount'

    def soap_IPerformanceMetric_getUnit(self, ps, **kw):
        request = ps.Parse(IPerformanceMetric_getUnitRequestMsg.typecode)
        return request,IPerformanceMetric_getUnitResultMsg()

    soapAction[''] = 'soap_IPerformanceMetric_getUnit'
    root[(IPerformanceMetric_getUnitRequestMsg.typecode.nspname,IPerformanceMetric_getUnitRequestMsg.typecode.pname)] = 'soap_IPerformanceMetric_getUnit'

    def soap_IPerformanceMetric_getMinimumValue(self, ps, **kw):
        request = ps.Parse(IPerformanceMetric_getMinimumValueRequestMsg.typecode)
        return request,IPerformanceMetric_getMinimumValueResultMsg()

    soapAction[''] = 'soap_IPerformanceMetric_getMinimumValue'
    root[(IPerformanceMetric_getMinimumValueRequestMsg.typecode.nspname,IPerformanceMetric_getMinimumValueRequestMsg.typecode.pname)] = 'soap_IPerformanceMetric_getMinimumValue'

    def soap_IPerformanceMetric_getMaximumValue(self, ps, **kw):
        request = ps.Parse(IPerformanceMetric_getMaximumValueRequestMsg.typecode)
        return request,IPerformanceMetric_getMaximumValueResultMsg()

    soapAction[''] = 'soap_IPerformanceMetric_getMaximumValue'
    root[(IPerformanceMetric_getMaximumValueRequestMsg.typecode.nspname,IPerformanceMetric_getMaximumValueRequestMsg.typecode.pname)] = 'soap_IPerformanceMetric_getMaximumValue'

    def soap_IPerformanceCollector_getMetricNames(self, ps, **kw):
        request = ps.Parse(IPerformanceCollector_getMetricNamesRequestMsg.typecode)
        return request,IPerformanceCollector_getMetricNamesResultMsg()

    soapAction[''] = 'soap_IPerformanceCollector_getMetricNames'
    root[(IPerformanceCollector_getMetricNamesRequestMsg.typecode.nspname,IPerformanceCollector_getMetricNamesRequestMsg.typecode.pname)] = 'soap_IPerformanceCollector_getMetricNames'

    def soap_IPerformanceCollector_getMetrics(self, ps, **kw):
        request = ps.Parse(IPerformanceCollector_getMetricsRequestMsg.typecode)
        return request,IPerformanceCollector_getMetricsResultMsg()

    soapAction[''] = 'soap_IPerformanceCollector_getMetrics'
    root[(IPerformanceCollector_getMetricsRequestMsg.typecode.nspname,IPerformanceCollector_getMetricsRequestMsg.typecode.pname)] = 'soap_IPerformanceCollector_getMetrics'

    def soap_IPerformanceCollector_setupMetrics(self, ps, **kw):
        request = ps.Parse(IPerformanceCollector_setupMetricsRequestMsg.typecode)
        return request,IPerformanceCollector_setupMetricsResultMsg()

    soapAction[''] = 'soap_IPerformanceCollector_setupMetrics'
    root[(IPerformanceCollector_setupMetricsRequestMsg.typecode.nspname,IPerformanceCollector_setupMetricsRequestMsg.typecode.pname)] = 'soap_IPerformanceCollector_setupMetrics'

    def soap_IPerformanceCollector_enableMetrics(self, ps, **kw):
        request = ps.Parse(IPerformanceCollector_enableMetricsRequestMsg.typecode)
        return request,IPerformanceCollector_enableMetricsResultMsg()

    soapAction[''] = 'soap_IPerformanceCollector_enableMetrics'
    root[(IPerformanceCollector_enableMetricsRequestMsg.typecode.nspname,IPerformanceCollector_enableMetricsRequestMsg.typecode.pname)] = 'soap_IPerformanceCollector_enableMetrics'

    def soap_IPerformanceCollector_disableMetrics(self, ps, **kw):
        request = ps.Parse(IPerformanceCollector_disableMetricsRequestMsg.typecode)
        return request,IPerformanceCollector_disableMetricsResultMsg()

    soapAction[''] = 'soap_IPerformanceCollector_disableMetrics'
    root[(IPerformanceCollector_disableMetricsRequestMsg.typecode.nspname,IPerformanceCollector_disableMetricsRequestMsg.typecode.pname)] = 'soap_IPerformanceCollector_disableMetrics'

    def soap_IPerformanceCollector_queryMetricsData(self, ps, **kw):
        request = ps.Parse(IPerformanceCollector_queryMetricsDataRequestMsg.typecode)
        return request,IPerformanceCollector_queryMetricsDataResultMsg()

    soapAction[''] = 'soap_IPerformanceCollector_queryMetricsData'
    root[(IPerformanceCollector_queryMetricsDataRequestMsg.typecode.nspname,IPerformanceCollector_queryMetricsDataRequestMsg.typecode.pname)] = 'soap_IPerformanceCollector_queryMetricsData'

    def soap_INATEngine_getNetwork(self, ps, **kw):
        request = ps.Parse(INATEngine_getNetworkRequestMsg.typecode)
        return request,INATEngine_getNetworkResultMsg()

    soapAction[''] = 'soap_INATEngine_getNetwork'
    root[(INATEngine_getNetworkRequestMsg.typecode.nspname,INATEngine_getNetworkRequestMsg.typecode.pname)] = 'soap_INATEngine_getNetwork'

    def soap_INATEngine_setNetwork(self, ps, **kw):
        request = ps.Parse(INATEngine_setNetworkRequestMsg.typecode)
        return request,INATEngine_setNetworkResultMsg()

    soapAction[''] = 'soap_INATEngine_setNetwork'
    root[(INATEngine_setNetworkRequestMsg.typecode.nspname,INATEngine_setNetworkRequestMsg.typecode.pname)] = 'soap_INATEngine_setNetwork'

    def soap_INATEngine_getHostIP(self, ps, **kw):
        request = ps.Parse(INATEngine_getHostIPRequestMsg.typecode)
        return request,INATEngine_getHostIPResultMsg()

    soapAction[''] = 'soap_INATEngine_getHostIP'
    root[(INATEngine_getHostIPRequestMsg.typecode.nspname,INATEngine_getHostIPRequestMsg.typecode.pname)] = 'soap_INATEngine_getHostIP'

    def soap_INATEngine_setHostIP(self, ps, **kw):
        request = ps.Parse(INATEngine_setHostIPRequestMsg.typecode)
        return request,INATEngine_setHostIPResultMsg()

    soapAction[''] = 'soap_INATEngine_setHostIP'
    root[(INATEngine_setHostIPRequestMsg.typecode.nspname,INATEngine_setHostIPRequestMsg.typecode.pname)] = 'soap_INATEngine_setHostIP'

    def soap_INATEngine_getTFTPPrefix(self, ps, **kw):
        request = ps.Parse(INATEngine_getTFTPPrefixRequestMsg.typecode)
        return request,INATEngine_getTFTPPrefixResultMsg()

    soapAction[''] = 'soap_INATEngine_getTFTPPrefix'
    root[(INATEngine_getTFTPPrefixRequestMsg.typecode.nspname,INATEngine_getTFTPPrefixRequestMsg.typecode.pname)] = 'soap_INATEngine_getTFTPPrefix'

    def soap_INATEngine_setTFTPPrefix(self, ps, **kw):
        request = ps.Parse(INATEngine_setTFTPPrefixRequestMsg.typecode)
        return request,INATEngine_setTFTPPrefixResultMsg()

    soapAction[''] = 'soap_INATEngine_setTFTPPrefix'
    root[(INATEngine_setTFTPPrefixRequestMsg.typecode.nspname,INATEngine_setTFTPPrefixRequestMsg.typecode.pname)] = 'soap_INATEngine_setTFTPPrefix'

    def soap_INATEngine_getTFTPBootFile(self, ps, **kw):
        request = ps.Parse(INATEngine_getTFTPBootFileRequestMsg.typecode)
        return request,INATEngine_getTFTPBootFileResultMsg()

    soapAction[''] = 'soap_INATEngine_getTFTPBootFile'
    root[(INATEngine_getTFTPBootFileRequestMsg.typecode.nspname,INATEngine_getTFTPBootFileRequestMsg.typecode.pname)] = 'soap_INATEngine_getTFTPBootFile'

    def soap_INATEngine_setTFTPBootFile(self, ps, **kw):
        request = ps.Parse(INATEngine_setTFTPBootFileRequestMsg.typecode)
        return request,INATEngine_setTFTPBootFileResultMsg()

    soapAction[''] = 'soap_INATEngine_setTFTPBootFile'
    root[(INATEngine_setTFTPBootFileRequestMsg.typecode.nspname,INATEngine_setTFTPBootFileRequestMsg.typecode.pname)] = 'soap_INATEngine_setTFTPBootFile'

    def soap_INATEngine_getTFTPNextServer(self, ps, **kw):
        request = ps.Parse(INATEngine_getTFTPNextServerRequestMsg.typecode)
        return request,INATEngine_getTFTPNextServerResultMsg()

    soapAction[''] = 'soap_INATEngine_getTFTPNextServer'
    root[(INATEngine_getTFTPNextServerRequestMsg.typecode.nspname,INATEngine_getTFTPNextServerRequestMsg.typecode.pname)] = 'soap_INATEngine_getTFTPNextServer'

    def soap_INATEngine_setTFTPNextServer(self, ps, **kw):
        request = ps.Parse(INATEngine_setTFTPNextServerRequestMsg.typecode)
        return request,INATEngine_setTFTPNextServerResultMsg()

    soapAction[''] = 'soap_INATEngine_setTFTPNextServer'
    root[(INATEngine_setTFTPNextServerRequestMsg.typecode.nspname,INATEngine_setTFTPNextServerRequestMsg.typecode.pname)] = 'soap_INATEngine_setTFTPNextServer'

    def soap_INATEngine_getAliasMode(self, ps, **kw):
        request = ps.Parse(INATEngine_getAliasModeRequestMsg.typecode)
        return request,INATEngine_getAliasModeResultMsg()

    soapAction[''] = 'soap_INATEngine_getAliasMode'
    root[(INATEngine_getAliasModeRequestMsg.typecode.nspname,INATEngine_getAliasModeRequestMsg.typecode.pname)] = 'soap_INATEngine_getAliasMode'

    def soap_INATEngine_setAliasMode(self, ps, **kw):
        request = ps.Parse(INATEngine_setAliasModeRequestMsg.typecode)
        return request,INATEngine_setAliasModeResultMsg()

    soapAction[''] = 'soap_INATEngine_setAliasMode'
    root[(INATEngine_setAliasModeRequestMsg.typecode.nspname,INATEngine_setAliasModeRequestMsg.typecode.pname)] = 'soap_INATEngine_setAliasMode'

    def soap_INATEngine_getDNSPassDomain(self, ps, **kw):
        request = ps.Parse(INATEngine_getDNSPassDomainRequestMsg.typecode)
        return request,INATEngine_getDNSPassDomainResultMsg()

    soapAction[''] = 'soap_INATEngine_getDNSPassDomain'
    root[(INATEngine_getDNSPassDomainRequestMsg.typecode.nspname,INATEngine_getDNSPassDomainRequestMsg.typecode.pname)] = 'soap_INATEngine_getDNSPassDomain'

    def soap_INATEngine_setDNSPassDomain(self, ps, **kw):
        request = ps.Parse(INATEngine_setDNSPassDomainRequestMsg.typecode)
        return request,INATEngine_setDNSPassDomainResultMsg()

    soapAction[''] = 'soap_INATEngine_setDNSPassDomain'
    root[(INATEngine_setDNSPassDomainRequestMsg.typecode.nspname,INATEngine_setDNSPassDomainRequestMsg.typecode.pname)] = 'soap_INATEngine_setDNSPassDomain'

    def soap_INATEngine_getDNSProxy(self, ps, **kw):
        request = ps.Parse(INATEngine_getDNSProxyRequestMsg.typecode)
        return request,INATEngine_getDNSProxyResultMsg()

    soapAction[''] = 'soap_INATEngine_getDNSProxy'
    root[(INATEngine_getDNSProxyRequestMsg.typecode.nspname,INATEngine_getDNSProxyRequestMsg.typecode.pname)] = 'soap_INATEngine_getDNSProxy'

    def soap_INATEngine_setDNSProxy(self, ps, **kw):
        request = ps.Parse(INATEngine_setDNSProxyRequestMsg.typecode)
        return request,INATEngine_setDNSProxyResultMsg()

    soapAction[''] = 'soap_INATEngine_setDNSProxy'
    root[(INATEngine_setDNSProxyRequestMsg.typecode.nspname,INATEngine_setDNSProxyRequestMsg.typecode.pname)] = 'soap_INATEngine_setDNSProxy'

    def soap_INATEngine_getDNSUseHostResolver(self, ps, **kw):
        request = ps.Parse(INATEngine_getDNSUseHostResolverRequestMsg.typecode)
        return request,INATEngine_getDNSUseHostResolverResultMsg()

    soapAction[''] = 'soap_INATEngine_getDNSUseHostResolver'
    root[(INATEngine_getDNSUseHostResolverRequestMsg.typecode.nspname,INATEngine_getDNSUseHostResolverRequestMsg.typecode.pname)] = 'soap_INATEngine_getDNSUseHostResolver'

    def soap_INATEngine_setDNSUseHostResolver(self, ps, **kw):
        request = ps.Parse(INATEngine_setDNSUseHostResolverRequestMsg.typecode)
        return request,INATEngine_setDNSUseHostResolverResultMsg()

    soapAction[''] = 'soap_INATEngine_setDNSUseHostResolver'
    root[(INATEngine_setDNSUseHostResolverRequestMsg.typecode.nspname,INATEngine_setDNSUseHostResolverRequestMsg.typecode.pname)] = 'soap_INATEngine_setDNSUseHostResolver'

    def soap_INATEngine_getRedirects(self, ps, **kw):
        request = ps.Parse(INATEngine_getRedirectsRequestMsg.typecode)
        return request,INATEngine_getRedirectsResultMsg()

    soapAction[''] = 'soap_INATEngine_getRedirects'
    root[(INATEngine_getRedirectsRequestMsg.typecode.nspname,INATEngine_getRedirectsRequestMsg.typecode.pname)] = 'soap_INATEngine_getRedirects'

    def soap_INATEngine_setNetworkSettings(self, ps, **kw):
        request = ps.Parse(INATEngine_setNetworkSettingsRequestMsg.typecode)
        return request,INATEngine_setNetworkSettingsResultMsg()

    soapAction[''] = 'soap_INATEngine_setNetworkSettings'
    root[(INATEngine_setNetworkSettingsRequestMsg.typecode.nspname,INATEngine_setNetworkSettingsRequestMsg.typecode.pname)] = 'soap_INATEngine_setNetworkSettings'

    def soap_INATEngine_getNetworkSettings(self, ps, **kw):
        request = ps.Parse(INATEngine_getNetworkSettingsRequestMsg.typecode)
        return request,INATEngine_getNetworkSettingsResultMsg()

    soapAction[''] = 'soap_INATEngine_getNetworkSettings'
    root[(INATEngine_getNetworkSettingsRequestMsg.typecode.nspname,INATEngine_getNetworkSettingsRequestMsg.typecode.pname)] = 'soap_INATEngine_getNetworkSettings'

    def soap_INATEngine_addRedirect(self, ps, **kw):
        request = ps.Parse(INATEngine_addRedirectRequestMsg.typecode)
        return request,INATEngine_addRedirectResultMsg()

    soapAction[''] = 'soap_INATEngine_addRedirect'
    root[(INATEngine_addRedirectRequestMsg.typecode.nspname,INATEngine_addRedirectRequestMsg.typecode.pname)] = 'soap_INATEngine_addRedirect'

    def soap_INATEngine_removeRedirect(self, ps, **kw):
        request = ps.Parse(INATEngine_removeRedirectRequestMsg.typecode)
        return request,INATEngine_removeRedirectResultMsg()

    soapAction[''] = 'soap_INATEngine_removeRedirect'
    root[(INATEngine_removeRedirectRequestMsg.typecode.nspname,INATEngine_removeRedirectRequestMsg.typecode.pname)] = 'soap_INATEngine_removeRedirect'

    def soap_IBandwidthGroup_getName(self, ps, **kw):
        request = ps.Parse(IBandwidthGroup_getNameRequestMsg.typecode)
        return request,IBandwidthGroup_getNameResultMsg()

    soapAction[''] = 'soap_IBandwidthGroup_getName'
    root[(IBandwidthGroup_getNameRequestMsg.typecode.nspname,IBandwidthGroup_getNameRequestMsg.typecode.pname)] = 'soap_IBandwidthGroup_getName'

    def soap_IBandwidthGroup_getType(self, ps, **kw):
        request = ps.Parse(IBandwidthGroup_getTypeRequestMsg.typecode)
        return request,IBandwidthGroup_getTypeResultMsg()

    soapAction[''] = 'soap_IBandwidthGroup_getType'
    root[(IBandwidthGroup_getTypeRequestMsg.typecode.nspname,IBandwidthGroup_getTypeRequestMsg.typecode.pname)] = 'soap_IBandwidthGroup_getType'

    def soap_IBandwidthGroup_getReference(self, ps, **kw):
        request = ps.Parse(IBandwidthGroup_getReferenceRequestMsg.typecode)
        return request,IBandwidthGroup_getReferenceResultMsg()

    soapAction[''] = 'soap_IBandwidthGroup_getReference'
    root[(IBandwidthGroup_getReferenceRequestMsg.typecode.nspname,IBandwidthGroup_getReferenceRequestMsg.typecode.pname)] = 'soap_IBandwidthGroup_getReference'

    def soap_IBandwidthGroup_getMaxBytesPerSec(self, ps, **kw):
        request = ps.Parse(IBandwidthGroup_getMaxBytesPerSecRequestMsg.typecode)
        return request,IBandwidthGroup_getMaxBytesPerSecResultMsg()

    soapAction[''] = 'soap_IBandwidthGroup_getMaxBytesPerSec'
    root[(IBandwidthGroup_getMaxBytesPerSecRequestMsg.typecode.nspname,IBandwidthGroup_getMaxBytesPerSecRequestMsg.typecode.pname)] = 'soap_IBandwidthGroup_getMaxBytesPerSec'

    def soap_IBandwidthGroup_setMaxBytesPerSec(self, ps, **kw):
        request = ps.Parse(IBandwidthGroup_setMaxBytesPerSecRequestMsg.typecode)
        return request,IBandwidthGroup_setMaxBytesPerSecResultMsg()

    soapAction[''] = 'soap_IBandwidthGroup_setMaxBytesPerSec'
    root[(IBandwidthGroup_setMaxBytesPerSecRequestMsg.typecode.nspname,IBandwidthGroup_setMaxBytesPerSecRequestMsg.typecode.pname)] = 'soap_IBandwidthGroup_setMaxBytesPerSec'

    def soap_IBandwidthControl_getNumGroups(self, ps, **kw):
        request = ps.Parse(IBandwidthControl_getNumGroupsRequestMsg.typecode)
        return request,IBandwidthControl_getNumGroupsResultMsg()

    soapAction[''] = 'soap_IBandwidthControl_getNumGroups'
    root[(IBandwidthControl_getNumGroupsRequestMsg.typecode.nspname,IBandwidthControl_getNumGroupsRequestMsg.typecode.pname)] = 'soap_IBandwidthControl_getNumGroups'

    def soap_IBandwidthControl_createBandwidthGroup(self, ps, **kw):
        request = ps.Parse(IBandwidthControl_createBandwidthGroupRequestMsg.typecode)
        return request,IBandwidthControl_createBandwidthGroupResultMsg()

    soapAction[''] = 'soap_IBandwidthControl_createBandwidthGroup'
    root[(IBandwidthControl_createBandwidthGroupRequestMsg.typecode.nspname,IBandwidthControl_createBandwidthGroupRequestMsg.typecode.pname)] = 'soap_IBandwidthControl_createBandwidthGroup'

    def soap_IBandwidthControl_deleteBandwidthGroup(self, ps, **kw):
        request = ps.Parse(IBandwidthControl_deleteBandwidthGroupRequestMsg.typecode)
        return request,IBandwidthControl_deleteBandwidthGroupResultMsg()

    soapAction[''] = 'soap_IBandwidthControl_deleteBandwidthGroup'
    root[(IBandwidthControl_deleteBandwidthGroupRequestMsg.typecode.nspname,IBandwidthControl_deleteBandwidthGroupRequestMsg.typecode.pname)] = 'soap_IBandwidthControl_deleteBandwidthGroup'

    def soap_IBandwidthControl_getBandwidthGroup(self, ps, **kw):
        request = ps.Parse(IBandwidthControl_getBandwidthGroupRequestMsg.typecode)
        return request,IBandwidthControl_getBandwidthGroupResultMsg()

    soapAction[''] = 'soap_IBandwidthControl_getBandwidthGroup'
    root[(IBandwidthControl_getBandwidthGroupRequestMsg.typecode.nspname,IBandwidthControl_getBandwidthGroupRequestMsg.typecode.pname)] = 'soap_IBandwidthControl_getBandwidthGroup'

    def soap_IBandwidthControl_getAllBandwidthGroups(self, ps, **kw):
        request = ps.Parse(IBandwidthControl_getAllBandwidthGroupsRequestMsg.typecode)
        return request,IBandwidthControl_getAllBandwidthGroupsResultMsg()

    soapAction[''] = 'soap_IBandwidthControl_getAllBandwidthGroups'
    root[(IBandwidthControl_getAllBandwidthGroupsRequestMsg.typecode.nspname,IBandwidthControl_getAllBandwidthGroupsRequestMsg.typecode.pname)] = 'soap_IBandwidthControl_getAllBandwidthGroups'

    def soap_IEventSource_createListener(self, ps, **kw):
        request = ps.Parse(IEventSource_createListenerRequestMsg.typecode)
        return request,IEventSource_createListenerResultMsg()

    soapAction[''] = 'soap_IEventSource_createListener'
    root[(IEventSource_createListenerRequestMsg.typecode.nspname,IEventSource_createListenerRequestMsg.typecode.pname)] = 'soap_IEventSource_createListener'

    def soap_IEventSource_createAggregator(self, ps, **kw):
        request = ps.Parse(IEventSource_createAggregatorRequestMsg.typecode)
        return request,IEventSource_createAggregatorResultMsg()

    soapAction[''] = 'soap_IEventSource_createAggregator'
    root[(IEventSource_createAggregatorRequestMsg.typecode.nspname,IEventSource_createAggregatorRequestMsg.typecode.pname)] = 'soap_IEventSource_createAggregator'

    def soap_IEventSource_registerListener(self, ps, **kw):
        request = ps.Parse(IEventSource_registerListenerRequestMsg.typecode)
        return request,IEventSource_registerListenerResultMsg()

    soapAction[''] = 'soap_IEventSource_registerListener'
    root[(IEventSource_registerListenerRequestMsg.typecode.nspname,IEventSource_registerListenerRequestMsg.typecode.pname)] = 'soap_IEventSource_registerListener'

    def soap_IEventSource_unregisterListener(self, ps, **kw):
        request = ps.Parse(IEventSource_unregisterListenerRequestMsg.typecode)
        return request,IEventSource_unregisterListenerResultMsg()

    soapAction[''] = 'soap_IEventSource_unregisterListener'
    root[(IEventSource_unregisterListenerRequestMsg.typecode.nspname,IEventSource_unregisterListenerRequestMsg.typecode.pname)] = 'soap_IEventSource_unregisterListener'

    def soap_IEventSource_fireEvent(self, ps, **kw):
        request = ps.Parse(IEventSource_fireEventRequestMsg.typecode)
        return request,IEventSource_fireEventResultMsg()

    soapAction[''] = 'soap_IEventSource_fireEvent'
    root[(IEventSource_fireEventRequestMsg.typecode.nspname,IEventSource_fireEventRequestMsg.typecode.pname)] = 'soap_IEventSource_fireEvent'

    def soap_IEventSource_getEvent(self, ps, **kw):
        request = ps.Parse(IEventSource_getEventRequestMsg.typecode)
        return request,IEventSource_getEventResultMsg()

    soapAction[''] = 'soap_IEventSource_getEvent'
    root[(IEventSource_getEventRequestMsg.typecode.nspname,IEventSource_getEventRequestMsg.typecode.pname)] = 'soap_IEventSource_getEvent'

    def soap_IEventSource_eventProcessed(self, ps, **kw):
        request = ps.Parse(IEventSource_eventProcessedRequestMsg.typecode)
        return request,IEventSource_eventProcessedResultMsg()

    soapAction[''] = 'soap_IEventSource_eventProcessed'
    root[(IEventSource_eventProcessedRequestMsg.typecode.nspname,IEventSource_eventProcessedRequestMsg.typecode.pname)] = 'soap_IEventSource_eventProcessed'

    def soap_IEventListener_handleEvent(self, ps, **kw):
        request = ps.Parse(IEventListener_handleEventRequestMsg.typecode)
        return request,IEventListener_handleEventResultMsg()

    soapAction[''] = 'soap_IEventListener_handleEvent'
    root[(IEventListener_handleEventRequestMsg.typecode.nspname,IEventListener_handleEventRequestMsg.typecode.pname)] = 'soap_IEventListener_handleEvent'

    def soap_IEvent_getType(self, ps, **kw):
        request = ps.Parse(IEvent_getTypeRequestMsg.typecode)
        return request,IEvent_getTypeResultMsg()

    soapAction[''] = 'soap_IEvent_getType'
    root[(IEvent_getTypeRequestMsg.typecode.nspname,IEvent_getTypeRequestMsg.typecode.pname)] = 'soap_IEvent_getType'

    def soap_IEvent_getSource(self, ps, **kw):
        request = ps.Parse(IEvent_getSourceRequestMsg.typecode)
        return request,IEvent_getSourceResultMsg()

    soapAction[''] = 'soap_IEvent_getSource'
    root[(IEvent_getSourceRequestMsg.typecode.nspname,IEvent_getSourceRequestMsg.typecode.pname)] = 'soap_IEvent_getSource'

    def soap_IEvent_getWaitable(self, ps, **kw):
        request = ps.Parse(IEvent_getWaitableRequestMsg.typecode)
        return request,IEvent_getWaitableResultMsg()

    soapAction[''] = 'soap_IEvent_getWaitable'
    root[(IEvent_getWaitableRequestMsg.typecode.nspname,IEvent_getWaitableRequestMsg.typecode.pname)] = 'soap_IEvent_getWaitable'

    def soap_IEvent_setProcessed(self, ps, **kw):
        request = ps.Parse(IEvent_setProcessedRequestMsg.typecode)
        return request,IEvent_setProcessedResultMsg()

    soapAction[''] = 'soap_IEvent_setProcessed'
    root[(IEvent_setProcessedRequestMsg.typecode.nspname,IEvent_setProcessedRequestMsg.typecode.pname)] = 'soap_IEvent_setProcessed'

    def soap_IEvent_waitProcessed(self, ps, **kw):
        request = ps.Parse(IEvent_waitProcessedRequestMsg.typecode)
        return request,IEvent_waitProcessedResultMsg()

    soapAction[''] = 'soap_IEvent_waitProcessed'
    root[(IEvent_waitProcessedRequestMsg.typecode.nspname,IEvent_waitProcessedRequestMsg.typecode.pname)] = 'soap_IEvent_waitProcessed'

    def soap_IReusableEvent_getGeneration(self, ps, **kw):
        request = ps.Parse(IReusableEvent_getGenerationRequestMsg.typecode)
        return request,IReusableEvent_getGenerationResultMsg()

    soapAction[''] = 'soap_IReusableEvent_getGeneration'
    root[(IReusableEvent_getGenerationRequestMsg.typecode.nspname,IReusableEvent_getGenerationRequestMsg.typecode.pname)] = 'soap_IReusableEvent_getGeneration'

    def soap_IReusableEvent_reuse(self, ps, **kw):
        request = ps.Parse(IReusableEvent_reuseRequestMsg.typecode)
        return request,IReusableEvent_reuseResultMsg()

    soapAction[''] = 'soap_IReusableEvent_reuse'
    root[(IReusableEvent_reuseRequestMsg.typecode.nspname,IReusableEvent_reuseRequestMsg.typecode.pname)] = 'soap_IReusableEvent_reuse'

    def soap_IMachineEvent_getMachineId(self, ps, **kw):
        request = ps.Parse(IMachineEvent_getMachineIdRequestMsg.typecode)
        return request,IMachineEvent_getMachineIdResultMsg()

    soapAction[''] = 'soap_IMachineEvent_getMachineId'
    root[(IMachineEvent_getMachineIdRequestMsg.typecode.nspname,IMachineEvent_getMachineIdRequestMsg.typecode.pname)] = 'soap_IMachineEvent_getMachineId'

    def soap_IMachineStateChangedEvent_getState(self, ps, **kw):
        request = ps.Parse(IMachineStateChangedEvent_getStateRequestMsg.typecode)
        return request,IMachineStateChangedEvent_getStateResultMsg()

    soapAction[''] = 'soap_IMachineStateChangedEvent_getState'
    root[(IMachineStateChangedEvent_getStateRequestMsg.typecode.nspname,IMachineStateChangedEvent_getStateRequestMsg.typecode.pname)] = 'soap_IMachineStateChangedEvent_getState'

    def soap_IMachineDataChangedEvent_getTemporary(self, ps, **kw):
        request = ps.Parse(IMachineDataChangedEvent_getTemporaryRequestMsg.typecode)
        return request,IMachineDataChangedEvent_getTemporaryResultMsg()

    soapAction[''] = 'soap_IMachineDataChangedEvent_getTemporary'
    root[(IMachineDataChangedEvent_getTemporaryRequestMsg.typecode.nspname,IMachineDataChangedEvent_getTemporaryRequestMsg.typecode.pname)] = 'soap_IMachineDataChangedEvent_getTemporary'

    def soap_IMediumRegisteredEvent_getMediumId(self, ps, **kw):
        request = ps.Parse(IMediumRegisteredEvent_getMediumIdRequestMsg.typecode)
        return request,IMediumRegisteredEvent_getMediumIdResultMsg()

    soapAction[''] = 'soap_IMediumRegisteredEvent_getMediumId'
    root[(IMediumRegisteredEvent_getMediumIdRequestMsg.typecode.nspname,IMediumRegisteredEvent_getMediumIdRequestMsg.typecode.pname)] = 'soap_IMediumRegisteredEvent_getMediumId'

    def soap_IMediumRegisteredEvent_getMediumType(self, ps, **kw):
        request = ps.Parse(IMediumRegisteredEvent_getMediumTypeRequestMsg.typecode)
        return request,IMediumRegisteredEvent_getMediumTypeResultMsg()

    soapAction[''] = 'soap_IMediumRegisteredEvent_getMediumType'
    root[(IMediumRegisteredEvent_getMediumTypeRequestMsg.typecode.nspname,IMediumRegisteredEvent_getMediumTypeRequestMsg.typecode.pname)] = 'soap_IMediumRegisteredEvent_getMediumType'

    def soap_IMediumRegisteredEvent_getRegistered(self, ps, **kw):
        request = ps.Parse(IMediumRegisteredEvent_getRegisteredRequestMsg.typecode)
        return request,IMediumRegisteredEvent_getRegisteredResultMsg()

    soapAction[''] = 'soap_IMediumRegisteredEvent_getRegistered'
    root[(IMediumRegisteredEvent_getRegisteredRequestMsg.typecode.nspname,IMediumRegisteredEvent_getRegisteredRequestMsg.typecode.pname)] = 'soap_IMediumRegisteredEvent_getRegistered'

    def soap_IMediumConfigChangedEvent_getMedium(self, ps, **kw):
        request = ps.Parse(IMediumConfigChangedEvent_getMediumRequestMsg.typecode)
        return request,IMediumConfigChangedEvent_getMediumResultMsg()

    soapAction[''] = 'soap_IMediumConfigChangedEvent_getMedium'
    root[(IMediumConfigChangedEvent_getMediumRequestMsg.typecode.nspname,IMediumConfigChangedEvent_getMediumRequestMsg.typecode.pname)] = 'soap_IMediumConfigChangedEvent_getMedium'

    def soap_IMachineRegisteredEvent_getRegistered(self, ps, **kw):
        request = ps.Parse(IMachineRegisteredEvent_getRegisteredRequestMsg.typecode)
        return request,IMachineRegisteredEvent_getRegisteredResultMsg()

    soapAction[''] = 'soap_IMachineRegisteredEvent_getRegistered'
    root[(IMachineRegisteredEvent_getRegisteredRequestMsg.typecode.nspname,IMachineRegisteredEvent_getRegisteredRequestMsg.typecode.pname)] = 'soap_IMachineRegisteredEvent_getRegistered'

    def soap_ISessionStateChangedEvent_getState(self, ps, **kw):
        request = ps.Parse(ISessionStateChangedEvent_getStateRequestMsg.typecode)
        return request,ISessionStateChangedEvent_getStateResultMsg()

    soapAction[''] = 'soap_ISessionStateChangedEvent_getState'
    root[(ISessionStateChangedEvent_getStateRequestMsg.typecode.nspname,ISessionStateChangedEvent_getStateRequestMsg.typecode.pname)] = 'soap_ISessionStateChangedEvent_getState'

    def soap_IGuestPropertyChangedEvent_getName(self, ps, **kw):
        request = ps.Parse(IGuestPropertyChangedEvent_getNameRequestMsg.typecode)
        return request,IGuestPropertyChangedEvent_getNameResultMsg()

    soapAction[''] = 'soap_IGuestPropertyChangedEvent_getName'
    root[(IGuestPropertyChangedEvent_getNameRequestMsg.typecode.nspname,IGuestPropertyChangedEvent_getNameRequestMsg.typecode.pname)] = 'soap_IGuestPropertyChangedEvent_getName'

    def soap_IGuestPropertyChangedEvent_getValue(self, ps, **kw):
        request = ps.Parse(IGuestPropertyChangedEvent_getValueRequestMsg.typecode)
        return request,IGuestPropertyChangedEvent_getValueResultMsg()

    soapAction[''] = 'soap_IGuestPropertyChangedEvent_getValue'
    root[(IGuestPropertyChangedEvent_getValueRequestMsg.typecode.nspname,IGuestPropertyChangedEvent_getValueRequestMsg.typecode.pname)] = 'soap_IGuestPropertyChangedEvent_getValue'

    def soap_IGuestPropertyChangedEvent_getFlags(self, ps, **kw):
        request = ps.Parse(IGuestPropertyChangedEvent_getFlagsRequestMsg.typecode)
        return request,IGuestPropertyChangedEvent_getFlagsResultMsg()

    soapAction[''] = 'soap_IGuestPropertyChangedEvent_getFlags'
    root[(IGuestPropertyChangedEvent_getFlagsRequestMsg.typecode.nspname,IGuestPropertyChangedEvent_getFlagsRequestMsg.typecode.pname)] = 'soap_IGuestPropertyChangedEvent_getFlags'

    def soap_ISnapshotEvent_getSnapshotId(self, ps, **kw):
        request = ps.Parse(ISnapshotEvent_getSnapshotIdRequestMsg.typecode)
        return request,ISnapshotEvent_getSnapshotIdResultMsg()

    soapAction[''] = 'soap_ISnapshotEvent_getSnapshotId'
    root[(ISnapshotEvent_getSnapshotIdRequestMsg.typecode.nspname,ISnapshotEvent_getSnapshotIdRequestMsg.typecode.pname)] = 'soap_ISnapshotEvent_getSnapshotId'

    def soap_ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfaces'

    def soap_ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfaces'

    def soap_ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfaces'

    def soap_ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IMousePointerShapeChangedEvent_getVisible(self, ps, **kw):
        request = ps.Parse(IMousePointerShapeChangedEvent_getVisibleRequestMsg.typecode)
        return request,IMousePointerShapeChangedEvent_getVisibleResultMsg()

    soapAction[''] = 'soap_IMousePointerShapeChangedEvent_getVisible'
    root[(IMousePointerShapeChangedEvent_getVisibleRequestMsg.typecode.nspname,IMousePointerShapeChangedEvent_getVisibleRequestMsg.typecode.pname)] = 'soap_IMousePointerShapeChangedEvent_getVisible'

    def soap_IMousePointerShapeChangedEvent_getAlpha(self, ps, **kw):
        request = ps.Parse(IMousePointerShapeChangedEvent_getAlphaRequestMsg.typecode)
        return request,IMousePointerShapeChangedEvent_getAlphaResultMsg()

    soapAction[''] = 'soap_IMousePointerShapeChangedEvent_getAlpha'
    root[(IMousePointerShapeChangedEvent_getAlphaRequestMsg.typecode.nspname,IMousePointerShapeChangedEvent_getAlphaRequestMsg.typecode.pname)] = 'soap_IMousePointerShapeChangedEvent_getAlpha'

    def soap_IMousePointerShapeChangedEvent_getXhot(self, ps, **kw):
        request = ps.Parse(IMousePointerShapeChangedEvent_getXhotRequestMsg.typecode)
        return request,IMousePointerShapeChangedEvent_getXhotResultMsg()

    soapAction[''] = 'soap_IMousePointerShapeChangedEvent_getXhot'
    root[(IMousePointerShapeChangedEvent_getXhotRequestMsg.typecode.nspname,IMousePointerShapeChangedEvent_getXhotRequestMsg.typecode.pname)] = 'soap_IMousePointerShapeChangedEvent_getXhot'

    def soap_IMousePointerShapeChangedEvent_getYhot(self, ps, **kw):
        request = ps.Parse(IMousePointerShapeChangedEvent_getYhotRequestMsg.typecode)
        return request,IMousePointerShapeChangedEvent_getYhotResultMsg()

    soapAction[''] = 'soap_IMousePointerShapeChangedEvent_getYhot'
    root[(IMousePointerShapeChangedEvent_getYhotRequestMsg.typecode.nspname,IMousePointerShapeChangedEvent_getYhotRequestMsg.typecode.pname)] = 'soap_IMousePointerShapeChangedEvent_getYhot'

    def soap_IMousePointerShapeChangedEvent_getWidth(self, ps, **kw):
        request = ps.Parse(IMousePointerShapeChangedEvent_getWidthRequestMsg.typecode)
        return request,IMousePointerShapeChangedEvent_getWidthResultMsg()

    soapAction[''] = 'soap_IMousePointerShapeChangedEvent_getWidth'
    root[(IMousePointerShapeChangedEvent_getWidthRequestMsg.typecode.nspname,IMousePointerShapeChangedEvent_getWidthRequestMsg.typecode.pname)] = 'soap_IMousePointerShapeChangedEvent_getWidth'

    def soap_IMousePointerShapeChangedEvent_getHeight(self, ps, **kw):
        request = ps.Parse(IMousePointerShapeChangedEvent_getHeightRequestMsg.typecode)
        return request,IMousePointerShapeChangedEvent_getHeightResultMsg()

    soapAction[''] = 'soap_IMousePointerShapeChangedEvent_getHeight'
    root[(IMousePointerShapeChangedEvent_getHeightRequestMsg.typecode.nspname,IMousePointerShapeChangedEvent_getHeightRequestMsg.typecode.pname)] = 'soap_IMousePointerShapeChangedEvent_getHeight'

    def soap_IMousePointerShapeChangedEvent_getShape(self, ps, **kw):
        request = ps.Parse(IMousePointerShapeChangedEvent_getShapeRequestMsg.typecode)
        return request,IMousePointerShapeChangedEvent_getShapeResultMsg()

    soapAction[''] = 'soap_IMousePointerShapeChangedEvent_getShape'
    root[(IMousePointerShapeChangedEvent_getShapeRequestMsg.typecode.nspname,IMousePointerShapeChangedEvent_getShapeRequestMsg.typecode.pname)] = 'soap_IMousePointerShapeChangedEvent_getShape'

    def soap_IMouseCapabilityChangedEvent_getSupportsAbsolute(self, ps, **kw):
        request = ps.Parse(IMouseCapabilityChangedEvent_getSupportsAbsoluteRequestMsg.typecode)
        return request,IMouseCapabilityChangedEvent_getSupportsAbsoluteResultMsg()

    soapAction[''] = 'soap_IMouseCapabilityChangedEvent_getSupportsAbsolute'
    root[(IMouseCapabilityChangedEvent_getSupportsAbsoluteRequestMsg.typecode.nspname,IMouseCapabilityChangedEvent_getSupportsAbsoluteRequestMsg.typecode.pname)] = 'soap_IMouseCapabilityChangedEvent_getSupportsAbsolute'

    def soap_IMouseCapabilityChangedEvent_getSupportsRelative(self, ps, **kw):
        request = ps.Parse(IMouseCapabilityChangedEvent_getSupportsRelativeRequestMsg.typecode)
        return request,IMouseCapabilityChangedEvent_getSupportsRelativeResultMsg()

    soapAction[''] = 'soap_IMouseCapabilityChangedEvent_getSupportsRelative'
    root[(IMouseCapabilityChangedEvent_getSupportsRelativeRequestMsg.typecode.nspname,IMouseCapabilityChangedEvent_getSupportsRelativeRequestMsg.typecode.pname)] = 'soap_IMouseCapabilityChangedEvent_getSupportsRelative'

    def soap_IMouseCapabilityChangedEvent_getSupportsMultiTouch(self, ps, **kw):
        request = ps.Parse(IMouseCapabilityChangedEvent_getSupportsMultiTouchRequestMsg.typecode)
        return request,IMouseCapabilityChangedEvent_getSupportsMultiTouchResultMsg()

    soapAction[''] = 'soap_IMouseCapabilityChangedEvent_getSupportsMultiTouch'
    root[(IMouseCapabilityChangedEvent_getSupportsMultiTouchRequestMsg.typecode.nspname,IMouseCapabilityChangedEvent_getSupportsMultiTouchRequestMsg.typecode.pname)] = 'soap_IMouseCapabilityChangedEvent_getSupportsMultiTouch'

    def soap_IMouseCapabilityChangedEvent_getNeedsHostCursor(self, ps, **kw):
        request = ps.Parse(IMouseCapabilityChangedEvent_getNeedsHostCursorRequestMsg.typecode)
        return request,IMouseCapabilityChangedEvent_getNeedsHostCursorResultMsg()

    soapAction[''] = 'soap_IMouseCapabilityChangedEvent_getNeedsHostCursor'
    root[(IMouseCapabilityChangedEvent_getNeedsHostCursorRequestMsg.typecode.nspname,IMouseCapabilityChangedEvent_getNeedsHostCursorRequestMsg.typecode.pname)] = 'soap_IMouseCapabilityChangedEvent_getNeedsHostCursor'

    def soap_IKeyboardLedsChangedEvent_getNumLock(self, ps, **kw):
        request = ps.Parse(IKeyboardLedsChangedEvent_getNumLockRequestMsg.typecode)
        return request,IKeyboardLedsChangedEvent_getNumLockResultMsg()

    soapAction[''] = 'soap_IKeyboardLedsChangedEvent_getNumLock'
    root[(IKeyboardLedsChangedEvent_getNumLockRequestMsg.typecode.nspname,IKeyboardLedsChangedEvent_getNumLockRequestMsg.typecode.pname)] = 'soap_IKeyboardLedsChangedEvent_getNumLock'

    def soap_IKeyboardLedsChangedEvent_getCapsLock(self, ps, **kw):
        request = ps.Parse(IKeyboardLedsChangedEvent_getCapsLockRequestMsg.typecode)
        return request,IKeyboardLedsChangedEvent_getCapsLockResultMsg()

    soapAction[''] = 'soap_IKeyboardLedsChangedEvent_getCapsLock'
    root[(IKeyboardLedsChangedEvent_getCapsLockRequestMsg.typecode.nspname,IKeyboardLedsChangedEvent_getCapsLockRequestMsg.typecode.pname)] = 'soap_IKeyboardLedsChangedEvent_getCapsLock'

    def soap_IKeyboardLedsChangedEvent_getScrollLock(self, ps, **kw):
        request = ps.Parse(IKeyboardLedsChangedEvent_getScrollLockRequestMsg.typecode)
        return request,IKeyboardLedsChangedEvent_getScrollLockResultMsg()

    soapAction[''] = 'soap_IKeyboardLedsChangedEvent_getScrollLock'
    root[(IKeyboardLedsChangedEvent_getScrollLockRequestMsg.typecode.nspname,IKeyboardLedsChangedEvent_getScrollLockRequestMsg.typecode.pname)] = 'soap_IKeyboardLedsChangedEvent_getScrollLock'

    def soap_IStateChangedEvent_getState(self, ps, **kw):
        request = ps.Parse(IStateChangedEvent_getStateRequestMsg.typecode)
        return request,IStateChangedEvent_getStateResultMsg()

    soapAction[''] = 'soap_IStateChangedEvent_getState'
    root[(IStateChangedEvent_getStateRequestMsg.typecode.nspname,IStateChangedEvent_getStateRequestMsg.typecode.pname)] = 'soap_IStateChangedEvent_getState'

    def soap_IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfaces'

    def soap_INetworkAdapterChangedEvent_getNetworkAdapter(self, ps, **kw):
        request = ps.Parse(INetworkAdapterChangedEvent_getNetworkAdapterRequestMsg.typecode)
        return request,INetworkAdapterChangedEvent_getNetworkAdapterResultMsg()

    soapAction[''] = 'soap_INetworkAdapterChangedEvent_getNetworkAdapter'
    root[(INetworkAdapterChangedEvent_getNetworkAdapterRequestMsg.typecode.nspname,INetworkAdapterChangedEvent_getNetworkAdapterRequestMsg.typecode.pname)] = 'soap_INetworkAdapterChangedEvent_getNetworkAdapter'

    def soap_ISerialPortChangedEvent_getSerialPort(self, ps, **kw):
        request = ps.Parse(ISerialPortChangedEvent_getSerialPortRequestMsg.typecode)
        return request,ISerialPortChangedEvent_getSerialPortResultMsg()

    soapAction[''] = 'soap_ISerialPortChangedEvent_getSerialPort'
    root[(ISerialPortChangedEvent_getSerialPortRequestMsg.typecode.nspname,ISerialPortChangedEvent_getSerialPortRequestMsg.typecode.pname)] = 'soap_ISerialPortChangedEvent_getSerialPort'

    def soap_IParallelPortChangedEvent_getParallelPort(self, ps, **kw):
        request = ps.Parse(IParallelPortChangedEvent_getParallelPortRequestMsg.typecode)
        return request,IParallelPortChangedEvent_getParallelPortResultMsg()

    soapAction[''] = 'soap_IParallelPortChangedEvent_getParallelPort'
    root[(IParallelPortChangedEvent_getParallelPortRequestMsg.typecode.nspname,IParallelPortChangedEvent_getParallelPortRequestMsg.typecode.pname)] = 'soap_IParallelPortChangedEvent_getParallelPort'

    def soap_IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IMediumChangedEvent_getMediumAttachment(self, ps, **kw):
        request = ps.Parse(IMediumChangedEvent_getMediumAttachmentRequestMsg.typecode)
        return request,IMediumChangedEvent_getMediumAttachmentResultMsg()

    soapAction[''] = 'soap_IMediumChangedEvent_getMediumAttachment'
    root[(IMediumChangedEvent_getMediumAttachmentRequestMsg.typecode.nspname,IMediumChangedEvent_getMediumAttachmentRequestMsg.typecode.pname)] = 'soap_IMediumChangedEvent_getMediumAttachment'

    def soap_IClipboardModeChangedEvent_getClipboardMode(self, ps, **kw):
        request = ps.Parse(IClipboardModeChangedEvent_getClipboardModeRequestMsg.typecode)
        return request,IClipboardModeChangedEvent_getClipboardModeResultMsg()

    soapAction[''] = 'soap_IClipboardModeChangedEvent_getClipboardMode'
    root[(IClipboardModeChangedEvent_getClipboardModeRequestMsg.typecode.nspname,IClipboardModeChangedEvent_getClipboardModeRequestMsg.typecode.pname)] = 'soap_IClipboardModeChangedEvent_getClipboardMode'

    def soap_IDnDModeChangedEvent_getDndMode(self, ps, **kw):
        request = ps.Parse(IDnDModeChangedEvent_getDndModeRequestMsg.typecode)
        return request,IDnDModeChangedEvent_getDndModeResultMsg()

    soapAction[''] = 'soap_IDnDModeChangedEvent_getDndMode'
    root[(IDnDModeChangedEvent_getDndModeRequestMsg.typecode.nspname,IDnDModeChangedEvent_getDndModeRequestMsg.typecode.pname)] = 'soap_IDnDModeChangedEvent_getDndMode'

    def soap_ICPUChangedEvent_getCPU(self, ps, **kw):
        request = ps.Parse(ICPUChangedEvent_getCPURequestMsg.typecode)
        return request,ICPUChangedEvent_getCPUResultMsg()

    soapAction[''] = 'soap_ICPUChangedEvent_getCPU'
    root[(ICPUChangedEvent_getCPURequestMsg.typecode.nspname,ICPUChangedEvent_getCPURequestMsg.typecode.pname)] = 'soap_ICPUChangedEvent_getCPU'

    def soap_ICPUChangedEvent_getAdd(self, ps, **kw):
        request = ps.Parse(ICPUChangedEvent_getAddRequestMsg.typecode)
        return request,ICPUChangedEvent_getAddResultMsg()

    soapAction[''] = 'soap_ICPUChangedEvent_getAdd'
    root[(ICPUChangedEvent_getAddRequestMsg.typecode.nspname,ICPUChangedEvent_getAddRequestMsg.typecode.pname)] = 'soap_ICPUChangedEvent_getAdd'

    def soap_ICPUExecutionCapChangedEvent_getExecutionCap(self, ps, **kw):
        request = ps.Parse(ICPUExecutionCapChangedEvent_getExecutionCapRequestMsg.typecode)
        return request,ICPUExecutionCapChangedEvent_getExecutionCapResultMsg()

    soapAction[''] = 'soap_ICPUExecutionCapChangedEvent_getExecutionCap'
    root[(ICPUExecutionCapChangedEvent_getExecutionCapRequestMsg.typecode.nspname,ICPUExecutionCapChangedEvent_getExecutionCapRequestMsg.typecode.pname)] = 'soap_ICPUExecutionCapChangedEvent_getExecutionCap'

    def soap_IGuestKeyboardEvent_getScancodes(self, ps, **kw):
        request = ps.Parse(IGuestKeyboardEvent_getScancodesRequestMsg.typecode)
        return request,IGuestKeyboardEvent_getScancodesResultMsg()

    soapAction[''] = 'soap_IGuestKeyboardEvent_getScancodes'
    root[(IGuestKeyboardEvent_getScancodesRequestMsg.typecode.nspname,IGuestKeyboardEvent_getScancodesRequestMsg.typecode.pname)] = 'soap_IGuestKeyboardEvent_getScancodes'

    def soap_IGuestMouseEvent_getMode(self, ps, **kw):
        request = ps.Parse(IGuestMouseEvent_getModeRequestMsg.typecode)
        return request,IGuestMouseEvent_getModeResultMsg()

    soapAction[''] = 'soap_IGuestMouseEvent_getMode'
    root[(IGuestMouseEvent_getModeRequestMsg.typecode.nspname,IGuestMouseEvent_getModeRequestMsg.typecode.pname)] = 'soap_IGuestMouseEvent_getMode'

    def soap_IGuestMouseEvent_getX(self, ps, **kw):
        request = ps.Parse(IGuestMouseEvent_getXRequestMsg.typecode)
        return request,IGuestMouseEvent_getXResultMsg()

    soapAction[''] = 'soap_IGuestMouseEvent_getX'
    root[(IGuestMouseEvent_getXRequestMsg.typecode.nspname,IGuestMouseEvent_getXRequestMsg.typecode.pname)] = 'soap_IGuestMouseEvent_getX'

    def soap_IGuestMouseEvent_getY(self, ps, **kw):
        request = ps.Parse(IGuestMouseEvent_getYRequestMsg.typecode)
        return request,IGuestMouseEvent_getYResultMsg()

    soapAction[''] = 'soap_IGuestMouseEvent_getY'
    root[(IGuestMouseEvent_getYRequestMsg.typecode.nspname,IGuestMouseEvent_getYRequestMsg.typecode.pname)] = 'soap_IGuestMouseEvent_getY'

    def soap_IGuestMouseEvent_getZ(self, ps, **kw):
        request = ps.Parse(IGuestMouseEvent_getZRequestMsg.typecode)
        return request,IGuestMouseEvent_getZResultMsg()

    soapAction[''] = 'soap_IGuestMouseEvent_getZ'
    root[(IGuestMouseEvent_getZRequestMsg.typecode.nspname,IGuestMouseEvent_getZRequestMsg.typecode.pname)] = 'soap_IGuestMouseEvent_getZ'

    def soap_IGuestMouseEvent_getW(self, ps, **kw):
        request = ps.Parse(IGuestMouseEvent_getWRequestMsg.typecode)
        return request,IGuestMouseEvent_getWResultMsg()

    soapAction[''] = 'soap_IGuestMouseEvent_getW'
    root[(IGuestMouseEvent_getWRequestMsg.typecode.nspname,IGuestMouseEvent_getWRequestMsg.typecode.pname)] = 'soap_IGuestMouseEvent_getW'

    def soap_IGuestMouseEvent_getButtons(self, ps, **kw):
        request = ps.Parse(IGuestMouseEvent_getButtonsRequestMsg.typecode)
        return request,IGuestMouseEvent_getButtonsResultMsg()

    soapAction[''] = 'soap_IGuestMouseEvent_getButtons'
    root[(IGuestMouseEvent_getButtonsRequestMsg.typecode.nspname,IGuestMouseEvent_getButtonsRequestMsg.typecode.pname)] = 'soap_IGuestMouseEvent_getButtons'

    def soap_IGuestMultiTouchEvent_getContactCount(self, ps, **kw):
        request = ps.Parse(IGuestMultiTouchEvent_getContactCountRequestMsg.typecode)
        return request,IGuestMultiTouchEvent_getContactCountResultMsg()

    soapAction[''] = 'soap_IGuestMultiTouchEvent_getContactCount'
    root[(IGuestMultiTouchEvent_getContactCountRequestMsg.typecode.nspname,IGuestMultiTouchEvent_getContactCountRequestMsg.typecode.pname)] = 'soap_IGuestMultiTouchEvent_getContactCount'

    def soap_IGuestMultiTouchEvent_getXPositions(self, ps, **kw):
        request = ps.Parse(IGuestMultiTouchEvent_getXPositionsRequestMsg.typecode)
        return request,IGuestMultiTouchEvent_getXPositionsResultMsg()

    soapAction[''] = 'soap_IGuestMultiTouchEvent_getXPositions'
    root[(IGuestMultiTouchEvent_getXPositionsRequestMsg.typecode.nspname,IGuestMultiTouchEvent_getXPositionsRequestMsg.typecode.pname)] = 'soap_IGuestMultiTouchEvent_getXPositions'

    def soap_IGuestMultiTouchEvent_getYPositions(self, ps, **kw):
        request = ps.Parse(IGuestMultiTouchEvent_getYPositionsRequestMsg.typecode)
        return request,IGuestMultiTouchEvent_getYPositionsResultMsg()

    soapAction[''] = 'soap_IGuestMultiTouchEvent_getYPositions'
    root[(IGuestMultiTouchEvent_getYPositionsRequestMsg.typecode.nspname,IGuestMultiTouchEvent_getYPositionsRequestMsg.typecode.pname)] = 'soap_IGuestMultiTouchEvent_getYPositions'

    def soap_IGuestMultiTouchEvent_getContactIds(self, ps, **kw):
        request = ps.Parse(IGuestMultiTouchEvent_getContactIdsRequestMsg.typecode)
        return request,IGuestMultiTouchEvent_getContactIdsResultMsg()

    soapAction[''] = 'soap_IGuestMultiTouchEvent_getContactIds'
    root[(IGuestMultiTouchEvent_getContactIdsRequestMsg.typecode.nspname,IGuestMultiTouchEvent_getContactIdsRequestMsg.typecode.pname)] = 'soap_IGuestMultiTouchEvent_getContactIds'

    def soap_IGuestMultiTouchEvent_getContactFlags(self, ps, **kw):
        request = ps.Parse(IGuestMultiTouchEvent_getContactFlagsRequestMsg.typecode)
        return request,IGuestMultiTouchEvent_getContactFlagsResultMsg()

    soapAction[''] = 'soap_IGuestMultiTouchEvent_getContactFlags'
    root[(IGuestMultiTouchEvent_getContactFlagsRequestMsg.typecode.nspname,IGuestMultiTouchEvent_getContactFlagsRequestMsg.typecode.pname)] = 'soap_IGuestMultiTouchEvent_getContactFlags'

    def soap_IGuestMultiTouchEvent_getScanTime(self, ps, **kw):
        request = ps.Parse(IGuestMultiTouchEvent_getScanTimeRequestMsg.typecode)
        return request,IGuestMultiTouchEvent_getScanTimeResultMsg()

    soapAction[''] = 'soap_IGuestMultiTouchEvent_getScanTime'
    root[(IGuestMultiTouchEvent_getScanTimeRequestMsg.typecode.nspname,IGuestMultiTouchEvent_getScanTimeRequestMsg.typecode.pname)] = 'soap_IGuestMultiTouchEvent_getScanTime'

    def soap_IGuestSessionEvent_getSession(self, ps, **kw):
        request = ps.Parse(IGuestSessionEvent_getSessionRequestMsg.typecode)
        return request,IGuestSessionEvent_getSessionResultMsg()

    soapAction[''] = 'soap_IGuestSessionEvent_getSession'
    root[(IGuestSessionEvent_getSessionRequestMsg.typecode.nspname,IGuestSessionEvent_getSessionRequestMsg.typecode.pname)] = 'soap_IGuestSessionEvent_getSession'

    def soap_IGuestSessionStateChangedEvent_getId(self, ps, **kw):
        request = ps.Parse(IGuestSessionStateChangedEvent_getIdRequestMsg.typecode)
        return request,IGuestSessionStateChangedEvent_getIdResultMsg()

    soapAction[''] = 'soap_IGuestSessionStateChangedEvent_getId'
    root[(IGuestSessionStateChangedEvent_getIdRequestMsg.typecode.nspname,IGuestSessionStateChangedEvent_getIdRequestMsg.typecode.pname)] = 'soap_IGuestSessionStateChangedEvent_getId'

    def soap_IGuestSessionStateChangedEvent_getStatus(self, ps, **kw):
        request = ps.Parse(IGuestSessionStateChangedEvent_getStatusRequestMsg.typecode)
        return request,IGuestSessionStateChangedEvent_getStatusResultMsg()

    soapAction[''] = 'soap_IGuestSessionStateChangedEvent_getStatus'
    root[(IGuestSessionStateChangedEvent_getStatusRequestMsg.typecode.nspname,IGuestSessionStateChangedEvent_getStatusRequestMsg.typecode.pname)] = 'soap_IGuestSessionStateChangedEvent_getStatus'

    def soap_IGuestSessionStateChangedEvent_getError(self, ps, **kw):
        request = ps.Parse(IGuestSessionStateChangedEvent_getErrorRequestMsg.typecode)
        return request,IGuestSessionStateChangedEvent_getErrorResultMsg()

    soapAction[''] = 'soap_IGuestSessionStateChangedEvent_getError'
    root[(IGuestSessionStateChangedEvent_getErrorRequestMsg.typecode.nspname,IGuestSessionStateChangedEvent_getErrorRequestMsg.typecode.pname)] = 'soap_IGuestSessionStateChangedEvent_getError'

    def soap_IGuestSessionRegisteredEvent_getRegistered(self, ps, **kw):
        request = ps.Parse(IGuestSessionRegisteredEvent_getRegisteredRequestMsg.typecode)
        return request,IGuestSessionRegisteredEvent_getRegisteredResultMsg()

    soapAction[''] = 'soap_IGuestSessionRegisteredEvent_getRegistered'
    root[(IGuestSessionRegisteredEvent_getRegisteredRequestMsg.typecode.nspname,IGuestSessionRegisteredEvent_getRegisteredRequestMsg.typecode.pname)] = 'soap_IGuestSessionRegisteredEvent_getRegistered'

    def soap_IGuestProcessEvent_getProcess(self, ps, **kw):
        request = ps.Parse(IGuestProcessEvent_getProcessRequestMsg.typecode)
        return request,IGuestProcessEvent_getProcessResultMsg()

    soapAction[''] = 'soap_IGuestProcessEvent_getProcess'
    root[(IGuestProcessEvent_getProcessRequestMsg.typecode.nspname,IGuestProcessEvent_getProcessRequestMsg.typecode.pname)] = 'soap_IGuestProcessEvent_getProcess'

    def soap_IGuestProcessEvent_getPid(self, ps, **kw):
        request = ps.Parse(IGuestProcessEvent_getPidRequestMsg.typecode)
        return request,IGuestProcessEvent_getPidResultMsg()

    soapAction[''] = 'soap_IGuestProcessEvent_getPid'
    root[(IGuestProcessEvent_getPidRequestMsg.typecode.nspname,IGuestProcessEvent_getPidRequestMsg.typecode.pname)] = 'soap_IGuestProcessEvent_getPid'

    def soap_IGuestProcessRegisteredEvent_getRegistered(self, ps, **kw):
        request = ps.Parse(IGuestProcessRegisteredEvent_getRegisteredRequestMsg.typecode)
        return request,IGuestProcessRegisteredEvent_getRegisteredResultMsg()

    soapAction[''] = 'soap_IGuestProcessRegisteredEvent_getRegistered'
    root[(IGuestProcessRegisteredEvent_getRegisteredRequestMsg.typecode.nspname,IGuestProcessRegisteredEvent_getRegisteredRequestMsg.typecode.pname)] = 'soap_IGuestProcessRegisteredEvent_getRegistered'

    def soap_IGuestProcessStateChangedEvent_getStatus(self, ps, **kw):
        request = ps.Parse(IGuestProcessStateChangedEvent_getStatusRequestMsg.typecode)
        return request,IGuestProcessStateChangedEvent_getStatusResultMsg()

    soapAction[''] = 'soap_IGuestProcessStateChangedEvent_getStatus'
    root[(IGuestProcessStateChangedEvent_getStatusRequestMsg.typecode.nspname,IGuestProcessStateChangedEvent_getStatusRequestMsg.typecode.pname)] = 'soap_IGuestProcessStateChangedEvent_getStatus'

    def soap_IGuestProcessStateChangedEvent_getError(self, ps, **kw):
        request = ps.Parse(IGuestProcessStateChangedEvent_getErrorRequestMsg.typecode)
        return request,IGuestProcessStateChangedEvent_getErrorResultMsg()

    soapAction[''] = 'soap_IGuestProcessStateChangedEvent_getError'
    root[(IGuestProcessStateChangedEvent_getErrorRequestMsg.typecode.nspname,IGuestProcessStateChangedEvent_getErrorRequestMsg.typecode.pname)] = 'soap_IGuestProcessStateChangedEvent_getError'

    def soap_IGuestProcessIOEvent_getHandle(self, ps, **kw):
        request = ps.Parse(IGuestProcessIOEvent_getHandleRequestMsg.typecode)
        return request,IGuestProcessIOEvent_getHandleResultMsg()

    soapAction[''] = 'soap_IGuestProcessIOEvent_getHandle'
    root[(IGuestProcessIOEvent_getHandleRequestMsg.typecode.nspname,IGuestProcessIOEvent_getHandleRequestMsg.typecode.pname)] = 'soap_IGuestProcessIOEvent_getHandle'

    def soap_IGuestProcessIOEvent_getProcessed(self, ps, **kw):
        request = ps.Parse(IGuestProcessIOEvent_getProcessedRequestMsg.typecode)
        return request,IGuestProcessIOEvent_getProcessedResultMsg()

    soapAction[''] = 'soap_IGuestProcessIOEvent_getProcessed'
    root[(IGuestProcessIOEvent_getProcessedRequestMsg.typecode.nspname,IGuestProcessIOEvent_getProcessedRequestMsg.typecode.pname)] = 'soap_IGuestProcessIOEvent_getProcessed'

    def soap_IGuestProcessInputNotifyEvent_getStatus(self, ps, **kw):
        request = ps.Parse(IGuestProcessInputNotifyEvent_getStatusRequestMsg.typecode)
        return request,IGuestProcessInputNotifyEvent_getStatusResultMsg()

    soapAction[''] = 'soap_IGuestProcessInputNotifyEvent_getStatus'
    root[(IGuestProcessInputNotifyEvent_getStatusRequestMsg.typecode.nspname,IGuestProcessInputNotifyEvent_getStatusRequestMsg.typecode.pname)] = 'soap_IGuestProcessInputNotifyEvent_getStatus'

    def soap_IGuestProcessOutputEvent_getData(self, ps, **kw):
        request = ps.Parse(IGuestProcessOutputEvent_getDataRequestMsg.typecode)
        return request,IGuestProcessOutputEvent_getDataResultMsg()

    soapAction[''] = 'soap_IGuestProcessOutputEvent_getData'
    root[(IGuestProcessOutputEvent_getDataRequestMsg.typecode.nspname,IGuestProcessOutputEvent_getDataRequestMsg.typecode.pname)] = 'soap_IGuestProcessOutputEvent_getData'

    def soap_IGuestFileEvent_getFile(self, ps, **kw):
        request = ps.Parse(IGuestFileEvent_getFileRequestMsg.typecode)
        return request,IGuestFileEvent_getFileResultMsg()

    soapAction[''] = 'soap_IGuestFileEvent_getFile'
    root[(IGuestFileEvent_getFileRequestMsg.typecode.nspname,IGuestFileEvent_getFileRequestMsg.typecode.pname)] = 'soap_IGuestFileEvent_getFile'

    def soap_IGuestFileRegisteredEvent_getRegistered(self, ps, **kw):
        request = ps.Parse(IGuestFileRegisteredEvent_getRegisteredRequestMsg.typecode)
        return request,IGuestFileRegisteredEvent_getRegisteredResultMsg()

    soapAction[''] = 'soap_IGuestFileRegisteredEvent_getRegistered'
    root[(IGuestFileRegisteredEvent_getRegisteredRequestMsg.typecode.nspname,IGuestFileRegisteredEvent_getRegisteredRequestMsg.typecode.pname)] = 'soap_IGuestFileRegisteredEvent_getRegistered'

    def soap_IGuestFileStateChangedEvent_getStatus(self, ps, **kw):
        request = ps.Parse(IGuestFileStateChangedEvent_getStatusRequestMsg.typecode)
        return request,IGuestFileStateChangedEvent_getStatusResultMsg()

    soapAction[''] = 'soap_IGuestFileStateChangedEvent_getStatus'
    root[(IGuestFileStateChangedEvent_getStatusRequestMsg.typecode.nspname,IGuestFileStateChangedEvent_getStatusRequestMsg.typecode.pname)] = 'soap_IGuestFileStateChangedEvent_getStatus'

    def soap_IGuestFileStateChangedEvent_getError(self, ps, **kw):
        request = ps.Parse(IGuestFileStateChangedEvent_getErrorRequestMsg.typecode)
        return request,IGuestFileStateChangedEvent_getErrorResultMsg()

    soapAction[''] = 'soap_IGuestFileStateChangedEvent_getError'
    root[(IGuestFileStateChangedEvent_getErrorRequestMsg.typecode.nspname,IGuestFileStateChangedEvent_getErrorRequestMsg.typecode.pname)] = 'soap_IGuestFileStateChangedEvent_getError'

    def soap_IGuestFileIOEvent_getOffset(self, ps, **kw):
        request = ps.Parse(IGuestFileIOEvent_getOffsetRequestMsg.typecode)
        return request,IGuestFileIOEvent_getOffsetResultMsg()

    soapAction[''] = 'soap_IGuestFileIOEvent_getOffset'
    root[(IGuestFileIOEvent_getOffsetRequestMsg.typecode.nspname,IGuestFileIOEvent_getOffsetRequestMsg.typecode.pname)] = 'soap_IGuestFileIOEvent_getOffset'

    def soap_IGuestFileIOEvent_getProcessed(self, ps, **kw):
        request = ps.Parse(IGuestFileIOEvent_getProcessedRequestMsg.typecode)
        return request,IGuestFileIOEvent_getProcessedResultMsg()

    soapAction[''] = 'soap_IGuestFileIOEvent_getProcessed'
    root[(IGuestFileIOEvent_getProcessedRequestMsg.typecode.nspname,IGuestFileIOEvent_getProcessedRequestMsg.typecode.pname)] = 'soap_IGuestFileIOEvent_getProcessed'

    def soap_IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IGuestFileReadEvent_getData(self, ps, **kw):
        request = ps.Parse(IGuestFileReadEvent_getDataRequestMsg.typecode)
        return request,IGuestFileReadEvent_getDataResultMsg()

    soapAction[''] = 'soap_IGuestFileReadEvent_getData'
    root[(IGuestFileReadEvent_getDataRequestMsg.typecode.nspname,IGuestFileReadEvent_getDataRequestMsg.typecode.pname)] = 'soap_IGuestFileReadEvent_getData'

    def soap_IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IUSBDeviceStateChangedEvent_getDevice(self, ps, **kw):
        request = ps.Parse(IUSBDeviceStateChangedEvent_getDeviceRequestMsg.typecode)
        return request,IUSBDeviceStateChangedEvent_getDeviceResultMsg()

    soapAction[''] = 'soap_IUSBDeviceStateChangedEvent_getDevice'
    root[(IUSBDeviceStateChangedEvent_getDeviceRequestMsg.typecode.nspname,IUSBDeviceStateChangedEvent_getDeviceRequestMsg.typecode.pname)] = 'soap_IUSBDeviceStateChangedEvent_getDevice'

    def soap_IUSBDeviceStateChangedEvent_getAttached(self, ps, **kw):
        request = ps.Parse(IUSBDeviceStateChangedEvent_getAttachedRequestMsg.typecode)
        return request,IUSBDeviceStateChangedEvent_getAttachedResultMsg()

    soapAction[''] = 'soap_IUSBDeviceStateChangedEvent_getAttached'
    root[(IUSBDeviceStateChangedEvent_getAttachedRequestMsg.typecode.nspname,IUSBDeviceStateChangedEvent_getAttachedRequestMsg.typecode.pname)] = 'soap_IUSBDeviceStateChangedEvent_getAttached'

    def soap_IUSBDeviceStateChangedEvent_getError(self, ps, **kw):
        request = ps.Parse(IUSBDeviceStateChangedEvent_getErrorRequestMsg.typecode)
        return request,IUSBDeviceStateChangedEvent_getErrorResultMsg()

    soapAction[''] = 'soap_IUSBDeviceStateChangedEvent_getError'
    root[(IUSBDeviceStateChangedEvent_getErrorRequestMsg.typecode.nspname,IUSBDeviceStateChangedEvent_getErrorRequestMsg.typecode.pname)] = 'soap_IUSBDeviceStateChangedEvent_getError'

    def soap_ISharedFolderChangedEvent_getScope(self, ps, **kw):
        request = ps.Parse(ISharedFolderChangedEvent_getScopeRequestMsg.typecode)
        return request,ISharedFolderChangedEvent_getScopeResultMsg()

    soapAction[''] = 'soap_ISharedFolderChangedEvent_getScope'
    root[(ISharedFolderChangedEvent_getScopeRequestMsg.typecode.nspname,ISharedFolderChangedEvent_getScopeRequestMsg.typecode.pname)] = 'soap_ISharedFolderChangedEvent_getScope'

    def soap_IRuntimeErrorEvent_getFatal(self, ps, **kw):
        request = ps.Parse(IRuntimeErrorEvent_getFatalRequestMsg.typecode)
        return request,IRuntimeErrorEvent_getFatalResultMsg()

    soapAction[''] = 'soap_IRuntimeErrorEvent_getFatal'
    root[(IRuntimeErrorEvent_getFatalRequestMsg.typecode.nspname,IRuntimeErrorEvent_getFatalRequestMsg.typecode.pname)] = 'soap_IRuntimeErrorEvent_getFatal'

    def soap_IRuntimeErrorEvent_getId(self, ps, **kw):
        request = ps.Parse(IRuntimeErrorEvent_getIdRequestMsg.typecode)
        return request,IRuntimeErrorEvent_getIdResultMsg()

    soapAction[''] = 'soap_IRuntimeErrorEvent_getId'
    root[(IRuntimeErrorEvent_getIdRequestMsg.typecode.nspname,IRuntimeErrorEvent_getIdRequestMsg.typecode.pname)] = 'soap_IRuntimeErrorEvent_getId'

    def soap_IRuntimeErrorEvent_getMessage(self, ps, **kw):
        request = ps.Parse(IRuntimeErrorEvent_getMessageRequestMsg.typecode)
        return request,IRuntimeErrorEvent_getMessageResultMsg()

    soapAction[''] = 'soap_IRuntimeErrorEvent_getMessage'
    root[(IRuntimeErrorEvent_getMessageRequestMsg.typecode.nspname,IRuntimeErrorEvent_getMessageRequestMsg.typecode.pname)] = 'soap_IRuntimeErrorEvent_getMessage'

    def soap_IEventSourceChangedEvent_getListener(self, ps, **kw):
        request = ps.Parse(IEventSourceChangedEvent_getListenerRequestMsg.typecode)
        return request,IEventSourceChangedEvent_getListenerResultMsg()

    soapAction[''] = 'soap_IEventSourceChangedEvent_getListener'
    root[(IEventSourceChangedEvent_getListenerRequestMsg.typecode.nspname,IEventSourceChangedEvent_getListenerRequestMsg.typecode.pname)] = 'soap_IEventSourceChangedEvent_getListener'

    def soap_IEventSourceChangedEvent_getAdd(self, ps, **kw):
        request = ps.Parse(IEventSourceChangedEvent_getAddRequestMsg.typecode)
        return request,IEventSourceChangedEvent_getAddResultMsg()

    soapAction[''] = 'soap_IEventSourceChangedEvent_getAdd'
    root[(IEventSourceChangedEvent_getAddRequestMsg.typecode.nspname,IEventSourceChangedEvent_getAddRequestMsg.typecode.pname)] = 'soap_IEventSourceChangedEvent_getAdd'

    def soap_IExtraDataChangedEvent_getMachineId(self, ps, **kw):
        request = ps.Parse(IExtraDataChangedEvent_getMachineIdRequestMsg.typecode)
        return request,IExtraDataChangedEvent_getMachineIdResultMsg()

    soapAction[''] = 'soap_IExtraDataChangedEvent_getMachineId'
    root[(IExtraDataChangedEvent_getMachineIdRequestMsg.typecode.nspname,IExtraDataChangedEvent_getMachineIdRequestMsg.typecode.pname)] = 'soap_IExtraDataChangedEvent_getMachineId'

    def soap_IExtraDataChangedEvent_getKey(self, ps, **kw):
        request = ps.Parse(IExtraDataChangedEvent_getKeyRequestMsg.typecode)
        return request,IExtraDataChangedEvent_getKeyResultMsg()

    soapAction[''] = 'soap_IExtraDataChangedEvent_getKey'
    root[(IExtraDataChangedEvent_getKeyRequestMsg.typecode.nspname,IExtraDataChangedEvent_getKeyRequestMsg.typecode.pname)] = 'soap_IExtraDataChangedEvent_getKey'

    def soap_IExtraDataChangedEvent_getValue(self, ps, **kw):
        request = ps.Parse(IExtraDataChangedEvent_getValueRequestMsg.typecode)
        return request,IExtraDataChangedEvent_getValueResultMsg()

    soapAction[''] = 'soap_IExtraDataChangedEvent_getValue'
    root[(IExtraDataChangedEvent_getValueRequestMsg.typecode.nspname,IExtraDataChangedEvent_getValueRequestMsg.typecode.pname)] = 'soap_IExtraDataChangedEvent_getValue'

    def soap_IVetoEvent_addVeto(self, ps, **kw):
        request = ps.Parse(IVetoEvent_addVetoRequestMsg.typecode)
        return request,IVetoEvent_addVetoResultMsg()

    soapAction[''] = 'soap_IVetoEvent_addVeto'
    root[(IVetoEvent_addVetoRequestMsg.typecode.nspname,IVetoEvent_addVetoRequestMsg.typecode.pname)] = 'soap_IVetoEvent_addVeto'

    def soap_IVetoEvent_isVetoed(self, ps, **kw):
        request = ps.Parse(IVetoEvent_isVetoedRequestMsg.typecode)
        return request,IVetoEvent_isVetoedResultMsg()

    soapAction[''] = 'soap_IVetoEvent_isVetoed'
    root[(IVetoEvent_isVetoedRequestMsg.typecode.nspname,IVetoEvent_isVetoedRequestMsg.typecode.pname)] = 'soap_IVetoEvent_isVetoed'

    def soap_IVetoEvent_getVetos(self, ps, **kw):
        request = ps.Parse(IVetoEvent_getVetosRequestMsg.typecode)
        return request,IVetoEvent_getVetosResultMsg()

    soapAction[''] = 'soap_IVetoEvent_getVetos'
    root[(IVetoEvent_getVetosRequestMsg.typecode.nspname,IVetoEvent_getVetosRequestMsg.typecode.pname)] = 'soap_IVetoEvent_getVetos'

    def soap_IVetoEvent_addApproval(self, ps, **kw):
        request = ps.Parse(IVetoEvent_addApprovalRequestMsg.typecode)
        return request,IVetoEvent_addApprovalResultMsg()

    soapAction[''] = 'soap_IVetoEvent_addApproval'
    root[(IVetoEvent_addApprovalRequestMsg.typecode.nspname,IVetoEvent_addApprovalRequestMsg.typecode.pname)] = 'soap_IVetoEvent_addApproval'

    def soap_IVetoEvent_isApproved(self, ps, **kw):
        request = ps.Parse(IVetoEvent_isApprovedRequestMsg.typecode)
        return request,IVetoEvent_isApprovedResultMsg()

    soapAction[''] = 'soap_IVetoEvent_isApproved'
    root[(IVetoEvent_isApprovedRequestMsg.typecode.nspname,IVetoEvent_isApprovedRequestMsg.typecode.pname)] = 'soap_IVetoEvent_isApproved'

    def soap_IVetoEvent_getApprovals(self, ps, **kw):
        request = ps.Parse(IVetoEvent_getApprovalsRequestMsg.typecode)
        return request,IVetoEvent_getApprovalsResultMsg()

    soapAction[''] = 'soap_IVetoEvent_getApprovals'
    root[(IVetoEvent_getApprovalsRequestMsg.typecode.nspname,IVetoEvent_getApprovalsRequestMsg.typecode.pname)] = 'soap_IVetoEvent_getApprovals'

    def soap_IExtraDataCanChangeEvent_getMachineId(self, ps, **kw):
        request = ps.Parse(IExtraDataCanChangeEvent_getMachineIdRequestMsg.typecode)
        return request,IExtraDataCanChangeEvent_getMachineIdResultMsg()

    soapAction[''] = 'soap_IExtraDataCanChangeEvent_getMachineId'
    root[(IExtraDataCanChangeEvent_getMachineIdRequestMsg.typecode.nspname,IExtraDataCanChangeEvent_getMachineIdRequestMsg.typecode.pname)] = 'soap_IExtraDataCanChangeEvent_getMachineId'

    def soap_IExtraDataCanChangeEvent_getKey(self, ps, **kw):
        request = ps.Parse(IExtraDataCanChangeEvent_getKeyRequestMsg.typecode)
        return request,IExtraDataCanChangeEvent_getKeyResultMsg()

    soapAction[''] = 'soap_IExtraDataCanChangeEvent_getKey'
    root[(IExtraDataCanChangeEvent_getKeyRequestMsg.typecode.nspname,IExtraDataCanChangeEvent_getKeyRequestMsg.typecode.pname)] = 'soap_IExtraDataCanChangeEvent_getKey'

    def soap_IExtraDataCanChangeEvent_getValue(self, ps, **kw):
        request = ps.Parse(IExtraDataCanChangeEvent_getValueRequestMsg.typecode)
        return request,IExtraDataCanChangeEvent_getValueResultMsg()

    soapAction[''] = 'soap_IExtraDataCanChangeEvent_getValue'
    root[(IExtraDataCanChangeEvent_getValueRequestMsg.typecode.nspname,IExtraDataCanChangeEvent_getValueRequestMsg.typecode.pname)] = 'soap_IExtraDataCanChangeEvent_getValue'

    def soap_ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfaces'

    def soap_IShowWindowEvent_getWinId(self, ps, **kw):
        request = ps.Parse(IShowWindowEvent_getWinIdRequestMsg.typecode)
        return request,IShowWindowEvent_getWinIdResultMsg()

    soapAction[''] = 'soap_IShowWindowEvent_getWinId'
    root[(IShowWindowEvent_getWinIdRequestMsg.typecode.nspname,IShowWindowEvent_getWinIdRequestMsg.typecode.pname)] = 'soap_IShowWindowEvent_getWinId'

    def soap_IShowWindowEvent_setWinId(self, ps, **kw):
        request = ps.Parse(IShowWindowEvent_setWinIdRequestMsg.typecode)
        return request,IShowWindowEvent_setWinIdResultMsg()

    soapAction[''] = 'soap_IShowWindowEvent_setWinId'
    root[(IShowWindowEvent_setWinIdRequestMsg.typecode.nspname,IShowWindowEvent_setWinIdRequestMsg.typecode.pname)] = 'soap_IShowWindowEvent_setWinId'

    def soap_INATRedirectEvent_getSlot(self, ps, **kw):
        request = ps.Parse(INATRedirectEvent_getSlotRequestMsg.typecode)
        return request,INATRedirectEvent_getSlotResultMsg()

    soapAction[''] = 'soap_INATRedirectEvent_getSlot'
    root[(INATRedirectEvent_getSlotRequestMsg.typecode.nspname,INATRedirectEvent_getSlotRequestMsg.typecode.pname)] = 'soap_INATRedirectEvent_getSlot'

    def soap_INATRedirectEvent_getRemove(self, ps, **kw):
        request = ps.Parse(INATRedirectEvent_getRemoveRequestMsg.typecode)
        return request,INATRedirectEvent_getRemoveResultMsg()

    soapAction[''] = 'soap_INATRedirectEvent_getRemove'
    root[(INATRedirectEvent_getRemoveRequestMsg.typecode.nspname,INATRedirectEvent_getRemoveRequestMsg.typecode.pname)] = 'soap_INATRedirectEvent_getRemove'

    def soap_INATRedirectEvent_getName(self, ps, **kw):
        request = ps.Parse(INATRedirectEvent_getNameRequestMsg.typecode)
        return request,INATRedirectEvent_getNameResultMsg()

    soapAction[''] = 'soap_INATRedirectEvent_getName'
    root[(INATRedirectEvent_getNameRequestMsg.typecode.nspname,INATRedirectEvent_getNameRequestMsg.typecode.pname)] = 'soap_INATRedirectEvent_getName'

    def soap_INATRedirectEvent_getProto(self, ps, **kw):
        request = ps.Parse(INATRedirectEvent_getProtoRequestMsg.typecode)
        return request,INATRedirectEvent_getProtoResultMsg()

    soapAction[''] = 'soap_INATRedirectEvent_getProto'
    root[(INATRedirectEvent_getProtoRequestMsg.typecode.nspname,INATRedirectEvent_getProtoRequestMsg.typecode.pname)] = 'soap_INATRedirectEvent_getProto'

    def soap_INATRedirectEvent_getHostIP(self, ps, **kw):
        request = ps.Parse(INATRedirectEvent_getHostIPRequestMsg.typecode)
        return request,INATRedirectEvent_getHostIPResultMsg()

    soapAction[''] = 'soap_INATRedirectEvent_getHostIP'
    root[(INATRedirectEvent_getHostIPRequestMsg.typecode.nspname,INATRedirectEvent_getHostIPRequestMsg.typecode.pname)] = 'soap_INATRedirectEvent_getHostIP'

    def soap_INATRedirectEvent_getHostPort(self, ps, **kw):
        request = ps.Parse(INATRedirectEvent_getHostPortRequestMsg.typecode)
        return request,INATRedirectEvent_getHostPortResultMsg()

    soapAction[''] = 'soap_INATRedirectEvent_getHostPort'
    root[(INATRedirectEvent_getHostPortRequestMsg.typecode.nspname,INATRedirectEvent_getHostPortRequestMsg.typecode.pname)] = 'soap_INATRedirectEvent_getHostPort'

    def soap_INATRedirectEvent_getGuestIP(self, ps, **kw):
        request = ps.Parse(INATRedirectEvent_getGuestIPRequestMsg.typecode)
        return request,INATRedirectEvent_getGuestIPResultMsg()

    soapAction[''] = 'soap_INATRedirectEvent_getGuestIP'
    root[(INATRedirectEvent_getGuestIPRequestMsg.typecode.nspname,INATRedirectEvent_getGuestIPRequestMsg.typecode.pname)] = 'soap_INATRedirectEvent_getGuestIP'

    def soap_INATRedirectEvent_getGuestPort(self, ps, **kw):
        request = ps.Parse(INATRedirectEvent_getGuestPortRequestMsg.typecode)
        return request,INATRedirectEvent_getGuestPortResultMsg()

    soapAction[''] = 'soap_INATRedirectEvent_getGuestPort'
    root[(INATRedirectEvent_getGuestPortRequestMsg.typecode.nspname,INATRedirectEvent_getGuestPortRequestMsg.typecode.pname)] = 'soap_INATRedirectEvent_getGuestPort'

    def soap_IHostPCIDevicePlugEvent_getPlugged(self, ps, **kw):
        request = ps.Parse(IHostPCIDevicePlugEvent_getPluggedRequestMsg.typecode)
        return request,IHostPCIDevicePlugEvent_getPluggedResultMsg()

    soapAction[''] = 'soap_IHostPCIDevicePlugEvent_getPlugged'
    root[(IHostPCIDevicePlugEvent_getPluggedRequestMsg.typecode.nspname,IHostPCIDevicePlugEvent_getPluggedRequestMsg.typecode.pname)] = 'soap_IHostPCIDevicePlugEvent_getPlugged'

    def soap_IHostPCIDevicePlugEvent_getSuccess(self, ps, **kw):
        request = ps.Parse(IHostPCIDevicePlugEvent_getSuccessRequestMsg.typecode)
        return request,IHostPCIDevicePlugEvent_getSuccessResultMsg()

    soapAction[''] = 'soap_IHostPCIDevicePlugEvent_getSuccess'
    root[(IHostPCIDevicePlugEvent_getSuccessRequestMsg.typecode.nspname,IHostPCIDevicePlugEvent_getSuccessRequestMsg.typecode.pname)] = 'soap_IHostPCIDevicePlugEvent_getSuccess'

    def soap_IHostPCIDevicePlugEvent_getAttachment(self, ps, **kw):
        request = ps.Parse(IHostPCIDevicePlugEvent_getAttachmentRequestMsg.typecode)
        return request,IHostPCIDevicePlugEvent_getAttachmentResultMsg()

    soapAction[''] = 'soap_IHostPCIDevicePlugEvent_getAttachment'
    root[(IHostPCIDevicePlugEvent_getAttachmentRequestMsg.typecode.nspname,IHostPCIDevicePlugEvent_getAttachmentRequestMsg.typecode.pname)] = 'soap_IHostPCIDevicePlugEvent_getAttachment'

    def soap_IHostPCIDevicePlugEvent_getMessage(self, ps, **kw):
        request = ps.Parse(IHostPCIDevicePlugEvent_getMessageRequestMsg.typecode)
        return request,IHostPCIDevicePlugEvent_getMessageResultMsg()

    soapAction[''] = 'soap_IHostPCIDevicePlugEvent_getMessage'
    root[(IHostPCIDevicePlugEvent_getMessageRequestMsg.typecode.nspname,IHostPCIDevicePlugEvent_getMessageRequestMsg.typecode.pname)] = 'soap_IHostPCIDevicePlugEvent_getMessage'

    def soap_IVBoxSVCAvailabilityChangedEvent_getAvailable(self, ps, **kw):
        request = ps.Parse(IVBoxSVCAvailabilityChangedEvent_getAvailableRequestMsg.typecode)
        return request,IVBoxSVCAvailabilityChangedEvent_getAvailableResultMsg()

    soapAction[''] = 'soap_IVBoxSVCAvailabilityChangedEvent_getAvailable'
    root[(IVBoxSVCAvailabilityChangedEvent_getAvailableRequestMsg.typecode.nspname,IVBoxSVCAvailabilityChangedEvent_getAvailableRequestMsg.typecode.pname)] = 'soap_IVBoxSVCAvailabilityChangedEvent_getAvailable'

    def soap_IBandwidthGroupChangedEvent_getBandwidthGroup(self, ps, **kw):
        request = ps.Parse(IBandwidthGroupChangedEvent_getBandwidthGroupRequestMsg.typecode)
        return request,IBandwidthGroupChangedEvent_getBandwidthGroupResultMsg()

    soapAction[''] = 'soap_IBandwidthGroupChangedEvent_getBandwidthGroup'
    root[(IBandwidthGroupChangedEvent_getBandwidthGroupRequestMsg.typecode.nspname,IBandwidthGroupChangedEvent_getBandwidthGroupRequestMsg.typecode.pname)] = 'soap_IBandwidthGroupChangedEvent_getBandwidthGroup'

    def soap_IGuestMonitorChangedEvent_getChangeType(self, ps, **kw):
        request = ps.Parse(IGuestMonitorChangedEvent_getChangeTypeRequestMsg.typecode)
        return request,IGuestMonitorChangedEvent_getChangeTypeResultMsg()

    soapAction[''] = 'soap_IGuestMonitorChangedEvent_getChangeType'
    root[(IGuestMonitorChangedEvent_getChangeTypeRequestMsg.typecode.nspname,IGuestMonitorChangedEvent_getChangeTypeRequestMsg.typecode.pname)] = 'soap_IGuestMonitorChangedEvent_getChangeType'

    def soap_IGuestMonitorChangedEvent_getScreenId(self, ps, **kw):
        request = ps.Parse(IGuestMonitorChangedEvent_getScreenIdRequestMsg.typecode)
        return request,IGuestMonitorChangedEvent_getScreenIdResultMsg()

    soapAction[''] = 'soap_IGuestMonitorChangedEvent_getScreenId'
    root[(IGuestMonitorChangedEvent_getScreenIdRequestMsg.typecode.nspname,IGuestMonitorChangedEvent_getScreenIdRequestMsg.typecode.pname)] = 'soap_IGuestMonitorChangedEvent_getScreenId'

    def soap_IGuestMonitorChangedEvent_getOriginX(self, ps, **kw):
        request = ps.Parse(IGuestMonitorChangedEvent_getOriginXRequestMsg.typecode)
        return request,IGuestMonitorChangedEvent_getOriginXResultMsg()

    soapAction[''] = 'soap_IGuestMonitorChangedEvent_getOriginX'
    root[(IGuestMonitorChangedEvent_getOriginXRequestMsg.typecode.nspname,IGuestMonitorChangedEvent_getOriginXRequestMsg.typecode.pname)] = 'soap_IGuestMonitorChangedEvent_getOriginX'

    def soap_IGuestMonitorChangedEvent_getOriginY(self, ps, **kw):
        request = ps.Parse(IGuestMonitorChangedEvent_getOriginYRequestMsg.typecode)
        return request,IGuestMonitorChangedEvent_getOriginYResultMsg()

    soapAction[''] = 'soap_IGuestMonitorChangedEvent_getOriginY'
    root[(IGuestMonitorChangedEvent_getOriginYRequestMsg.typecode.nspname,IGuestMonitorChangedEvent_getOriginYRequestMsg.typecode.pname)] = 'soap_IGuestMonitorChangedEvent_getOriginY'

    def soap_IGuestMonitorChangedEvent_getWidth(self, ps, **kw):
        request = ps.Parse(IGuestMonitorChangedEvent_getWidthRequestMsg.typecode)
        return request,IGuestMonitorChangedEvent_getWidthResultMsg()

    soapAction[''] = 'soap_IGuestMonitorChangedEvent_getWidth'
    root[(IGuestMonitorChangedEvent_getWidthRequestMsg.typecode.nspname,IGuestMonitorChangedEvent_getWidthRequestMsg.typecode.pname)] = 'soap_IGuestMonitorChangedEvent_getWidth'

    def soap_IGuestMonitorChangedEvent_getHeight(self, ps, **kw):
        request = ps.Parse(IGuestMonitorChangedEvent_getHeightRequestMsg.typecode)
        return request,IGuestMonitorChangedEvent_getHeightResultMsg()

    soapAction[''] = 'soap_IGuestMonitorChangedEvent_getHeight'
    root[(IGuestMonitorChangedEvent_getHeightRequestMsg.typecode.nspname,IGuestMonitorChangedEvent_getHeightRequestMsg.typecode.pname)] = 'soap_IGuestMonitorChangedEvent_getHeight'

    def soap_IGuestUserStateChangedEvent_getName(self, ps, **kw):
        request = ps.Parse(IGuestUserStateChangedEvent_getNameRequestMsg.typecode)
        return request,IGuestUserStateChangedEvent_getNameResultMsg()

    soapAction[''] = 'soap_IGuestUserStateChangedEvent_getName'
    root[(IGuestUserStateChangedEvent_getNameRequestMsg.typecode.nspname,IGuestUserStateChangedEvent_getNameRequestMsg.typecode.pname)] = 'soap_IGuestUserStateChangedEvent_getName'

    def soap_IGuestUserStateChangedEvent_getDomain(self, ps, **kw):
        request = ps.Parse(IGuestUserStateChangedEvent_getDomainRequestMsg.typecode)
        return request,IGuestUserStateChangedEvent_getDomainResultMsg()

    soapAction[''] = 'soap_IGuestUserStateChangedEvent_getDomain'
    root[(IGuestUserStateChangedEvent_getDomainRequestMsg.typecode.nspname,IGuestUserStateChangedEvent_getDomainRequestMsg.typecode.pname)] = 'soap_IGuestUserStateChangedEvent_getDomain'

    def soap_IGuestUserStateChangedEvent_getState(self, ps, **kw):
        request = ps.Parse(IGuestUserStateChangedEvent_getStateRequestMsg.typecode)
        return request,IGuestUserStateChangedEvent_getStateResultMsg()

    soapAction[''] = 'soap_IGuestUserStateChangedEvent_getState'
    root[(IGuestUserStateChangedEvent_getStateRequestMsg.typecode.nspname,IGuestUserStateChangedEvent_getStateRequestMsg.typecode.pname)] = 'soap_IGuestUserStateChangedEvent_getState'

    def soap_IGuestUserStateChangedEvent_getStateDetails(self, ps, **kw):
        request = ps.Parse(IGuestUserStateChangedEvent_getStateDetailsRequestMsg.typecode)
        return request,IGuestUserStateChangedEvent_getStateDetailsResultMsg()

    soapAction[''] = 'soap_IGuestUserStateChangedEvent_getStateDetails'
    root[(IGuestUserStateChangedEvent_getStateDetailsRequestMsg.typecode.nspname,IGuestUserStateChangedEvent_getStateDetailsRequestMsg.typecode.pname)] = 'soap_IGuestUserStateChangedEvent_getStateDetails'

    def soap_IStorageDeviceChangedEvent_getStorageDevice(self, ps, **kw):
        request = ps.Parse(IStorageDeviceChangedEvent_getStorageDeviceRequestMsg.typecode)
        return request,IStorageDeviceChangedEvent_getStorageDeviceResultMsg()

    soapAction[''] = 'soap_IStorageDeviceChangedEvent_getStorageDevice'
    root[(IStorageDeviceChangedEvent_getStorageDeviceRequestMsg.typecode.nspname,IStorageDeviceChangedEvent_getStorageDeviceRequestMsg.typecode.pname)] = 'soap_IStorageDeviceChangedEvent_getStorageDevice'

    def soap_IStorageDeviceChangedEvent_getRemoved(self, ps, **kw):
        request = ps.Parse(IStorageDeviceChangedEvent_getRemovedRequestMsg.typecode)
        return request,IStorageDeviceChangedEvent_getRemovedResultMsg()

    soapAction[''] = 'soap_IStorageDeviceChangedEvent_getRemoved'
    root[(IStorageDeviceChangedEvent_getRemovedRequestMsg.typecode.nspname,IStorageDeviceChangedEvent_getRemovedRequestMsg.typecode.pname)] = 'soap_IStorageDeviceChangedEvent_getRemoved'

    def soap_IStorageDeviceChangedEvent_getSilent(self, ps, **kw):
        request = ps.Parse(IStorageDeviceChangedEvent_getSilentRequestMsg.typecode)
        return request,IStorageDeviceChangedEvent_getSilentResultMsg()

    soapAction[''] = 'soap_IStorageDeviceChangedEvent_getSilent'
    root[(IStorageDeviceChangedEvent_getSilentRequestMsg.typecode.nspname,IStorageDeviceChangedEvent_getSilentRequestMsg.typecode.pname)] = 'soap_IStorageDeviceChangedEvent_getSilent'

    def soap_INATNetworkChangedEvent_getNetworkName(self, ps, **kw):
        request = ps.Parse(INATNetworkChangedEvent_getNetworkNameRequestMsg.typecode)
        return request,INATNetworkChangedEvent_getNetworkNameResultMsg()

    soapAction[''] = 'soap_INATNetworkChangedEvent_getNetworkName'
    root[(INATNetworkChangedEvent_getNetworkNameRequestMsg.typecode.nspname,INATNetworkChangedEvent_getNetworkNameRequestMsg.typecode.pname)] = 'soap_INATNetworkChangedEvent_getNetworkName'

    def soap_INATNetworkStartStopEvent_getStartEvent(self, ps, **kw):
        request = ps.Parse(INATNetworkStartStopEvent_getStartEventRequestMsg.typecode)
        return request,INATNetworkStartStopEvent_getStartEventResultMsg()

    soapAction[''] = 'soap_INATNetworkStartStopEvent_getStartEvent'
    root[(INATNetworkStartStopEvent_getStartEventRequestMsg.typecode.nspname,INATNetworkStartStopEvent_getStartEventRequestMsg.typecode.pname)] = 'soap_INATNetworkStartStopEvent_getStartEvent'

    def soap_INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfaces'

    def soap_INATNetworkCreationDeletionEvent_getCreationEvent(self, ps, **kw):
        request = ps.Parse(INATNetworkCreationDeletionEvent_getCreationEventRequestMsg.typecode)
        return request,INATNetworkCreationDeletionEvent_getCreationEventResultMsg()

    soapAction[''] = 'soap_INATNetworkCreationDeletionEvent_getCreationEvent'
    root[(INATNetworkCreationDeletionEvent_getCreationEventRequestMsg.typecode.nspname,INATNetworkCreationDeletionEvent_getCreationEventRequestMsg.typecode.pname)] = 'soap_INATNetworkCreationDeletionEvent_getCreationEvent'

    def soap_INATNetworkSettingEvent_getEnabled(self, ps, **kw):
        request = ps.Parse(INATNetworkSettingEvent_getEnabledRequestMsg.typecode)
        return request,INATNetworkSettingEvent_getEnabledResultMsg()

    soapAction[''] = 'soap_INATNetworkSettingEvent_getEnabled'
    root[(INATNetworkSettingEvent_getEnabledRequestMsg.typecode.nspname,INATNetworkSettingEvent_getEnabledRequestMsg.typecode.pname)] = 'soap_INATNetworkSettingEvent_getEnabled'

    def soap_INATNetworkSettingEvent_getNetwork(self, ps, **kw):
        request = ps.Parse(INATNetworkSettingEvent_getNetworkRequestMsg.typecode)
        return request,INATNetworkSettingEvent_getNetworkResultMsg()

    soapAction[''] = 'soap_INATNetworkSettingEvent_getNetwork'
    root[(INATNetworkSettingEvent_getNetworkRequestMsg.typecode.nspname,INATNetworkSettingEvent_getNetworkRequestMsg.typecode.pname)] = 'soap_INATNetworkSettingEvent_getNetwork'

    def soap_INATNetworkSettingEvent_getGateway(self, ps, **kw):
        request = ps.Parse(INATNetworkSettingEvent_getGatewayRequestMsg.typecode)
        return request,INATNetworkSettingEvent_getGatewayResultMsg()

    soapAction[''] = 'soap_INATNetworkSettingEvent_getGateway'
    root[(INATNetworkSettingEvent_getGatewayRequestMsg.typecode.nspname,INATNetworkSettingEvent_getGatewayRequestMsg.typecode.pname)] = 'soap_INATNetworkSettingEvent_getGateway'

    def soap_INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabled(self, ps, **kw):
        request = ps.Parse(INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabledRequestMsg.typecode)
        return request,INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabledResultMsg()

    soapAction[''] = 'soap_INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabled'
    root[(INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabledRequestMsg.typecode.nspname,INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabledRequestMsg.typecode.pname)] = 'soap_INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabled'

    def soap_INATNetworkSettingEvent_getNeedDhcpServer(self, ps, **kw):
        request = ps.Parse(INATNetworkSettingEvent_getNeedDhcpServerRequestMsg.typecode)
        return request,INATNetworkSettingEvent_getNeedDhcpServerResultMsg()

    soapAction[''] = 'soap_INATNetworkSettingEvent_getNeedDhcpServer'
    root[(INATNetworkSettingEvent_getNeedDhcpServerRequestMsg.typecode.nspname,INATNetworkSettingEvent_getNeedDhcpServerRequestMsg.typecode.pname)] = 'soap_INATNetworkSettingEvent_getNeedDhcpServer'

    def soap_INATNetworkPortForwardEvent_getCreate(self, ps, **kw):
        request = ps.Parse(INATNetworkPortForwardEvent_getCreateRequestMsg.typecode)
        return request,INATNetworkPortForwardEvent_getCreateResultMsg()

    soapAction[''] = 'soap_INATNetworkPortForwardEvent_getCreate'
    root[(INATNetworkPortForwardEvent_getCreateRequestMsg.typecode.nspname,INATNetworkPortForwardEvent_getCreateRequestMsg.typecode.pname)] = 'soap_INATNetworkPortForwardEvent_getCreate'

    def soap_INATNetworkPortForwardEvent_getIpv6(self, ps, **kw):
        request = ps.Parse(INATNetworkPortForwardEvent_getIpv6RequestMsg.typecode)
        return request,INATNetworkPortForwardEvent_getIpv6ResultMsg()

    soapAction[''] = 'soap_INATNetworkPortForwardEvent_getIpv6'
    root[(INATNetworkPortForwardEvent_getIpv6RequestMsg.typecode.nspname,INATNetworkPortForwardEvent_getIpv6RequestMsg.typecode.pname)] = 'soap_INATNetworkPortForwardEvent_getIpv6'

    def soap_INATNetworkPortForwardEvent_getName(self, ps, **kw):
        request = ps.Parse(INATNetworkPortForwardEvent_getNameRequestMsg.typecode)
        return request,INATNetworkPortForwardEvent_getNameResultMsg()

    soapAction[''] = 'soap_INATNetworkPortForwardEvent_getName'
    root[(INATNetworkPortForwardEvent_getNameRequestMsg.typecode.nspname,INATNetworkPortForwardEvent_getNameRequestMsg.typecode.pname)] = 'soap_INATNetworkPortForwardEvent_getName'

    def soap_INATNetworkPortForwardEvent_getProto(self, ps, **kw):
        request = ps.Parse(INATNetworkPortForwardEvent_getProtoRequestMsg.typecode)
        return request,INATNetworkPortForwardEvent_getProtoResultMsg()

    soapAction[''] = 'soap_INATNetworkPortForwardEvent_getProto'
    root[(INATNetworkPortForwardEvent_getProtoRequestMsg.typecode.nspname,INATNetworkPortForwardEvent_getProtoRequestMsg.typecode.pname)] = 'soap_INATNetworkPortForwardEvent_getProto'

    def soap_INATNetworkPortForwardEvent_getHostIp(self, ps, **kw):
        request = ps.Parse(INATNetworkPortForwardEvent_getHostIpRequestMsg.typecode)
        return request,INATNetworkPortForwardEvent_getHostIpResultMsg()

    soapAction[''] = 'soap_INATNetworkPortForwardEvent_getHostIp'
    root[(INATNetworkPortForwardEvent_getHostIpRequestMsg.typecode.nspname,INATNetworkPortForwardEvent_getHostIpRequestMsg.typecode.pname)] = 'soap_INATNetworkPortForwardEvent_getHostIp'

    def soap_INATNetworkPortForwardEvent_getHostPort(self, ps, **kw):
        request = ps.Parse(INATNetworkPortForwardEvent_getHostPortRequestMsg.typecode)
        return request,INATNetworkPortForwardEvent_getHostPortResultMsg()

    soapAction[''] = 'soap_INATNetworkPortForwardEvent_getHostPort'
    root[(INATNetworkPortForwardEvent_getHostPortRequestMsg.typecode.nspname,INATNetworkPortForwardEvent_getHostPortRequestMsg.typecode.pname)] = 'soap_INATNetworkPortForwardEvent_getHostPort'

    def soap_INATNetworkPortForwardEvent_getGuestIp(self, ps, **kw):
        request = ps.Parse(INATNetworkPortForwardEvent_getGuestIpRequestMsg.typecode)
        return request,INATNetworkPortForwardEvent_getGuestIpResultMsg()

    soapAction[''] = 'soap_INATNetworkPortForwardEvent_getGuestIp'
    root[(INATNetworkPortForwardEvent_getGuestIpRequestMsg.typecode.nspname,INATNetworkPortForwardEvent_getGuestIpRequestMsg.typecode.pname)] = 'soap_INATNetworkPortForwardEvent_getGuestIp'

    def soap_INATNetworkPortForwardEvent_getGuestPort(self, ps, **kw):
        request = ps.Parse(INATNetworkPortForwardEvent_getGuestPortRequestMsg.typecode)
        return request,INATNetworkPortForwardEvent_getGuestPortResultMsg()

    soapAction[''] = 'soap_INATNetworkPortForwardEvent_getGuestPort'
    root[(INATNetworkPortForwardEvent_getGuestPortRequestMsg.typecode.nspname,INATNetworkPortForwardEvent_getGuestPortRequestMsg.typecode.pname)] = 'soap_INATNetworkPortForwardEvent_getGuestPort'

    def soap_IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfaces(self, ps, **kw):
        request = ps.Parse(IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode)
        return request,IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg()

    soapAction[''] = 'soap_IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfaces'
    root[(IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.nspname,IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg.typecode.pname)] = 'soap_IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfaces'

